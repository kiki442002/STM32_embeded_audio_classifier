ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32f7xx_hal_cortex.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c"
  19              		.section	.text.__NVIC_DisableIRQ,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	__NVIC_DisableIRQ:
  26              	.LVL0:
  27              	.LFB106:
  28              		.file 2 "Drivers/CMSIS/Include/core_cm7.h"
   1:Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************/ /**
   2:Drivers/CMSIS/Include/core_cm7.h ****                                                                               * @file     core_cm7.
   3:Drivers/CMSIS/Include/core_cm7.h ****                                                                               * @brief    CMSIS Cor
   4:Drivers/CMSIS/Include/core_cm7.h ****                                                                               * @version  V5.0.8
   5:Drivers/CMSIS/Include/core_cm7.h ****                                                                               * @date     04. June 
   6:Drivers/CMSIS/Include/core_cm7.h ****                                                                               *********************
   7:Drivers/CMSIS/Include/core_cm7.h **** /*
   8:Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm7.h ****  *
  10:Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm7.h ****  *
  12:Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm7.h ****  *
  16:Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm7.h ****  *
  18:Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm7.h ****  */
  24:Drivers/CMSIS/Include/core_cm7.h **** 
  25:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__ICCARM__)
  26:Drivers/CMSIS/Include/core_cm7.h **** #pragma system_include /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__clang__)
  28:Drivers/CMSIS/Include/core_cm7.h **** #pragma clang system_header /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 2


  31:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm7.h **** 
  34:Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm7.h **** 
  36:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm7.h **** extern "C"
  38:Drivers/CMSIS/Include/core_cm7.h **** {
  39:Drivers/CMSIS/Include/core_cm7.h **** #endif
  40:Drivers/CMSIS/Include/core_cm7.h **** 
  41:Drivers/CMSIS/Include/core_cm7.h ****   /**
  42:Drivers/CMSIS/Include/core_cm7.h ****     \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  43:Drivers/CMSIS/Include/core_cm7.h ****     CMSIS violates the following MISRA-C:2004 rules:
  44:Drivers/CMSIS/Include/core_cm7.h **** 
  45:Drivers/CMSIS/Include/core_cm7.h ****      \li Required Rule 8.5, object/function definition in header file.<br>
  46:Drivers/CMSIS/Include/core_cm7.h ****        Function definitions in header files are used to allow 'inlining'.
  47:Drivers/CMSIS/Include/core_cm7.h **** 
  48:Drivers/CMSIS/Include/core_cm7.h ****      \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  49:Drivers/CMSIS/Include/core_cm7.h ****        Unions are used for effective representation of core registers.
  50:Drivers/CMSIS/Include/core_cm7.h **** 
  51:Drivers/CMSIS/Include/core_cm7.h ****      \li Advisory Rule 19.7, Function-like macro defined.<br>
  52:Drivers/CMSIS/Include/core_cm7.h ****        Function-like macros are used to allow more efficient code.
  53:Drivers/CMSIS/Include/core_cm7.h ****    */
  54:Drivers/CMSIS/Include/core_cm7.h **** 
  55:Drivers/CMSIS/Include/core_cm7.h ****   /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm7.h ****    *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm7.h ****    ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm7.h ****   /**
  59:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup Cortex_M7
  60:Drivers/CMSIS/Include/core_cm7.h ****     @{
  61:Drivers/CMSIS/Include/core_cm7.h ****    */
  62:Drivers/CMSIS/Include/core_cm7.h **** 
  63:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm7.h **** 
  65:Drivers/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN (__CM_CMSIS_VERSION_MAIN) /*!< \deprecated [31:16] CMSIS HAL main 
  67:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB (__CM_CMSIS_VERSION_SUB)   /*!< \deprecated [15:0]  CMSIS HAL sub v
  68:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm7.h ****                              __CM7_CMSIS_VERSION_SUB) /*!< \deprecated CMSIS HAL version number */
  70:Drivers/CMSIS/Include/core_cm7.h **** 
  71:Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M (7U) /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_PRESENT 1U
  73:Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm7.h **** */
  76:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__CC_ARM)
  77:Drivers/CMSIS/Include/core_cm7.h **** #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
  80:Drivers/CMSIS/Include/core_cm7.h **** #else
  81:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  82:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
  83:Drivers/CMSIS/Include/core_cm7.h **** #endif
  84:Drivers/CMSIS/Include/core_cm7.h **** #else
  85:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
  86:Drivers/CMSIS/Include/core_cm7.h **** #endif
  87:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 3


  88:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm7.h **** #if defined __ARM_PCS_VFP
  90:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
  92:Drivers/CMSIS/Include/core_cm7.h **** #else
  93:Drivers/CMSIS/Include/core_cm7.h **** #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  94:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
  95:Drivers/CMSIS/Include/core_cm7.h **** #endif
  96:Drivers/CMSIS/Include/core_cm7.h **** #else
  97:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
  98:Drivers/CMSIS/Include/core_cm7.h **** #endif
  99:Drivers/CMSIS/Include/core_cm7.h **** 
 100:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__GNUC__)
 101:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
 104:Drivers/CMSIS/Include/core_cm7.h **** #else
 105:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 107:Drivers/CMSIS/Include/core_cm7.h **** #endif
 108:Drivers/CMSIS/Include/core_cm7.h **** #else
 109:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 110:Drivers/CMSIS/Include/core_cm7.h **** #endif
 111:Drivers/CMSIS/Include/core_cm7.h **** 
 112:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ICCARM__)
 113:Drivers/CMSIS/Include/core_cm7.h **** #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
 116:Drivers/CMSIS/Include/core_cm7.h **** #else
 117:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 118:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 119:Drivers/CMSIS/Include/core_cm7.h **** #endif
 120:Drivers/CMSIS/Include/core_cm7.h **** #else
 121:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 122:Drivers/CMSIS/Include/core_cm7.h **** #endif
 123:Drivers/CMSIS/Include/core_cm7.h **** 
 124:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__TI_ARM__)
 125:Drivers/CMSIS/Include/core_cm7.h **** #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
 128:Drivers/CMSIS/Include/core_cm7.h **** #else
 129:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 130:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 131:Drivers/CMSIS/Include/core_cm7.h **** #endif
 132:Drivers/CMSIS/Include/core_cm7.h **** #else
 133:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 134:Drivers/CMSIS/Include/core_cm7.h **** #endif
 135:Drivers/CMSIS/Include/core_cm7.h **** 
 136:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__TASKING__)
 137:Drivers/CMSIS/Include/core_cm7.h **** #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
 140:Drivers/CMSIS/Include/core_cm7.h **** #else
 141:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 142:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 143:Drivers/CMSIS/Include/core_cm7.h **** #endif
 144:Drivers/CMSIS/Include/core_cm7.h **** #else
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 4


 145:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 146:Drivers/CMSIS/Include/core_cm7.h **** #endif
 147:Drivers/CMSIS/Include/core_cm7.h **** 
 148:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__CSMC__)
 149:Drivers/CMSIS/Include/core_cm7.h **** #if (__CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
 152:Drivers/CMSIS/Include/core_cm7.h **** #else
 153:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 155:Drivers/CMSIS/Include/core_cm7.h **** #endif
 156:Drivers/CMSIS/Include/core_cm7.h **** #else
 157:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 158:Drivers/CMSIS/Include/core_cm7.h **** #endif
 159:Drivers/CMSIS/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Include/core_cm7.h **** #endif
 161:Drivers/CMSIS/Include/core_cm7.h **** 
 162:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h" /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm7.h **** 
 164:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 165:Drivers/CMSIS/Include/core_cm7.h **** }
 166:Drivers/CMSIS/Include/core_cm7.h **** #endif
 167:Drivers/CMSIS/Include/core_cm7.h **** 
 168:Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 169:Drivers/CMSIS/Include/core_cm7.h **** 
 170:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 171:Drivers/CMSIS/Include/core_cm7.h **** 
 172:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 173:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm7.h **** 
 175:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 176:Drivers/CMSIS/Include/core_cm7.h **** extern "C"
 177:Drivers/CMSIS/Include/core_cm7.h **** {
 178:Drivers/CMSIS/Include/core_cm7.h **** #endif
 179:Drivers/CMSIS/Include/core_cm7.h **** 
 180:Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CM7_REV
 183:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_REV 0x0000U
 184:Drivers/CMSIS/Include/core_cm7.h **** #warning "__CM7_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm7.h **** #endif
 186:Drivers/CMSIS/Include/core_cm7.h **** 
 187:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_PRESENT 0U
 189:Drivers/CMSIS/Include/core_cm7.h **** #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm7.h **** #endif
 191:Drivers/CMSIS/Include/core_cm7.h **** 
 192:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm7.h **** #define __MPU_PRESENT 0U
 194:Drivers/CMSIS/Include/core_cm7.h **** #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm7.h **** #endif
 196:Drivers/CMSIS/Include/core_cm7.h **** 
 197:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __ICACHE_PRESENT
 198:Drivers/CMSIS/Include/core_cm7.h **** #define __ICACHE_PRESENT 0U
 199:Drivers/CMSIS/Include/core_cm7.h **** #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm7.h **** #endif
 201:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 5


 202:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __DCACHE_PRESENT
 203:Drivers/CMSIS/Include/core_cm7.h **** #define __DCACHE_PRESENT 0U
 204:Drivers/CMSIS/Include/core_cm7.h **** #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm7.h **** #endif
 206:Drivers/CMSIS/Include/core_cm7.h **** 
 207:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __DTCM_PRESENT
 208:Drivers/CMSIS/Include/core_cm7.h **** #define __DTCM_PRESENT 0U
 209:Drivers/CMSIS/Include/core_cm7.h **** #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm7.h **** #endif
 211:Drivers/CMSIS/Include/core_cm7.h **** 
 212:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __NVIC_PRIO_BITS
 213:Drivers/CMSIS/Include/core_cm7.h **** #define __NVIC_PRIO_BITS 3U
 214:Drivers/CMSIS/Include/core_cm7.h **** #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:Drivers/CMSIS/Include/core_cm7.h **** #endif
 216:Drivers/CMSIS/Include/core_cm7.h **** 
 217:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __Vendor_SysTickConfig
 218:Drivers/CMSIS/Include/core_cm7.h **** #define __Vendor_SysTickConfig 0U
 219:Drivers/CMSIS/Include/core_cm7.h **** #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:Drivers/CMSIS/Include/core_cm7.h **** #endif
 221:Drivers/CMSIS/Include/core_cm7.h **** #endif
 222:Drivers/CMSIS/Include/core_cm7.h **** 
 223:Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:Drivers/CMSIS/Include/core_cm7.h **** /**
 225:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:Drivers/CMSIS/Include/core_cm7.h **** 
 227:Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:Drivers/CMSIS/Include/core_cm7.h **** */
 231:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:Drivers/CMSIS/Include/core_cm7.h **** #define __I volatile /*!< Defines 'read only' permissions */
 233:Drivers/CMSIS/Include/core_cm7.h **** #else
 234:Drivers/CMSIS/Include/core_cm7.h **** #define __I volatile const /*!< Defines 'read only' permissions */
 235:Drivers/CMSIS/Include/core_cm7.h **** #endif
 236:Drivers/CMSIS/Include/core_cm7.h **** #define __O volatile  /*!< Defines 'write only' permissions */
 237:Drivers/CMSIS/Include/core_cm7.h **** #define __IO volatile /*!< Defines 'read / write' permissions */
 238:Drivers/CMSIS/Include/core_cm7.h **** 
 239:Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:Drivers/CMSIS/Include/core_cm7.h **** #define __IM volatile const /*! Defines 'read only' structure member permissions */
 241:Drivers/CMSIS/Include/core_cm7.h **** #define __OM volatile       /*! Defines 'write only' structure member permissions */
 242:Drivers/CMSIS/Include/core_cm7.h **** #define __IOM volatile      /*! Defines 'read / write' structure member permissions */
 243:Drivers/CMSIS/Include/core_cm7.h **** 
 244:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group Cortex_M7 */
 245:Drivers/CMSIS/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Include/core_cm7.h ****   /*******************************************************************************
 247:Drivers/CMSIS/Include/core_cm7.h ****    *                 Register Abstraction
 248:Drivers/CMSIS/Include/core_cm7.h ****     Core Register contain:
 249:Drivers/CMSIS/Include/core_cm7.h ****     - Core Register
 250:Drivers/CMSIS/Include/core_cm7.h ****     - Core NVIC Register
 251:Drivers/CMSIS/Include/core_cm7.h ****     - Core SCB Register
 252:Drivers/CMSIS/Include/core_cm7.h ****     - Core SysTick Register
 253:Drivers/CMSIS/Include/core_cm7.h ****     - Core Debug Register
 254:Drivers/CMSIS/Include/core_cm7.h ****     - Core MPU Register
 255:Drivers/CMSIS/Include/core_cm7.h ****     - Core FPU Register
 256:Drivers/CMSIS/Include/core_cm7.h ****    ******************************************************************************/
 257:Drivers/CMSIS/Include/core_cm7.h ****   /**
 258:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_core_register Defines and Type Definitions
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 6


 259:Drivers/CMSIS/Include/core_cm7.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 260:Drivers/CMSIS/Include/core_cm7.h ****   */
 261:Drivers/CMSIS/Include/core_cm7.h **** 
 262:Drivers/CMSIS/Include/core_cm7.h ****   /**
 263:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup    CMSIS_core_register
 264:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 265:Drivers/CMSIS/Include/core_cm7.h ****     \brief      Core Register type definitions.
 266:Drivers/CMSIS/Include/core_cm7.h ****     @{
 267:Drivers/CMSIS/Include/core_cm7.h ****    */
 268:Drivers/CMSIS/Include/core_cm7.h **** 
 269:Drivers/CMSIS/Include/core_cm7.h ****   /**
 270:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Union type to access the Application Program Status Register (APSR).
 271:Drivers/CMSIS/Include/core_cm7.h ****    */
 272:Drivers/CMSIS/Include/core_cm7.h ****   typedef union
 273:Drivers/CMSIS/Include/core_cm7.h ****   {
 274:Drivers/CMSIS/Include/core_cm7.h ****     struct
 275:Drivers/CMSIS/Include/core_cm7.h ****     {
 276:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved0 : 16; /*!< bit:  0..15  Reserved */
 277:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t GE : 4;          /*!< bit: 16..19  Greater than or Equal flags */
 278:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved1 : 7;  /*!< bit: 20..26  Reserved */
 279:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t Q : 1;           /*!< bit:     27  Saturation condition flag */
 280:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t V : 1;           /*!< bit:     28  Overflow condition code flag */
 281:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t C : 1;           /*!< bit:     29  Carry condition code flag */
 282:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t Z : 1;           /*!< bit:     30  Zero condition code flag */
 283:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t N : 1;           /*!< bit:     31  Negative condition code flag */
 284:Drivers/CMSIS/Include/core_cm7.h ****     } b;                        /*!< Structure used for bit  access */
 285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t w;                 /*!< Type      used for word access */
 286:Drivers/CMSIS/Include/core_cm7.h ****   } APSR_Type;
 287:Drivers/CMSIS/Include/core_cm7.h **** 
 288:Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 289:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos 31U                 /*!< APSR: N Position */
 290:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk (1UL << APSR_N_Pos) /*!< APSR: N Mask */
 291:Drivers/CMSIS/Include/core_cm7.h **** 
 292:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos 30U                 /*!< APSR: Z Position */
 293:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk (1UL << APSR_Z_Pos) /*!< APSR: Z Mask */
 294:Drivers/CMSIS/Include/core_cm7.h **** 
 295:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos 29U                 /*!< APSR: C Position */
 296:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk (1UL << APSR_C_Pos) /*!< APSR: C Mask */
 297:Drivers/CMSIS/Include/core_cm7.h **** 
 298:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos 28U                 /*!< APSR: V Position */
 299:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk (1UL << APSR_V_Pos) /*!< APSR: V Mask */
 300:Drivers/CMSIS/Include/core_cm7.h **** 
 301:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos 27U                 /*!< APSR: Q Position */
 302:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk (1UL << APSR_Q_Pos) /*!< APSR: Q Mask */
 303:Drivers/CMSIS/Include/core_cm7.h **** 
 304:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos 16U                    /*!< APSR: GE Position */
 305:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk (0xFUL << APSR_GE_Pos) /*!< APSR: GE Mask */
 306:Drivers/CMSIS/Include/core_cm7.h **** 
 307:Drivers/CMSIS/Include/core_cm7.h ****   /**
 308:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Union type to access the Interrupt Program Status Register (IPSR).
 309:Drivers/CMSIS/Include/core_cm7.h ****    */
 310:Drivers/CMSIS/Include/core_cm7.h ****   typedef union
 311:Drivers/CMSIS/Include/core_cm7.h ****   {
 312:Drivers/CMSIS/Include/core_cm7.h ****     struct
 313:Drivers/CMSIS/Include/core_cm7.h ****     {
 314:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t ISR : 9;         /*!< bit:  0.. 8  Exception number */
 315:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved0 : 23; /*!< bit:  9..31  Reserved */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 7


 316:Drivers/CMSIS/Include/core_cm7.h ****     } b;                        /*!< Structure used for bit  access */
 317:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t w;                 /*!< Type      used for word access */
 318:Drivers/CMSIS/Include/core_cm7.h ****   } IPSR_Type;
 319:Drivers/CMSIS/Include/core_cm7.h **** 
 320:Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 321:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos 0U                            /*!< IPSR: ISR Position */
 322:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk (0x1FFUL /*<< IPSR_ISR_Pos*/) /*!< IPSR: ISR Mask */
 323:Drivers/CMSIS/Include/core_cm7.h **** 
 324:Drivers/CMSIS/Include/core_cm7.h ****   /**
 325:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 326:Drivers/CMSIS/Include/core_cm7.h ****    */
 327:Drivers/CMSIS/Include/core_cm7.h ****   typedef union
 328:Drivers/CMSIS/Include/core_cm7.h ****   {
 329:Drivers/CMSIS/Include/core_cm7.h ****     struct
 330:Drivers/CMSIS/Include/core_cm7.h ****     {
 331:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t ISR : 9;        /*!< bit:  0.. 8  Exception number */
 332:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved0 : 1; /*!< bit:      9  Reserved */
 333:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t ICI_IT_1 : 6;   /*!< bit: 10..15  ICI/IT part 1 */
 334:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t GE : 4;         /*!< bit: 16..19  Greater than or Equal flags */
 335:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved1 : 4; /*!< bit: 20..23  Reserved */
 336:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t T : 1;          /*!< bit:     24  Thumb bit */
 337:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t ICI_IT_2 : 2;   /*!< bit: 25..26  ICI/IT part 2 */
 338:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t Q : 1;          /*!< bit:     27  Saturation condition flag */
 339:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t V : 1;          /*!< bit:     28  Overflow condition code flag */
 340:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t C : 1;          /*!< bit:     29  Carry condition code flag */
 341:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t Z : 1;          /*!< bit:     30  Zero condition code flag */
 342:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t N : 1;          /*!< bit:     31  Negative condition code flag */
 343:Drivers/CMSIS/Include/core_cm7.h ****     } b;                       /*!< Structure used for bit  access */
 344:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t w;                /*!< Type      used for word access */
 345:Drivers/CMSIS/Include/core_cm7.h ****   } xPSR_Type;
 346:Drivers/CMSIS/Include/core_cm7.h **** 
 347:Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 348:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos 31U                 /*!< xPSR: N Position */
 349:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk (1UL << xPSR_N_Pos) /*!< xPSR: N Mask */
 350:Drivers/CMSIS/Include/core_cm7.h **** 
 351:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos 30U                 /*!< xPSR: Z Position */
 352:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk (1UL << xPSR_Z_Pos) /*!< xPSR: Z Mask */
 353:Drivers/CMSIS/Include/core_cm7.h **** 
 354:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos 29U                 /*!< xPSR: C Position */
 355:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk (1UL << xPSR_C_Pos) /*!< xPSR: C Mask */
 356:Drivers/CMSIS/Include/core_cm7.h **** 
 357:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos 28U                 /*!< xPSR: V Position */
 358:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk (1UL << xPSR_V_Pos) /*!< xPSR: V Mask */
 359:Drivers/CMSIS/Include/core_cm7.h **** 
 360:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos 27U                 /*!< xPSR: Q Position */
 361:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk (1UL << xPSR_Q_Pos) /*!< xPSR: Q Mask */
 362:Drivers/CMSIS/Include/core_cm7.h **** 
 363:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos 25U                        /*!< xPSR: ICI/IT part 2 Position */
 364:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk (3UL << xPSR_ICI_IT_2_Pos) /*!< xPSR: ICI/IT part 2 Mask */
 365:Drivers/CMSIS/Include/core_cm7.h **** 
 366:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos 24U                 /*!< xPSR: T Position */
 367:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk (1UL << xPSR_T_Pos) /*!< xPSR: T Mask */
 368:Drivers/CMSIS/Include/core_cm7.h **** 
 369:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos 16U                    /*!< xPSR: GE Position */
 370:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk (0xFUL << xPSR_GE_Pos) /*!< xPSR: GE Mask */
 371:Drivers/CMSIS/Include/core_cm7.h **** 
 372:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos 10U                           /*!< xPSR: ICI/IT part 1 Position */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 8


 373:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk (0x3FUL << xPSR_ICI_IT_1_Pos) /*!< xPSR: ICI/IT part 1 Mask */
 374:Drivers/CMSIS/Include/core_cm7.h **** 
 375:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos 0U                            /*!< xPSR: ISR Position */
 376:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk (0x1FFUL /*<< xPSR_ISR_Pos*/) /*!< xPSR: ISR Mask */
 377:Drivers/CMSIS/Include/core_cm7.h **** 
 378:Drivers/CMSIS/Include/core_cm7.h ****   /**
 379:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Union type to access the Control Registers (CONTROL).
 380:Drivers/CMSIS/Include/core_cm7.h ****    */
 381:Drivers/CMSIS/Include/core_cm7.h ****   typedef union
 382:Drivers/CMSIS/Include/core_cm7.h ****   {
 383:Drivers/CMSIS/Include/core_cm7.h ****     struct
 384:Drivers/CMSIS/Include/core_cm7.h ****     {
 385:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t nPRIV : 1;       /*!< bit:      0  Execution privilege in Thread mode */
 386:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t SPSEL : 1;       /*!< bit:      1  Stack to be used */
 387:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t FPCA : 1;        /*!< bit:      2  FP extension active flag */
 388:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved0 : 29; /*!< bit:  3..31  Reserved */
 389:Drivers/CMSIS/Include/core_cm7.h ****     } b;                        /*!< Structure used for bit  access */
 390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t w;                 /*!< Type      used for word access */
 391:Drivers/CMSIS/Include/core_cm7.h ****   } CONTROL_Type;
 392:Drivers/CMSIS/Include/core_cm7.h **** 
 393:Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 394:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos 2U                        /*!< CONTROL: FPCA Position */
 395:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk (1UL << CONTROL_FPCA_Pos) /*!< CONTROL: FPCA Mask */
 396:Drivers/CMSIS/Include/core_cm7.h **** 
 397:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos 1U                         /*!< CONTROL: SPSEL Position */
 398:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk (1UL << CONTROL_SPSEL_Pos) /*!< CONTROL: SPSEL Mask */
 399:Drivers/CMSIS/Include/core_cm7.h **** 
 400:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos 0U                             /*!< CONTROL: nPRIV Position */
 401:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk (1UL /*<< CONTROL_nPRIV_Pos*/) /*!< CONTROL: nPRIV Mask */
 402:Drivers/CMSIS/Include/core_cm7.h **** 
 403:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_CORE */
 404:Drivers/CMSIS/Include/core_cm7.h **** 
 405:Drivers/CMSIS/Include/core_cm7.h ****   /**
 406:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup    CMSIS_core_register
 407:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 408:Drivers/CMSIS/Include/core_cm7.h ****     \brief      Type definitions for the NVIC Registers
 409:Drivers/CMSIS/Include/core_cm7.h ****     @{
 410:Drivers/CMSIS/Include/core_cm7.h ****    */
 411:Drivers/CMSIS/Include/core_cm7.h **** 
 412:Drivers/CMSIS/Include/core_cm7.h ****   /**
 413:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 414:Drivers/CMSIS/Include/core_cm7.h ****    */
 415:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
 416:Drivers/CMSIS/Include/core_cm7.h ****   {
 417:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ISER[8U]; /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 418:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[24U];
 419:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ICER[8U]; /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register */
 420:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RSERVED1[24U];
 421:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ISPR[8U]; /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register */
 422:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED2[24U];
 423:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ICPR[8U]; /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register */
 424:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED3[24U];
 425:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t IABR[8U]; /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 426:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED4[56U];
 427:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint8_t IP[240U]; /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bit wide) */
 428:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED5[644U];
 429:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t STIR; /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Register */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 9


 430:Drivers/CMSIS/Include/core_cm7.h ****   } NVIC_Type;
 431:Drivers/CMSIS/Include/core_cm7.h **** 
 432:Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 433:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos 0U                                   /*!< STIR: INTLINESNUM Position */
 434:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/) /*!< STIR: INTLINESNUM Mask */
 435:Drivers/CMSIS/Include/core_cm7.h **** 
 436:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_NVIC */
 437:Drivers/CMSIS/Include/core_cm7.h **** 
 438:Drivers/CMSIS/Include/core_cm7.h ****   /**
 439:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
 440:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 441:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the System Control Block Registers
 442:Drivers/CMSIS/Include/core_cm7.h ****     @{
 443:Drivers/CMSIS/Include/core_cm7.h ****    */
 444:Drivers/CMSIS/Include/core_cm7.h **** 
 445:Drivers/CMSIS/Include/core_cm7.h ****   /**
 446:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the System Control Block (SCB).
 447:Drivers/CMSIS/Include/core_cm7.h ****    */
 448:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
 449:Drivers/CMSIS/Include/core_cm7.h ****   {
 450:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CPUID;       /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 451:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ICSR;       /*!< Offset: 0x004 (R/W)  Interrupt Control and State Register */
 452:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t VTOR;       /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 453:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t AIRCR;      /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset Control Re
 454:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t SCR;        /*!< Offset: 0x010 (R/W)  System Control Register */
 455:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CCR;        /*!< Offset: 0x014 (R/W)  Configuration Control Register */
 456:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint8_t SHPR[12U];   /*!< Offset: 0x018 (R/W)  System Handlers Priority Registers (4-7, 8
 457:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t SHCSR;      /*!< Offset: 0x024 (R/W)  System Handler Control and State Register 
 458:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CFSR;       /*!< Offset: 0x028 (R/W)  Configurable Fault Status Register */
 459:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t HFSR;       /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 460:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t DFSR;       /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 461:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t MMFAR;      /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register */
 462:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t BFAR;       /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 463:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t AFSR;       /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register */
 464:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ID_PFR[2U];  /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 465:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ID_DFR;      /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 466:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ID_AFR;      /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 467:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ID_MFR[4U];  /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 468:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ID_ISAR[5U]; /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Register */
 469:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[1U];
 470:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CLIDR;   /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 471:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CTR;     /*!< Offset: 0x07C (R/ )  Cache Type register */
 472:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CCSIDR;  /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 473:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CSSELR; /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 474:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CPACR;  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Register */
 475:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED3[93U];
 476:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t STIR; /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Register */
 477:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED4[15U];
 478:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR0; /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0 */
 479:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR1; /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1 */
 480:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR2; /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2 */
 481:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED5[1U];
 482:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t ICIALLU; /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 483:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED6[1U];
 484:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t ICIMVAU;  /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU */
 485:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCIMVAC;  /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC */
 486:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCISW;    /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 10


 487:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCCMVAU;  /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 488:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCCMVAC;  /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 489:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCCSW;    /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 490:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCCIMVAC; /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by MVA to PoC */
 491:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCCISW;   /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by Set-way */
 492:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED7[6U];
 493:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ITCMCR; /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memory Control Reg
 494:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t DTCMCR; /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Control Registers 
 495:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t AHBPCR; /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 496:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CACR;   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 497:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t AHBSCR; /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 498:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED8[1U];
 499:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ABFSR; /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Register */
 500:Drivers/CMSIS/Include/core_cm7.h ****   } SCB_Type;
 501:Drivers/CMSIS/Include/core_cm7.h **** 
 502:Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 503:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos 24U                                   /*!< SCB CPUID: IMPLEMENTER
 504:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos) /*!< SCB CPUID: IMPLEMENTER
 505:Drivers/CMSIS/Include/core_cm7.h **** 
 506:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos 20U                              /*!< SCB CPUID: VARIANT Position */
 507:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk (0xFUL << SCB_CPUID_VARIANT_Pos) /*!< SCB CPUID: VARIANT Mask */
 508:Drivers/CMSIS/Include/core_cm7.h **** 
 509:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos 16U                                   /*!< SCB CPUID: ARCHITECTU
 510:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk (0xFUL << SCB_CPUID_ARCHITECTURE_Pos) /*!< SCB CPUID: ARCHITECTU
 511:Drivers/CMSIS/Include/core_cm7.h **** 
 512:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos 4U                                /*!< SCB CPUID: PARTNO Position */
 513:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk (0xFFFUL << SCB_CPUID_PARTNO_Pos) /*!< SCB CPUID: PARTNO Mask */
 514:Drivers/CMSIS/Include/core_cm7.h **** 
 515:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos 0U                                    /*!< SCB CPUID: REVISION Posit
 516:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk (0xFUL /*<< SCB_CPUID_REVISION_Pos*/) /*!< SCB CPUID: REVISION Mask 
 517:Drivers/CMSIS/Include/core_cm7.h **** 
 518:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 519:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos 31U                              /*!< SCB ICSR: NMIPENDSET Position
 520:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk (1UL << SCB_ICSR_NMIPENDSET_Pos) /*!< SCB ICSR: NMIPENDSET Mask */
 521:Drivers/CMSIS/Include/core_cm7.h **** 
 522:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos 28U                             /*!< SCB ICSR: PENDSVSET Position */
 523:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk (1UL << SCB_ICSR_PENDSVSET_Pos) /*!< SCB ICSR: PENDSVSET Mask */
 524:Drivers/CMSIS/Include/core_cm7.h **** 
 525:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos 27U                             /*!< SCB ICSR: PENDSVCLR Position */
 526:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk (1UL << SCB_ICSR_PENDSVCLR_Pos) /*!< SCB ICSR: PENDSVCLR Mask */
 527:Drivers/CMSIS/Include/core_cm7.h **** 
 528:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos 26U                             /*!< SCB ICSR: PENDSTSET Position */
 529:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk (1UL << SCB_ICSR_PENDSTSET_Pos) /*!< SCB ICSR: PENDSTSET Mask */
 530:Drivers/CMSIS/Include/core_cm7.h **** 
 531:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos 25U                             /*!< SCB ICSR: PENDSTCLR Position */
 532:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk (1UL << SCB_ICSR_PENDSTCLR_Pos) /*!< SCB ICSR: PENDSTCLR Mask */
 533:Drivers/CMSIS/Include/core_cm7.h **** 
 534:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos 23U                              /*!< SCB ICSR: ISRPREEMPT Position
 535:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk (1UL << SCB_ICSR_ISRPREEMPT_Pos) /*!< SCB ICSR: ISRPREEMPT Mask */
 536:Drivers/CMSIS/Include/core_cm7.h **** 
 537:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos 22U                              /*!< SCB ICSR: ISRPENDING Position
 538:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk (1UL << SCB_ICSR_ISRPENDING_Pos) /*!< SCB ICSR: ISRPENDING Mask */
 539:Drivers/CMSIS/Include/core_cm7.h **** 
 540:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos 12U                                   /*!< SCB ICSR: VECTPENDING P
 541:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk (0x1FFUL << SCB_ICSR_VECTPENDING_Pos) /*!< SCB ICSR: VECTPENDING M
 542:Drivers/CMSIS/Include/core_cm7.h **** 
 543:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos 11U                             /*!< SCB ICSR: RETTOBASE Position */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 11


 544:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk (1UL << SCB_ICSR_RETTOBASE_Pos) /*!< SCB ICSR: RETTOBASE Mask */
 545:Drivers/CMSIS/Include/core_cm7.h **** 
 546:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos 0U                                       /*!< SCB ICSR: VECTACTIVE 
 547:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/) /*!< SCB ICSR: VECTACTIVE 
 548:Drivers/CMSIS/Include/core_cm7.h **** 
 549:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 550:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos 7U                                   /*!< SCB VTOR: TBLOFF Position */
 551:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos) /*!< SCB VTOR: TBLOFF Mask */
 552:Drivers/CMSIS/Include/core_cm7.h **** 
 553:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 554:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos 16U                                 /*!< SCB AIRCR: VECTKEY Position 
 555:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos) /*!< SCB AIRCR: VECTKEY Mask */
 556:Drivers/CMSIS/Include/core_cm7.h **** 
 557:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos 16U                                     /*!< SCB AIRCR: VECTKEYST
 558:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos) /*!< SCB AIRCR: VECTKEYST
 559:Drivers/CMSIS/Include/core_cm7.h **** 
 560:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos 15U                              /*!< SCB AIRCR: ENDIANESS Position
 561:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk (1UL << SCB_AIRCR_ENDIANESS_Pos) /*!< SCB AIRCR: ENDIANESS Mask */
 562:Drivers/CMSIS/Include/core_cm7.h **** 
 563:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos 8U                              /*!< SCB AIRCR: PRIGROUP Position */
 564:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk (7UL << SCB_AIRCR_PRIGROUP_Pos) /*!< SCB AIRCR: PRIGROUP Mask */
 565:Drivers/CMSIS/Include/core_cm7.h **** 
 566:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos 2U                                 /*!< SCB AIRCR: SYSRESETREQ Po
 567:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk (1UL << SCB_AIRCR_SYSRESETREQ_Pos) /*!< SCB AIRCR: SYSRESETREQ Ma
 568:Drivers/CMSIS/Include/core_cm7.h **** 
 569:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos 1U                                   /*!< SCB AIRCR: VECTCLRACT
 570:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos) /*!< SCB AIRCR: VECTCLRACT
 571:Drivers/CMSIS/Include/core_cm7.h **** 
 572:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos 0U                                   /*!< SCB AIRCR: VECTRESET Posi
 573:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/) /*!< SCB AIRCR: VECTRESET Mask
 574:Drivers/CMSIS/Include/core_cm7.h **** 
 575:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 576:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos 4U                             /*!< SCB SCR: SEVONPEND Position */
 577:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk (1UL << SCB_SCR_SEVONPEND_Pos) /*!< SCB SCR: SEVONPEND Mask */
 578:Drivers/CMSIS/Include/core_cm7.h **** 
 579:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos 2U                             /*!< SCB SCR: SLEEPDEEP Position */
 580:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk (1UL << SCB_SCR_SLEEPDEEP_Pos) /*!< SCB SCR: SLEEPDEEP Mask */
 581:Drivers/CMSIS/Include/core_cm7.h **** 
 582:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos 1U                               /*!< SCB SCR: SLEEPONEXIT Position
 583:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk (1UL << SCB_SCR_SLEEPONEXIT_Pos) /*!< SCB SCR: SLEEPONEXIT Mask */
 584:Drivers/CMSIS/Include/core_cm7.h **** 
 585:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 586:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos 18U                     /*!< SCB CCR: Branch prediction enable bit Position 
 587:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk (1UL << SCB_CCR_BP_Pos) /*!< SCB CCR: Branch prediction enable bit Mask */
 588:Drivers/CMSIS/Include/core_cm7.h **** 
 589:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos 17U                     /*!< SCB CCR: Instruction cache enable bit Position 
 590:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk (1UL << SCB_CCR_IC_Pos) /*!< SCB CCR: Instruction cache enable bit Mask */
 591:Drivers/CMSIS/Include/core_cm7.h **** 
 592:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos 16U                     /*!< SCB CCR: Cache enable bit Position */
 593:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk (1UL << SCB_CCR_DC_Pos) /*!< SCB CCR: Cache enable bit Mask */
 594:Drivers/CMSIS/Include/core_cm7.h **** 
 595:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos 9U                            /*!< SCB CCR: STKALIGN Position */
 596:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk (1UL << SCB_CCR_STKALIGN_Pos) /*!< SCB CCR: STKALIGN Mask */
 597:Drivers/CMSIS/Include/core_cm7.h **** 
 598:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos 8U                             /*!< SCB CCR: BFHFNMIGN Position */
 599:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk (1UL << SCB_CCR_BFHFNMIGN_Pos) /*!< SCB CCR: BFHFNMIGN Mask */
 600:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 12


 601:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos 4U                             /*!< SCB CCR: DIV_0_TRP Position */
 602:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk (1UL << SCB_CCR_DIV_0_TRP_Pos) /*!< SCB CCR: DIV_0_TRP Mask */
 603:Drivers/CMSIS/Include/core_cm7.h **** 
 604:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos 3U                               /*!< SCB CCR: UNALIGN_TRP Position
 605:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk (1UL << SCB_CCR_UNALIGN_TRP_Pos) /*!< SCB CCR: UNALIGN_TRP Mask */
 606:Drivers/CMSIS/Include/core_cm7.h **** 
 607:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos 1U                                /*!< SCB CCR: USERSETMPEND Posit
 608:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk (1UL << SCB_CCR_USERSETMPEND_Pos) /*!< SCB CCR: USERSETMPEND Mask 
 609:Drivers/CMSIS/Include/core_cm7.h **** 
 610:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos 0U                                      /*!< SCB CCR: NONBASETHR
 611:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/) /*!< SCB CCR: NONBASETHR
 612:Drivers/CMSIS/Include/core_cm7.h **** 
 613:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 614:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos 18U                                /*!< SCB SHCSR: USGFAULTENA Po
 615:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk (1UL << SCB_SHCSR_USGFAULTENA_Pos) /*!< SCB SHCSR: USGFAULTENA Ma
 616:Drivers/CMSIS/Include/core_cm7.h **** 
 617:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos 17U                                /*!< SCB SHCSR: BUSFAULTENA Po
 618:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk (1UL << SCB_SHCSR_BUSFAULTENA_Pos) /*!< SCB SHCSR: BUSFAULTENA Ma
 619:Drivers/CMSIS/Include/core_cm7.h **** 
 620:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos 16U                                /*!< SCB SHCSR: MEMFAULTENA Po
 621:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk (1UL << SCB_SHCSR_MEMFAULTENA_Pos) /*!< SCB SHCSR: MEMFAULTENA Ma
 622:Drivers/CMSIS/Include/core_cm7.h **** 
 623:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos 15U                                 /*!< SCB SHCSR: SVCALLPENDED
 624:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk (1UL << SCB_SHCSR_SVCALLPENDED_Pos) /*!< SCB SHCSR: SVCALLPENDED
 625:Drivers/CMSIS/Include/core_cm7.h **** 
 626:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos 14U                                   /*!< SCB SHCSR: BUSFAULT
 627:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos) /*!< SCB SHCSR: BUSFAULT
 628:Drivers/CMSIS/Include/core_cm7.h **** 
 629:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos 13U                                   /*!< SCB SHCSR: MEMFAULT
 630:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos) /*!< SCB SHCSR: MEMFAULT
 631:Drivers/CMSIS/Include/core_cm7.h **** 
 632:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos 12U                                   /*!< SCB SHCSR: USGFAULT
 633:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk (1UL << SCB_SHCSR_USGFAULTPENDED_Pos) /*!< SCB SHCSR: USGFAULT
 634:Drivers/CMSIS/Include/core_cm7.h **** 
 635:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos 11U                               /*!< SCB SHCSR: SYSTICKACT Posit
 636:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk (1UL << SCB_SHCSR_SYSTICKACT_Pos) /*!< SCB SHCSR: SYSTICKACT Mask 
 637:Drivers/CMSIS/Include/core_cm7.h **** 
 638:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos 10U                              /*!< SCB SHCSR: PENDSVACT Position
 639:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk (1UL << SCB_SHCSR_PENDSVACT_Pos) /*!< SCB SHCSR: PENDSVACT Mask */
 640:Drivers/CMSIS/Include/core_cm7.h **** 
 641:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos 8U                                /*!< SCB SHCSR: MONITORACT Posit
 642:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk (1UL << SCB_SHCSR_MONITORACT_Pos) /*!< SCB SHCSR: MONITORACT Mask 
 643:Drivers/CMSIS/Include/core_cm7.h **** 
 644:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos 7U                               /*!< SCB SHCSR: SVCALLACT Position
 645:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk (1UL << SCB_SHCSR_SVCALLACT_Pos) /*!< SCB SHCSR: SVCALLACT Mask */
 646:Drivers/CMSIS/Include/core_cm7.h **** 
 647:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos 3U                                 /*!< SCB SHCSR: USGFAULTACT Po
 648:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk (1UL << SCB_SHCSR_USGFAULTACT_Pos) /*!< SCB SHCSR: USGFAULTACT Ma
 649:Drivers/CMSIS/Include/core_cm7.h **** 
 650:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos 1U                                 /*!< SCB SHCSR: BUSFAULTACT Po
 651:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk (1UL << SCB_SHCSR_BUSFAULTACT_Pos) /*!< SCB SHCSR: BUSFAULTACT Ma
 652:Drivers/CMSIS/Include/core_cm7.h **** 
 653:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos 0U                                     /*!< SCB SHCSR: MEMFAULTAC
 654:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/) /*!< SCB SHCSR: MEMFAULTAC
 655:Drivers/CMSIS/Include/core_cm7.h **** 
 656:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 657:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos 16U                                   /*!< SCB CFSR: Usage Fault St
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 13


 658:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos) /*!< SCB CFSR: Usage Fault St
 659:Drivers/CMSIS/Include/core_cm7.h **** 
 660:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos 8U                                  /*!< SCB CFSR: Bus Fault Status
 661:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos) /*!< SCB CFSR: Bus Fault Status
 662:Drivers/CMSIS/Include/core_cm7.h **** 
 663:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos 0U                                      /*!< SCB CFSR: Memory Manag
 664:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/) /*!< SCB CFSR: Memory Manag
 665:Drivers/CMSIS/Include/core_cm7.h **** 
 666:Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 667:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 7U) /*!< SCB CFSR (MMFSR): MMARVALID Po
 668:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk (1UL << SCB_CFSR_MMARVALID_Pos)  /*!< SCB CFSR (MMFSR): MMARVALID Ma
 669:Drivers/CMSIS/Include/core_cm7.h **** 
 670:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 5U) /*!< SCB CFSR (MMFSR): MLSPERR Positi
 671:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk (1UL << SCB_CFSR_MLSPERR_Pos)    /*!< SCB CFSR (MMFSR): MLSPERR Mask *
 672:Drivers/CMSIS/Include/core_cm7.h **** 
 673:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 4U) /*!< SCB CFSR (MMFSR): MSTKERR Positi
 674:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk (1UL << SCB_CFSR_MSTKERR_Pos)    /*!< SCB CFSR (MMFSR): MSTKERR Mask *
 675:Drivers/CMSIS/Include/core_cm7.h **** 
 676:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 3U) /*!< SCB CFSR (MMFSR): MUNSTKERR Po
 677:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk (1UL << SCB_CFSR_MUNSTKERR_Pos)  /*!< SCB CFSR (MMFSR): MUNSTKERR Ma
 678:Drivers/CMSIS/Include/core_cm7.h **** 
 679:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 1U) /*!< SCB CFSR (MMFSR): DACCVIOL Posi
 680:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk (1UL << SCB_CFSR_DACCVIOL_Pos)   /*!< SCB CFSR (MMFSR): DACCVIOL Mask
 681:Drivers/CMSIS/Include/core_cm7.h **** 
 682:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 0U)   /*!< SCB CFSR (MMFSR): IACCVIOL Po
 683:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/) /*!< SCB CFSR (MMFSR): IACCVIOL Ma
 684:Drivers/CMSIS/Include/core_cm7.h **** 
 685:Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 686:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos (SCB_CFSR_BUSFAULTSR_Pos + 7U)  /*!< SCB CFSR (BFSR): BFARVALID Posi
 687:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk (1UL << SCB_CFSR_BFARVALID_Pos) /*!< SCB CFSR (BFSR): BFARVALID Mask
 688:Drivers/CMSIS/Include/core_cm7.h **** 
 689:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 5U) /*!< SCB CFSR (BFSR): LSPERR Position */
 690:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk (1UL << SCB_CFSR_LSPERR_Pos)   /*!< SCB CFSR (BFSR): LSPERR Mask */
 691:Drivers/CMSIS/Include/core_cm7.h **** 
 692:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 4U) /*!< SCB CFSR (BFSR): STKERR Position */
 693:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk (1UL << SCB_CFSR_STKERR_Pos)   /*!< SCB CFSR (BFSR): STKERR Mask */
 694:Drivers/CMSIS/Include/core_cm7.h **** 
 695:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 3U) /*!< SCB CFSR (BFSR): UNSTKERR Positio
 696:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk (1UL << SCB_CFSR_UNSTKERR_Pos) /*!< SCB CFSR (BFSR): UNSTKERR Mask */
 697:Drivers/CMSIS/Include/core_cm7.h **** 
 698:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 2U)    /*!< SCB CFSR (BFSR): IMPRECISER
 699:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk (1UL << SCB_CFSR_IMPRECISERR_Pos) /*!< SCB CFSR (BFSR): IMPRECISER
 700:Drivers/CMSIS/Include/core_cm7.h **** 
 701:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 1U)  /*!< SCB CFSR (BFSR): PRECISERR Posi
 702:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk (1UL << SCB_CFSR_PRECISERR_Pos) /*!< SCB CFSR (BFSR): PRECISERR Mask
 703:Drivers/CMSIS/Include/core_cm7.h **** 
 704:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 0U) /*!< SCB CFSR (BFSR): IBUSERR Position 
 705:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk (1UL << SCB_CFSR_IBUSERR_Pos)  /*!< SCB CFSR (BFSR): IBUSERR Mask */
 706:Drivers/CMSIS/Include/core_cm7.h **** 
 707:Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 708:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos (SCB_CFSR_USGFAULTSR_Pos + 9U)  /*!< SCB CFSR (UFSR): DIVBYZERO Posi
 709:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk (1UL << SCB_CFSR_DIVBYZERO_Pos) /*!< SCB CFSR (UFSR): DIVBYZERO Mask
 710:Drivers/CMSIS/Include/core_cm7.h **** 
 711:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos (SCB_CFSR_USGFAULTSR_Pos + 8U)  /*!< SCB CFSR (UFSR): UNALIGNED Posi
 712:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk (1UL << SCB_CFSR_UNALIGNED_Pos) /*!< SCB CFSR (UFSR): UNALIGNED Mask
 713:Drivers/CMSIS/Include/core_cm7.h **** 
 714:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos (SCB_CFSR_USGFAULTSR_Pos + 3U) /*!< SCB CFSR (UFSR): NOCP Position */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 14


 715:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk (1UL << SCB_CFSR_NOCP_Pos)     /*!< SCB CFSR (UFSR): NOCP Mask */
 716:Drivers/CMSIS/Include/core_cm7.h **** 
 717:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos (SCB_CFSR_USGFAULTSR_Pos + 2U) /*!< SCB CFSR (UFSR): INVPC Position */
 718:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk (1UL << SCB_CFSR_INVPC_Pos)    /*!< SCB CFSR (UFSR): INVPC Mask */
 719:Drivers/CMSIS/Include/core_cm7.h **** 
 720:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos (SCB_CFSR_USGFAULTSR_Pos + 1U) /*!< SCB CFSR (UFSR): INVSTATE Positio
 721:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk (1UL << SCB_CFSR_INVSTATE_Pos) /*!< SCB CFSR (UFSR): INVSTATE Mask */
 722:Drivers/CMSIS/Include/core_cm7.h **** 
 723:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos (SCB_CFSR_USGFAULTSR_Pos + 0U)   /*!< SCB CFSR (UFSR): UNDEFINSTR P
 724:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk (1UL << SCB_CFSR_UNDEFINSTR_Pos) /*!< SCB CFSR (UFSR): UNDEFINSTR M
 725:Drivers/CMSIS/Include/core_cm7.h **** 
 726:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 727:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos 31U                            /*!< SCB HFSR: DEBUGEVT Position */
 728:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk (1UL << SCB_HFSR_DEBUGEVT_Pos) /*!< SCB HFSR: DEBUGEVT Mask */
 729:Drivers/CMSIS/Include/core_cm7.h **** 
 730:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos 30U                          /*!< SCB HFSR: FORCED Position */
 731:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk (1UL << SCB_HFSR_FORCED_Pos) /*!< SCB HFSR: FORCED Mask */
 732:Drivers/CMSIS/Include/core_cm7.h **** 
 733:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos 1U                            /*!< SCB HFSR: VECTTBL Position */
 734:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk (1UL << SCB_HFSR_VECTTBL_Pos) /*!< SCB HFSR: VECTTBL Mask */
 735:Drivers/CMSIS/Include/core_cm7.h **** 
 736:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 737:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos 4U                             /*!< SCB DFSR: EXTERNAL Position */
 738:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk (1UL << SCB_DFSR_EXTERNAL_Pos) /*!< SCB DFSR: EXTERNAL Mask */
 739:Drivers/CMSIS/Include/core_cm7.h **** 
 740:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos 3U                           /*!< SCB DFSR: VCATCH Position */
 741:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk (1UL << SCB_DFSR_VCATCH_Pos) /*!< SCB DFSR: VCATCH Mask */
 742:Drivers/CMSIS/Include/core_cm7.h **** 
 743:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos 2U                            /*!< SCB DFSR: DWTTRAP Position */
 744:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk (1UL << SCB_DFSR_DWTTRAP_Pos) /*!< SCB DFSR: DWTTRAP Mask */
 745:Drivers/CMSIS/Include/core_cm7.h **** 
 746:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos 1U                         /*!< SCB DFSR: BKPT Position */
 747:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk (1UL << SCB_DFSR_BKPT_Pos) /*!< SCB DFSR: BKPT Mask */
 748:Drivers/CMSIS/Include/core_cm7.h **** 
 749:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos 0U                               /*!< SCB DFSR: HALTED Position */
 750:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk (1UL /*<< SCB_DFSR_HALTED_Pos*/) /*!< SCB DFSR: HALTED Mask */
 751:Drivers/CMSIS/Include/core_cm7.h **** 
 752:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 753:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos 27U                         /*!< SCB CLIDR: LoUU Position */
 754:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk (7UL << SCB_CLIDR_LOUU_Pos) /*!< SCB CLIDR: LoUU Mask */
 755:Drivers/CMSIS/Include/core_cm7.h **** 
 756:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos 24U                        /*!< SCB CLIDR: LoC Position */
 757:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk (7UL << SCB_CLIDR_LOC_Pos) /*!< SCB CLIDR: LoC Mask */
 758:Drivers/CMSIS/Include/core_cm7.h **** 
 759:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 760:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos 29U                         /*!< SCB CTR: Format Position */
 761:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk (7UL << SCB_CTR_FORMAT_Pos) /*!< SCB CTR: Format Mask */
 762:Drivers/CMSIS/Include/core_cm7.h **** 
 763:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos 24U                        /*!< SCB CTR: CWG Position */
 764:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk (0xFUL << SCB_CTR_CWG_Pos) /*!< SCB CTR: CWG Mask */
 765:Drivers/CMSIS/Include/core_cm7.h **** 
 766:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos 20U                        /*!< SCB CTR: ERG Position */
 767:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk (0xFUL << SCB_CTR_ERG_Pos) /*!< SCB CTR: ERG Mask */
 768:Drivers/CMSIS/Include/core_cm7.h **** 
 769:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos 16U                             /*!< SCB CTR: DminLine Position */
 770:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk (0xFUL << SCB_CTR_DMINLINE_Pos) /*!< SCB CTR: DminLine Mask */
 771:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 15


 772:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos 0U                                  /*!< SCB CTR: ImInLine Position */
 773:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/) /*!< SCB CTR: ImInLine Mask */
 774:Drivers/CMSIS/Include/core_cm7.h **** 
 775:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 776:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos 31U                        /*!< SCB CCSIDR: WT Position */
 777:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk (1UL << SCB_CCSIDR_WT_Pos) /*!< SCB CCSIDR: WT Mask */
 778:Drivers/CMSIS/Include/core_cm7.h **** 
 779:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos 30U                        /*!< SCB CCSIDR: WB Position */
 780:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk (1UL << SCB_CCSIDR_WB_Pos) /*!< SCB CCSIDR: WB Mask */
 781:Drivers/CMSIS/Include/core_cm7.h **** 
 782:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos 29U                        /*!< SCB CCSIDR: RA Position */
 783:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk (1UL << SCB_CCSIDR_RA_Pos) /*!< SCB CCSIDR: RA Mask */
 784:Drivers/CMSIS/Include/core_cm7.h **** 
 785:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos 28U                        /*!< SCB CCSIDR: WA Position */
 786:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk (1UL << SCB_CCSIDR_WA_Pos) /*!< SCB CCSIDR: WA Mask */
 787:Drivers/CMSIS/Include/core_cm7.h **** 
 788:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos 13U                                  /*!< SCB CCSIDR: NumSets Positi
 789:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos) /*!< SCB CCSIDR: NumSets Mask *
 790:Drivers/CMSIS/Include/core_cm7.h **** 
 791:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos 3U                                        /*!< SCB CCSIDR: Ass
 792:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos) /*!< SCB CCSIDR: Ass
 793:Drivers/CMSIS/Include/core_cm7.h **** 
 794:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos 0U                                   /*!< SCB CCSIDR: LineSize Posi
 795:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/) /*!< SCB CCSIDR: LineSize Mask
 796:Drivers/CMSIS/Include/core_cm7.h **** 
 797:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 798:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos 1U                            /*!< SCB CSSELR: Level Position */
 799:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk (7UL << SCB_CSSELR_LEVEL_Pos) /*!< SCB CSSELR: Level Mask */
 800:Drivers/CMSIS/Include/core_cm7.h **** 
 801:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos 0U                              /*!< SCB CSSELR: InD Position */
 802:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk (1UL /*<< SCB_CSSELR_IND_Pos*/) /*!< SCB CSSELR: InD Mask */
 803:Drivers/CMSIS/Include/core_cm7.h **** 
 804:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 805:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos 0U                                  /*!< SCB STIR: INTID Position */
 806:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk (0x1FFUL /*<< SCB_STIR_INTID_Pos*/) /*!< SCB STIR: INTID Mask */
 807:Drivers/CMSIS/Include/core_cm7.h **** 
 808:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 809:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos 30U                        /*!< SCB DCISW: Way Position */
 810:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk (3UL << SCB_DCISW_WAY_Pos) /*!< SCB DCISW: Way Mask */
 811:Drivers/CMSIS/Include/core_cm7.h **** 
 812:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos 5U                             /*!< SCB DCISW: Set Position */
 813:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk (0x1FFUL << SCB_DCISW_SET_Pos) /*!< SCB DCISW: Set Mask */
 814:Drivers/CMSIS/Include/core_cm7.h **** 
 815:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 816:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos 30U                        /*!< SCB DCCSW: Way Position */
 817:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk (3UL << SCB_DCCSW_WAY_Pos) /*!< SCB DCCSW: Way Mask */
 818:Drivers/CMSIS/Include/core_cm7.h **** 
 819:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos 5U                             /*!< SCB DCCSW: Set Position */
 820:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk (0x1FFUL << SCB_DCCSW_SET_Pos) /*!< SCB DCCSW: Set Mask */
 821:Drivers/CMSIS/Include/core_cm7.h **** 
 822:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 823:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos 30U                         /*!< SCB DCCISW: Way Position */
 824:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk (3UL << SCB_DCCISW_WAY_Pos) /*!< SCB DCCISW: Way Mask */
 825:Drivers/CMSIS/Include/core_cm7.h **** 
 826:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos 5U                              /*!< SCB DCCISW: Set Position */
 827:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk (0x1FFUL << SCB_DCCISW_SET_Pos) /*!< SCB DCCISW: Set Mask */
 828:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 16


 829:Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 830:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos 3U                           /*!< SCB ITCMCR: SZ Position */
 831:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk (0xFUL << SCB_ITCMCR_SZ_Pos) /*!< SCB ITCMCR: SZ Mask */
 832:Drivers/CMSIS/Include/core_cm7.h **** 
 833:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos 2U                            /*!< SCB ITCMCR: RETEN Position */
 834:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk (1UL << SCB_ITCMCR_RETEN_Pos) /*!< SCB ITCMCR: RETEN Mask */
 835:Drivers/CMSIS/Include/core_cm7.h **** 
 836:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos 1U                          /*!< SCB ITCMCR: RMW Position */
 837:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk (1UL << SCB_ITCMCR_RMW_Pos) /*!< SCB ITCMCR: RMW Mask */
 838:Drivers/CMSIS/Include/core_cm7.h **** 
 839:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos 0U                             /*!< SCB ITCMCR: EN Position */
 840:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk (1UL /*<< SCB_ITCMCR_EN_Pos*/) /*!< SCB ITCMCR: EN Mask */
 841:Drivers/CMSIS/Include/core_cm7.h **** 
 842:Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 843:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos 3U                           /*!< SCB DTCMCR: SZ Position */
 844:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk (0xFUL << SCB_DTCMCR_SZ_Pos) /*!< SCB DTCMCR: SZ Mask */
 845:Drivers/CMSIS/Include/core_cm7.h **** 
 846:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos 2U                            /*!< SCB DTCMCR: RETEN Position */
 847:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk (1UL << SCB_DTCMCR_RETEN_Pos) /*!< SCB DTCMCR: RETEN Mask */
 848:Drivers/CMSIS/Include/core_cm7.h **** 
 849:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos 1U                          /*!< SCB DTCMCR: RMW Position */
 850:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk (1UL << SCB_DTCMCR_RMW_Pos) /*!< SCB DTCMCR: RMW Mask */
 851:Drivers/CMSIS/Include/core_cm7.h **** 
 852:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos 0U                             /*!< SCB DTCMCR: EN Position */
 853:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk (1UL /*<< SCB_DTCMCR_EN_Pos*/) /*!< SCB DTCMCR: EN Mask */
 854:Drivers/CMSIS/Include/core_cm7.h **** 
 855:Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 856:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos 1U                         /*!< SCB AHBPCR: SZ Position */
 857:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk (7UL << SCB_AHBPCR_SZ_Pos) /*!< SCB AHBPCR: SZ Mask */
 858:Drivers/CMSIS/Include/core_cm7.h **** 
 859:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos 0U                             /*!< SCB AHBPCR: EN Position */
 860:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk (1UL /*<< SCB_AHBPCR_EN_Pos*/) /*!< SCB AHBPCR: EN Mask */
 861:Drivers/CMSIS/Include/core_cm7.h **** 
 862:Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 863:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos 2U                            /*!< SCB CACR: FORCEWT Position */
 864:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk (1UL << SCB_CACR_FORCEWT_Pos) /*!< SCB CACR: FORCEWT Mask */
 865:Drivers/CMSIS/Include/core_cm7.h **** 
 866:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos 1U                          /*!< SCB CACR: ECCEN Position */
 867:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk (1UL << SCB_CACR_ECCEN_Pos) /*!< SCB CACR: ECCEN Mask */
 868:Drivers/CMSIS/Include/core_cm7.h **** 
 869:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos 0U                             /*!< SCB CACR: SIWT Position */
 870:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk (1UL /*<< SCB_CACR_SIWT_Pos*/) /*!< SCB CACR: SIWT Mask */
 871:Drivers/CMSIS/Include/core_cm7.h **** 
 872:Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 873:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos 11U                                  /*!< SCB AHBSCR: INITCOUNT Po
 874:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos) /*!< SCB AHBSCR: INITCOUNT Ma
 875:Drivers/CMSIS/Include/core_cm7.h **** 
 876:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos 2U                               /*!< SCB AHBSCR: TPRI Position */
 877:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk (0x1FFUL << SCB_AHBPCR_TPRI_Pos) /*!< SCB AHBSCR: TPRI Mask */
 878:Drivers/CMSIS/Include/core_cm7.h **** 
 879:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos 0U                              /*!< SCB AHBSCR: CTL Position*/
 880:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk (3UL /*<< SCB_AHBPCR_CTL_Pos*/) /*!< SCB AHBSCR: CTL Mask */
 881:Drivers/CMSIS/Include/core_cm7.h **** 
 882:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 883:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos 8U                              /*!< SCB ABFSR: AXIMTYPE Position*/
 884:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk (3UL << SCB_ABFSR_AXIMTYPE_Pos) /*!< SCB ABFSR: AXIMTYPE Mask */
 885:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 17


 886:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos 4U                          /*!< SCB ABFSR: EPPB Position*/
 887:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk (1UL << SCB_ABFSR_EPPB_Pos) /*!< SCB ABFSR: EPPB Mask */
 888:Drivers/CMSIS/Include/core_cm7.h **** 
 889:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos 3U                          /*!< SCB ABFSR: AXIM Position*/
 890:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk (1UL << SCB_ABFSR_AXIM_Pos) /*!< SCB ABFSR: AXIM Mask */
 891:Drivers/CMSIS/Include/core_cm7.h **** 
 892:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos 2U                          /*!< SCB ABFSR: AHBP Position*/
 893:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk (1UL << SCB_ABFSR_AHBP_Pos) /*!< SCB ABFSR: AHBP Mask */
 894:Drivers/CMSIS/Include/core_cm7.h **** 
 895:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos 1U                          /*!< SCB ABFSR: DTCM Position*/
 896:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk (1UL << SCB_ABFSR_DTCM_Pos) /*!< SCB ABFSR: DTCM Mask */
 897:Drivers/CMSIS/Include/core_cm7.h **** 
 898:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos 0U                              /*!< SCB ABFSR: ITCM Position*/
 899:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk (1UL /*<< SCB_ABFSR_ITCM_Pos*/) /*!< SCB ABFSR: ITCM Mask */
 900:Drivers/CMSIS/Include/core_cm7.h **** 
 901:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_SCB */
 902:Drivers/CMSIS/Include/core_cm7.h **** 
 903:Drivers/CMSIS/Include/core_cm7.h ****   /**
 904:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
 905:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 906:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the System Control and ID Register not in the SCB
 907:Drivers/CMSIS/Include/core_cm7.h ****     @{
 908:Drivers/CMSIS/Include/core_cm7.h ****    */
 909:Drivers/CMSIS/Include/core_cm7.h **** 
 910:Drivers/CMSIS/Include/core_cm7.h ****   /**
 911:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the System Control and ID Register not in the SCB.
 912:Drivers/CMSIS/Include/core_cm7.h ****    */
 913:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
 914:Drivers/CMSIS/Include/core_cm7.h ****   {
 915:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[1U];
 916:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ICTR;   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Register */
 917:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ACTLR; /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 918:Drivers/CMSIS/Include/core_cm7.h ****   } SCnSCB_Type;
 919:Drivers/CMSIS/Include/core_cm7.h **** 
 920:Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 921:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos 0U                                         /*!< ICTR: INTLINESN
 922:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/) /*!< ICTR: INTLINESN
 923:Drivers/CMSIS/Include/core_cm7.h **** 
 924:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 925:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos 12U                                      /*!< ACTLR: DISITM
 926:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos) /*!< ACTLR: DISITM
 927:Drivers/CMSIS/Include/core_cm7.h **** 
 928:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos 11U                                 /*!< ACTLR: DISRAMODE Positi
 929:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk (1UL << SCnSCB_ACTLR_DISRAMODE_Pos) /*!< ACTLR: DISRAMODE Mask *
 930:Drivers/CMSIS/Include/core_cm7.h **** 
 931:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos 10U                                 /*!< ACTLR: FPEXCODIS Positi
 932:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos) /*!< ACTLR: FPEXCODIS Mask *
 933:Drivers/CMSIS/Include/core_cm7.h **** 
 934:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos 2U                                /*!< ACTLR: DISFOLD Position */
 935:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk (1UL << SCnSCB_ACTLR_DISFOLD_Pos) /*!< ACTLR: DISFOLD Mask */
 936:Drivers/CMSIS/Include/core_cm7.h **** 
 937:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos 0U                                       /*!< ACTLR: DISMCYCINT
 938:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/) /*!< ACTLR: DISMCYCINT
 939:Drivers/CMSIS/Include/core_cm7.h **** 
 940:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_SCnotSCB */
 941:Drivers/CMSIS/Include/core_cm7.h **** 
 942:Drivers/CMSIS/Include/core_cm7.h ****   /**
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 18


 943:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
 944:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 945:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the System Timer Registers.
 946:Drivers/CMSIS/Include/core_cm7.h ****     @{
 947:Drivers/CMSIS/Include/core_cm7.h ****    */
 948:Drivers/CMSIS/Include/core_cm7.h **** 
 949:Drivers/CMSIS/Include/core_cm7.h ****   /**
 950:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the System Timer (SysTick).
 951:Drivers/CMSIS/Include/core_cm7.h ****    */
 952:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
 953:Drivers/CMSIS/Include/core_cm7.h ****   {
 954:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CTRL; /*!< Offset: 0x000 (R/W)  SysTick Control and Status Register */
 955:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t LOAD; /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 956:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t VAL;  /*!< Offset: 0x008 (R/W)  SysTick Current Value Register */
 957:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CALIB; /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 958:Drivers/CMSIS/Include/core_cm7.h ****   } SysTick_Type;
 959:Drivers/CMSIS/Include/core_cm7.h **** 
 960:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 961:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos 16U                                 /*!< SysTick CTRL: COUNTFLAG
 962:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk (1UL << SysTick_CTRL_COUNTFLAG_Pos) /*!< SysTick CTRL: COUNTFLAG
 963:Drivers/CMSIS/Include/core_cm7.h **** 
 964:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos 2U                                  /*!< SysTick CTRL: CLKSOURCE
 965:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk (1UL << SysTick_CTRL_CLKSOURCE_Pos) /*!< SysTick CTRL: CLKSOURCE
 966:Drivers/CMSIS/Include/core_cm7.h **** 
 967:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos 1U                                /*!< SysTick CTRL: TICKINT Posit
 968:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk (1UL << SysTick_CTRL_TICKINT_Pos) /*!< SysTick CTRL: TICKINT Mask 
 969:Drivers/CMSIS/Include/core_cm7.h **** 
 970:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos 0U                                   /*!< SysTick CTRL: ENABLE Posi
 971:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk (1UL /*<< SysTick_CTRL_ENABLE_Pos*/) /*!< SysTick CTRL: ENABLE Mask
 972:Drivers/CMSIS/Include/core_cm7.h **** 
 973:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 974:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos 0U                                          /*!< SysTick LOAD: RELO
 975:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/) /*!< SysTick LOAD: RELO
 976:Drivers/CMSIS/Include/core_cm7.h **** 
 977:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 978:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos 0U                                          /*!< SysTick VAL: CURRE
 979:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/) /*!< SysTick VAL: CURRE
 980:Drivers/CMSIS/Include/core_cm7.h **** 
 981:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 982:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos 31U                              /*!< SysTick CALIB: NOREF Position
 983:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk (1UL << SysTick_CALIB_NOREF_Pos) /*!< SysTick CALIB: NOREF Mask */
 984:Drivers/CMSIS/Include/core_cm7.h **** 
 985:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos 30U                             /*!< SysTick CALIB: SKEW Position */
 986:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk (1UL << SysTick_CALIB_SKEW_Pos) /*!< SysTick CALIB: SKEW Mask */
 987:Drivers/CMSIS/Include/core_cm7.h **** 
 988:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos 0U                                          /*!< SysTick CALIB: TEN
 989:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/) /*!< SysTick CALIB: TEN
 990:Drivers/CMSIS/Include/core_cm7.h **** 
 991:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_SysTick */
 992:Drivers/CMSIS/Include/core_cm7.h **** 
 993:Drivers/CMSIS/Include/core_cm7.h ****   /**
 994:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
 995:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 996:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 997:Drivers/CMSIS/Include/core_cm7.h ****     @{
 998:Drivers/CMSIS/Include/core_cm7.h ****    */
 999:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 19


1000:Drivers/CMSIS/Include/core_cm7.h ****   /**
1001:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1002:Drivers/CMSIS/Include/core_cm7.h ****    */
1003:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1004:Drivers/CMSIS/Include/core_cm7.h ****   {
1005:Drivers/CMSIS/Include/core_cm7.h ****     __OM union
1006:Drivers/CMSIS/Include/core_cm7.h ****     {
1007:Drivers/CMSIS/Include/core_cm7.h ****       __OM uint8_t u8;   /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1008:Drivers/CMSIS/Include/core_cm7.h ****       __OM uint16_t u16; /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1009:Drivers/CMSIS/Include/core_cm7.h ****       __OM uint32_t u32; /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1010:Drivers/CMSIS/Include/core_cm7.h ****     } PORT[32U];         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1011:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[864U];
1012:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t TER; /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1013:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED1[15U];
1014:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t TPR; /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1015:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED2[15U];
1016:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t TCR; /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1017:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED3[29U];
1018:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t IWR;   /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register */
1019:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t IRR;   /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1020:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t IMCR; /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Register */
1021:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED4[43U];
1022:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t LAR; /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1023:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t LSR; /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1024:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED5[6U];
1025:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID4; /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Register #4 */
1026:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID5; /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Register #5 */
1027:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID6; /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Register #6 */
1028:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID7; /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Register #7 */
1029:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID0; /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Register #0 */
1030:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID1; /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Register #1 */
1031:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID2; /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Register #2 */
1032:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID3; /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Register #3 */
1033:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CID0; /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Register #0 */
1034:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CID1; /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Register #1 */
1035:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CID2; /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Register #2 */
1036:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CID3; /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Register #3 */
1037:Drivers/CMSIS/Include/core_cm7.h ****   } ITM_Type;
1038:Drivers/CMSIS/Include/core_cm7.h **** 
1039:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1040:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos 0U                                         /*!< ITM TPR: PRIVMASK Posi
1041:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/) /*!< ITM TPR: PRIVMASK Mask
1042:Drivers/CMSIS/Include/core_cm7.h **** 
1043:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1044:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos 23U                       /*!< ITM TCR: BUSY Position */
1045:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk (1UL << ITM_TCR_BUSY_Pos) /*!< ITM TCR: BUSY Mask */
1046:Drivers/CMSIS/Include/core_cm7.h **** 
1047:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos 16U                                /*!< ITM TCR: ATBID Position */
1048:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk (0x7FUL << ITM_TCR_TraceBusID_Pos) /*!< ITM TCR: ATBID Mask */
1049:Drivers/CMSIS/Include/core_cm7.h **** 
1050:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos 10U                          /*!< ITM TCR: Global timestamp frequency P
1051:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk (3UL << ITM_TCR_GTSFREQ_Pos) /*!< ITM TCR: Global timestamp frequency M
1052:Drivers/CMSIS/Include/core_cm7.h **** 
1053:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos 8U                              /*!< ITM TCR: TSPrescale Position */
1054:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk (3UL << ITM_TCR_TSPrescale_Pos) /*!< ITM TCR: TSPrescale Mask */
1055:Drivers/CMSIS/Include/core_cm7.h **** 
1056:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos 4U                          /*!< ITM TCR: SWOENA Position */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 20


1057:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk (1UL << ITM_TCR_SWOENA_Pos) /*!< ITM TCR: SWOENA Mask */
1058:Drivers/CMSIS/Include/core_cm7.h **** 
1059:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos 3U                          /*!< ITM TCR: DWTENA Position */
1060:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk (1UL << ITM_TCR_DWTENA_Pos) /*!< ITM TCR: DWTENA Mask */
1061:Drivers/CMSIS/Include/core_cm7.h **** 
1062:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos 2U                           /*!< ITM TCR: SYNCENA Position */
1063:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk (1UL << ITM_TCR_SYNCENA_Pos) /*!< ITM TCR: SYNCENA Mask */
1064:Drivers/CMSIS/Include/core_cm7.h **** 
1065:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos 1U                         /*!< ITM TCR: TSENA Position */
1066:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk (1UL << ITM_TCR_TSENA_Pos) /*!< ITM TCR: TSENA Mask */
1067:Drivers/CMSIS/Include/core_cm7.h **** 
1068:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos 0U                              /*!< ITM TCR: ITM Enable bit Position */
1069:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk (1UL /*<< ITM_TCR_ITMENA_Pos*/) /*!< ITM TCR: ITM Enable bit Mask */
1070:Drivers/CMSIS/Include/core_cm7.h **** 
1071:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1072:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos 0U                                /*!< ITM IWR: ATVALIDM Position */
1073:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk (1UL /*<< ITM_IWR_ATVALIDM_Pos*/) /*!< ITM IWR: ATVALIDM Mask */
1074:Drivers/CMSIS/Include/core_cm7.h **** 
1075:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1076:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos 0U                                /*!< ITM IRR: ATREADYM Position */
1077:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk (1UL /*<< ITM_IRR_ATREADYM_Pos*/) /*!< ITM IRR: ATREADYM Mask */
1078:Drivers/CMSIS/Include/core_cm7.h **** 
1079:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1080:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos 0U                                    /*!< ITM IMCR: INTEGRATION P
1081:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/) /*!< ITM IMCR: INTEGRATION M
1082:Drivers/CMSIS/Include/core_cm7.h **** 
1083:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1084:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos 2U                           /*!< ITM LSR: ByteAcc Position */
1085:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk (1UL << ITM_LSR_ByteAcc_Pos) /*!< ITM LSR: ByteAcc Mask */
1086:Drivers/CMSIS/Include/core_cm7.h **** 
1087:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos 1U                          /*!< ITM LSR: Access Position */
1088:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk (1UL << ITM_LSR_Access_Pos) /*!< ITM LSR: Access Mask */
1089:Drivers/CMSIS/Include/core_cm7.h **** 
1090:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos 0U                               /*!< ITM LSR: Present Position */
1091:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk (1UL /*<< ITM_LSR_Present_Pos*/) /*!< ITM LSR: Present Mask */
1092:Drivers/CMSIS/Include/core_cm7.h **** 
1093:Drivers/CMSIS/Include/core_cm7.h ****   /*@}*/ /* end of group CMSIS_ITM */
1094:Drivers/CMSIS/Include/core_cm7.h **** 
1095:Drivers/CMSIS/Include/core_cm7.h ****   /**
1096:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
1097:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1098:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1099:Drivers/CMSIS/Include/core_cm7.h ****     @{
1100:Drivers/CMSIS/Include/core_cm7.h ****    */
1101:Drivers/CMSIS/Include/core_cm7.h **** 
1102:Drivers/CMSIS/Include/core_cm7.h ****   /**
1103:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1104:Drivers/CMSIS/Include/core_cm7.h ****    */
1105:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1106:Drivers/CMSIS/Include/core_cm7.h ****   {
1107:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CTRL;      /*!< Offset: 0x000 (R/W)  Control Register */
1108:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CYCCNT;    /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1109:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CPICNT;    /*!< Offset: 0x008 (R/W)  CPI Count Register */
1110:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t EXCCNT;    /*!< Offset: 0x00C (R/W)  Exception Overhead Count Register */
1111:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t SLEEPCNT;  /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1112:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t LSUCNT;    /*!< Offset: 0x014 (R/W)  LSU Count Register */
1113:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FOLDCNT;   /*!< Offset: 0x018 (R/W)  Folded-instruction Count Register */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 21


1114:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PCSR;       /*!< Offset: 0x01C (R/ )  Program Counter Sample Register */
1115:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t COMP0;     /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1116:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t MASK0;     /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1117:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FUNCTION0; /*!< Offset: 0x028 (R/W)  Function Register 0 */
1118:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[1U];
1119:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t COMP1;     /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1120:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t MASK1;     /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1121:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FUNCTION1; /*!< Offset: 0x038 (R/W)  Function Register 1 */
1122:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED1[1U];
1123:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t COMP2;     /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1124:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t MASK2;     /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1125:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FUNCTION2; /*!< Offset: 0x048 (R/W)  Function Register 2 */
1126:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED2[1U];
1127:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t COMP3;     /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1128:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t MASK3;     /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1129:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FUNCTION3; /*!< Offset: 0x058 (R/W)  Function Register 3 */
1130:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED3[981U];
1131:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t LAR; /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1132:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t LSR; /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1133:Drivers/CMSIS/Include/core_cm7.h ****   } DWT_Type;
1134:Drivers/CMSIS/Include/core_cm7.h **** 
1135:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1136:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos 28U                             /*!< DWT CTRL: NUMCOMP Position */
1137:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk (0xFUL << DWT_CTRL_NUMCOMP_Pos) /*!< DWT CTRL: NUMCOMP Mask */
1138:Drivers/CMSIS/Include/core_cm7.h **** 
1139:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos 27U                              /*!< DWT CTRL: NOTRCPKT Position */
1140:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk (0x1UL << DWT_CTRL_NOTRCPKT_Pos) /*!< DWT CTRL: NOTRCPKT Mask */
1141:Drivers/CMSIS/Include/core_cm7.h **** 
1142:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos 26U                               /*!< DWT CTRL: NOEXTTRIG Position 
1143:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk (0x1UL << DWT_CTRL_NOEXTTRIG_Pos) /*!< DWT CTRL: NOEXTTRIG Mask */
1144:Drivers/CMSIS/Include/core_cm7.h **** 
1145:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos 25U                              /*!< DWT CTRL: NOCYCCNT Position */
1146:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk (0x1UL << DWT_CTRL_NOCYCCNT_Pos) /*!< DWT CTRL: NOCYCCNT Mask */
1147:Drivers/CMSIS/Include/core_cm7.h **** 
1148:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos 24U                              /*!< DWT CTRL: NOPRFCNT Position */
1149:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk (0x1UL << DWT_CTRL_NOPRFCNT_Pos) /*!< DWT CTRL: NOPRFCNT Mask */
1150:Drivers/CMSIS/Include/core_cm7.h **** 
1151:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos 22U                               /*!< DWT CTRL: CYCEVTENA Position 
1152:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk (0x1UL << DWT_CTRL_CYCEVTENA_Pos) /*!< DWT CTRL: CYCEVTENA Mask */
1153:Drivers/CMSIS/Include/core_cm7.h **** 
1154:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos 21U                                /*!< DWT CTRL: FOLDEVTENA Positi
1155:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk (0x1UL << DWT_CTRL_FOLDEVTENA_Pos) /*!< DWT CTRL: FOLDEVTENA Mask *
1156:Drivers/CMSIS/Include/core_cm7.h **** 
1157:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos 20U                               /*!< DWT CTRL: LSUEVTENA Position 
1158:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk (0x1UL << DWT_CTRL_LSUEVTENA_Pos) /*!< DWT CTRL: LSUEVTENA Mask */
1159:Drivers/CMSIS/Include/core_cm7.h **** 
1160:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos 19U                                 /*!< DWT CTRL: SLEEPEVTENA Pos
1161:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos) /*!< DWT CTRL: SLEEPEVTENA Mas
1162:Drivers/CMSIS/Include/core_cm7.h **** 
1163:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos 18U                               /*!< DWT CTRL: EXCEVTENA Position 
1164:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk (0x1UL << DWT_CTRL_EXCEVTENA_Pos) /*!< DWT CTRL: EXCEVTENA Mask */
1165:Drivers/CMSIS/Include/core_cm7.h **** 
1166:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos 17U                               /*!< DWT CTRL: CPIEVTENA Position 
1167:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk (0x1UL << DWT_CTRL_CPIEVTENA_Pos) /*!< DWT CTRL: CPIEVTENA Mask */
1168:Drivers/CMSIS/Include/core_cm7.h **** 
1169:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos 16U                               /*!< DWT CTRL: EXCTRCENA Position 
1170:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk (0x1UL << DWT_CTRL_EXCTRCENA_Pos) /*!< DWT CTRL: EXCTRCENA Mask */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 22


1171:Drivers/CMSIS/Include/core_cm7.h **** 
1172:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos 12U                                /*!< DWT CTRL: PCSAMPLENA Positi
1173:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk (0x1UL << DWT_CTRL_PCSAMPLENA_Pos) /*!< DWT CTRL: PCSAMPLENA Mask *
1174:Drivers/CMSIS/Include/core_cm7.h **** 
1175:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos 10U                             /*!< DWT CTRL: SYNCTAP Position */
1176:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk (0x3UL << DWT_CTRL_SYNCTAP_Pos) /*!< DWT CTRL: SYNCTAP Mask */
1177:Drivers/CMSIS/Include/core_cm7.h **** 
1178:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos 9U                             /*!< DWT CTRL: CYCTAP Position */
1179:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk (0x1UL << DWT_CTRL_CYCTAP_Pos) /*!< DWT CTRL: CYCTAP Mask */
1180:Drivers/CMSIS/Include/core_cm7.h **** 
1181:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos 5U                               /*!< DWT CTRL: POSTINIT Position */
1182:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk (0xFUL << DWT_CTRL_POSTINIT_Pos) /*!< DWT CTRL: POSTINIT Mask */
1183:Drivers/CMSIS/Include/core_cm7.h **** 
1184:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos 1U                                 /*!< DWT CTRL: POSTPRESET Positi
1185:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk (0xFUL << DWT_CTRL_POSTPRESET_Pos) /*!< DWT CTRL: POSTPRESET Mask *
1186:Drivers/CMSIS/Include/core_cm7.h **** 
1187:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos 0U                                    /*!< DWT CTRL: CYCCNTENA Posit
1188:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/) /*!< DWT CTRL: CYCCNTENA Mask 
1189:Drivers/CMSIS/Include/core_cm7.h **** 
1190:Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1191:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos 0U                                    /*!< DWT CPICNT: CPICNT Positio
1192:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/) /*!< DWT CPICNT: CPICNT Mask */
1193:Drivers/CMSIS/Include/core_cm7.h **** 
1194:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1195:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos 0U                                    /*!< DWT EXCCNT: EXCCNT Positio
1196:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/) /*!< DWT EXCCNT: EXCCNT Mask */
1197:Drivers/CMSIS/Include/core_cm7.h **** 
1198:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1199:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos 0U                                        /*!< DWT SLEEPCNT: SLEE
1200:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/) /*!< DWT SLEEPCNT: SLEE
1201:Drivers/CMSIS/Include/core_cm7.h **** 
1202:Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1203:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos 0U                                    /*!< DWT LSUCNT: LSUCNT Positio
1204:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/) /*!< DWT LSUCNT: LSUCNT Mask */
1205:Drivers/CMSIS/Include/core_cm7.h **** 
1206:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1207:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos 0U                                      /*!< DWT FOLDCNT: FOLDCNT P
1208:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/) /*!< DWT FOLDCNT: FOLDCNT M
1209:Drivers/CMSIS/Include/core_cm7.h **** 
1210:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1211:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos 0U                                /*!< DWT MASK: MASK Position */
1212:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk (0x1FUL /*<< DWT_MASK_MASK_Pos*/) /*!< DWT MASK: MASK Mask */
1213:Drivers/CMSIS/Include/core_cm7.h **** 
1214:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1215:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos 24U                                 /*!< DWT FUNCTION: MATCHED Pos
1216:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk (0x1UL << DWT_FUNCTION_MATCHED_Pos) /*!< DWT FUNCTION: MATCHED Mas
1217:Drivers/CMSIS/Include/core_cm7.h **** 
1218:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos 16U                                    /*!< DWT FUNCTION: DATAV
1219:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos) /*!< DWT FUNCTION: DATAV
1220:Drivers/CMSIS/Include/core_cm7.h **** 
1221:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos 12U                                    /*!< DWT FUNCTION: DATAV
1222:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos) /*!< DWT FUNCTION: DATAV
1223:Drivers/CMSIS/Include/core_cm7.h **** 
1224:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos 10U                                   /*!< DWT FUNCTION: DATAVSI
1225:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos) /*!< DWT FUNCTION: DATAVSI
1226:Drivers/CMSIS/Include/core_cm7.h **** 
1227:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos 9U                                  /*!< DWT FUNCTION: LNK1ENA Pos
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 23


1228:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk (0x1UL << DWT_FUNCTION_LNK1ENA_Pos) /*!< DWT FUNCTION: LNK1ENA Mas
1229:Drivers/CMSIS/Include/core_cm7.h **** 
1230:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos 8U                                     /*!< DWT FUNCTION: DATAV
1231:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos) /*!< DWT FUNCTION: DATAV
1232:Drivers/CMSIS/Include/core_cm7.h **** 
1233:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos 7U                                   /*!< DWT FUNCTION: CYCMATCH 
1234:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk (0x1UL << DWT_FUNCTION_CYCMATCH_Pos) /*!< DWT FUNCTION: CYCMATCH 
1235:Drivers/CMSIS/Include/core_cm7.h **** 
1236:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos 5U                                    /*!< DWT FUNCTION: EMITRAN
1237:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk (0x1UL << DWT_FUNCTION_EMITRANGE_Pos) /*!< DWT FUNCTION: EMITRAN
1238:Drivers/CMSIS/Include/core_cm7.h **** 
1239:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos 0U                                       /*!< DWT FUNCTION: FUNCT
1240:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/) /*!< DWT FUNCTION: FUNCT
1241:Drivers/CMSIS/Include/core_cm7.h **** 
1242:Drivers/CMSIS/Include/core_cm7.h ****   /*@}*/ /* end of group CMSIS_DWT */
1243:Drivers/CMSIS/Include/core_cm7.h **** 
1244:Drivers/CMSIS/Include/core_cm7.h ****   /**
1245:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
1246:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1247:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Trace Port Interface (TPI)
1248:Drivers/CMSIS/Include/core_cm7.h ****     @{
1249:Drivers/CMSIS/Include/core_cm7.h ****    */
1250:Drivers/CMSIS/Include/core_cm7.h **** 
1251:Drivers/CMSIS/Include/core_cm7.h ****   /**
1252:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Trace Port Interface Register (TPI).
1253:Drivers/CMSIS/Include/core_cm7.h ****    */
1254:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1255:Drivers/CMSIS/Include/core_cm7.h ****   {
1256:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t SSPSR;  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Register */
1257:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CSPSR; /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Register */
1258:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[2U];
1259:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ACPR; /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Register */
1260:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED1[55U];
1261:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t SPPR; /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register */
1262:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED2[131U];
1263:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t FFSR;  /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Register */
1264:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FFCR; /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Register */
1265:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t FSCR;  /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counter Register */
1266:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED3[759U];
1267:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t TRIGGER;   /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1268:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t FIFO0;     /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1269:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ITATBCTR2; /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1270:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED4[1U];
1271:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ITATBCTR0; /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1272:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t FIFO1;     /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1273:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ITCTRL;   /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1274:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED5[39U];
1275:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CLAIMSET; /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1276:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CLAIMCLR; /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1277:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED7[8U];
1278:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t DEVID;   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1279:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t DEVTYPE; /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1280:Drivers/CMSIS/Include/core_cm7.h ****   } TPI_Type;
1281:Drivers/CMSIS/Include/core_cm7.h **** 
1282:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1283:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos 0U                                       /*!< TPI ACPR: PRESCALER Po
1284:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/) /*!< TPI ACPR: PRESCALER Ma
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 24


1285:Drivers/CMSIS/Include/core_cm7.h **** 
1286:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1287:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos 0U                                 /*!< TPI SPPR: TXMODE Position */
1288:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/) /*!< TPI SPPR: TXMODE Mask */
1289:Drivers/CMSIS/Include/core_cm7.h **** 
1290:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1291:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos 3U                                /*!< TPI FFSR: FtNonStop Position 
1292:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk (0x1UL << TPI_FFSR_FtNonStop_Pos) /*!< TPI FFSR: FtNonStop Mask */
1293:Drivers/CMSIS/Include/core_cm7.h **** 
1294:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos 2U                                /*!< TPI FFSR: TCPresent Position 
1295:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk (0x1UL << TPI_FFSR_TCPresent_Pos) /*!< TPI FFSR: TCPresent Mask */
1296:Drivers/CMSIS/Include/core_cm7.h **** 
1297:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos 1U                                /*!< TPI FFSR: FtStopped Position 
1298:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk (0x1UL << TPI_FFSR_FtStopped_Pos) /*!< TPI FFSR: FtStopped Mask */
1299:Drivers/CMSIS/Include/core_cm7.h **** 
1300:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos 0U                                   /*!< TPI FFSR: FlInProg Position
1301:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/) /*!< TPI FFSR: FlInProg Mask */
1302:Drivers/CMSIS/Include/core_cm7.h **** 
1303:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1304:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos 8U                             /*!< TPI FFCR: TrigIn Position */
1305:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk (0x1UL << TPI_FFCR_TrigIn_Pos) /*!< TPI FFCR: TrigIn Mask */
1306:Drivers/CMSIS/Include/core_cm7.h **** 
1307:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos 1U                              /*!< TPI FFCR: EnFCont Position */
1308:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk (0x1UL << TPI_FFCR_EnFCont_Pos) /*!< TPI FFCR: EnFCont Mask */
1309:Drivers/CMSIS/Include/core_cm7.h **** 
1310:Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1311:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos 0U                                     /*!< TPI TRIGGER: TRIGGER Po
1312:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/) /*!< TPI TRIGGER: TRIGGER Ma
1313:Drivers/CMSIS/Include/core_cm7.h **** 
1314:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1315:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos 29U                                  /*!< TPI FIFO0: ITM_ATVALID 
1316:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos) /*!< TPI FIFO0: ITM_ATVALID 
1317:Drivers/CMSIS/Include/core_cm7.h **** 
1318:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos 27U                                    /*!< TPI FIFO0: ITM_byte
1319:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk (0x3UL << TPI_FIFO0_ITM_bytecount_Pos) /*!< TPI FIFO0: ITM_byte
1320:Drivers/CMSIS/Include/core_cm7.h **** 
1321:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos 26U                                  /*!< TPI FIFO0: ETM_ATVALID 
1322:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos) /*!< TPI FIFO0: ETM_ATVALID 
1323:Drivers/CMSIS/Include/core_cm7.h **** 
1324:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos 24U                                    /*!< TPI FIFO0: ETM_byte
1325:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk (0x3UL << TPI_FIFO0_ETM_bytecount_Pos) /*!< TPI FIFO0: ETM_byte
1326:Drivers/CMSIS/Include/core_cm7.h **** 
1327:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos 16U                            /*!< TPI FIFO0: ETM2 Position */
1328:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk (0xFFUL << TPI_FIFO0_ETM2_Pos) /*!< TPI FIFO0: ETM2 Mask */
1329:Drivers/CMSIS/Include/core_cm7.h **** 
1330:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos 8U                             /*!< TPI FIFO0: ETM1 Position */
1331:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk (0xFFUL << TPI_FIFO0_ETM1_Pos) /*!< TPI FIFO0: ETM1 Mask */
1332:Drivers/CMSIS/Include/core_cm7.h **** 
1333:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos 0U                                 /*!< TPI FIFO0: ETM0 Position */
1334:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/) /*!< TPI FIFO0: ETM0 Mask */
1335:Drivers/CMSIS/Include/core_cm7.h **** 
1336:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1337:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos 0U                                        /*!< TPI ITATBCTR2: AT
1338:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/) /*!< TPI ITATBCTR2: AT
1339:Drivers/CMSIS/Include/core_cm7.h **** 
1340:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos 0U                                        /*!< TPI ITATBCTR2: AT
1341:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/) /*!< TPI ITATBCTR2: AT
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 25


1342:Drivers/CMSIS/Include/core_cm7.h **** 
1343:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1344:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos 29U                                  /*!< TPI FIFO1: ITM_ATVALID 
1345:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos) /*!< TPI FIFO1: ITM_ATVALID 
1346:Drivers/CMSIS/Include/core_cm7.h **** 
1347:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos 27U                                    /*!< TPI FIFO1: ITM_byte
1348:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk (0x3UL << TPI_FIFO1_ITM_bytecount_Pos) /*!< TPI FIFO1: ITM_byte
1349:Drivers/CMSIS/Include/core_cm7.h **** 
1350:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos 26U                                  /*!< TPI FIFO1: ETM_ATVALID 
1351:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos) /*!< TPI FIFO1: ETM_ATVALID 
1352:Drivers/CMSIS/Include/core_cm7.h **** 
1353:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos 24U                                    /*!< TPI FIFO1: ETM_byte
1354:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk (0x3UL << TPI_FIFO1_ETM_bytecount_Pos) /*!< TPI FIFO1: ETM_byte
1355:Drivers/CMSIS/Include/core_cm7.h **** 
1356:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos 16U                            /*!< TPI FIFO1: ITM2 Position */
1357:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk (0xFFUL << TPI_FIFO1_ITM2_Pos) /*!< TPI FIFO1: ITM2 Mask */
1358:Drivers/CMSIS/Include/core_cm7.h **** 
1359:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos 8U                             /*!< TPI FIFO1: ITM1 Position */
1360:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk (0xFFUL << TPI_FIFO1_ITM1_Pos) /*!< TPI FIFO1: ITM1 Mask */
1361:Drivers/CMSIS/Include/core_cm7.h **** 
1362:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos 0U                                 /*!< TPI FIFO1: ITM0 Position */
1363:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/) /*!< TPI FIFO1: ITM0 Mask */
1364:Drivers/CMSIS/Include/core_cm7.h **** 
1365:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1366:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos 0U                                        /*!< TPI ITATBCTR0: AT
1367:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/) /*!< TPI ITATBCTR0: AT
1368:Drivers/CMSIS/Include/core_cm7.h **** 
1369:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos 0U                                        /*!< TPI ITATBCTR0: AT
1370:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/) /*!< TPI ITATBCTR0: AT
1371:Drivers/CMSIS/Include/core_cm7.h **** 
1372:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1373:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos 0U                                 /*!< TPI ITCTRL: Mode Position */
1374:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/) /*!< TPI ITCTRL: Mode Mask */
1375:Drivers/CMSIS/Include/core_cm7.h **** 
1376:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1377:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos 11U                               /*!< TPI DEVID: NRZVALID Position 
1378:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk (0x1UL << TPI_DEVID_NRZVALID_Pos) /*!< TPI DEVID: NRZVALID Mask */
1379:Drivers/CMSIS/Include/core_cm7.h **** 
1380:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos 10U                                /*!< TPI DEVID: MANCVALID Positi
1381:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk (0x1UL << TPI_DEVID_MANCVALID_Pos) /*!< TPI DEVID: MANCVALID Mask *
1382:Drivers/CMSIS/Include/core_cm7.h **** 
1383:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos 9U                                 /*!< TPI DEVID: PTINVALID Positi
1384:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk (0x1UL << TPI_DEVID_PTINVALID_Pos) /*!< TPI DEVID: PTINVALID Mask *
1385:Drivers/CMSIS/Include/core_cm7.h **** 
1386:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos 6U                                /*!< TPI DEVID: MinBufSz Position 
1387:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk (0x7UL << TPI_DEVID_MinBufSz_Pos) /*!< TPI DEVID: MinBufSz Mask */
1388:Drivers/CMSIS/Include/core_cm7.h **** 
1389:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos 5U                                 /*!< TPI DEVID: AsynClkIn Positi
1390:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk (0x1UL << TPI_DEVID_AsynClkIn_Pos) /*!< TPI DEVID: AsynClkIn Mask *
1391:Drivers/CMSIS/Include/core_cm7.h **** 
1392:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos 0U                                         /*!< TPI DEVID: NrTra
1393:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/) /*!< TPI DEVID: NrTra
1394:Drivers/CMSIS/Include/core_cm7.h **** 
1395:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1396:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos 4U                                     /*!< TPI DEVTYPE: SubType Po
1397:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/) /*!< TPI DEVTYPE: SubType Ma
1398:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 26


1399:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos 0U                                   /*!< TPI DEVTYPE: MajorType 
1400:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk (0xFUL << TPI_DEVTYPE_MajorType_Pos) /*!< TPI DEVTYPE: MajorType 
1401:Drivers/CMSIS/Include/core_cm7.h **** 
1402:Drivers/CMSIS/Include/core_cm7.h ****   /*@}*/ /* end of group CMSIS_TPI */
1403:Drivers/CMSIS/Include/core_cm7.h **** 
1404:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1405:Drivers/CMSIS/Include/core_cm7.h ****   /**
1406:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
1407:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1408:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Memory Protection Unit (MPU)
1409:Drivers/CMSIS/Include/core_cm7.h ****     @{
1410:Drivers/CMSIS/Include/core_cm7.h ****    */
1411:Drivers/CMSIS/Include/core_cm7.h **** 
1412:Drivers/CMSIS/Include/core_cm7.h ****   /**
1413:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Memory Protection Unit (MPU).
1414:Drivers/CMSIS/Include/core_cm7.h ****    */
1415:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1416:Drivers/CMSIS/Include/core_cm7.h ****   {
1417:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t TYPE;     /*!< Offset: 0x000 (R/ )  MPU Type Register */
1418:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CTRL;    /*!< Offset: 0x004 (R/W)  MPU Control Register */
1419:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RNR;     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1420:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RBAR;    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register */
1421:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RASR;    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Register */
1422:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RBAR_A1; /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address Register */
1423:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RASR_A1; /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and Size Registe
1424:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RBAR_A2; /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address Register */
1425:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RASR_A2; /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and Size Registe
1426:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RBAR_A3; /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address Register */
1427:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RASR_A3; /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and Size Registe
1428:Drivers/CMSIS/Include/core_cm7.h ****   } MPU_Type;
1429:Drivers/CMSIS/Include/core_cm7.h **** 
1430:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES 4U
1431:Drivers/CMSIS/Include/core_cm7.h **** 
1432:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1433:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos 16U                              /*!< MPU TYPE: IREGION Position */
1434:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk (0xFFUL << MPU_TYPE_IREGION_Pos) /*!< MPU TYPE: IREGION Mask */
1435:Drivers/CMSIS/Include/core_cm7.h **** 
1436:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos 8U                               /*!< MPU TYPE: DREGION Position */
1437:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk (0xFFUL << MPU_TYPE_DREGION_Pos) /*!< MPU TYPE: DREGION Mask */
1438:Drivers/CMSIS/Include/core_cm7.h **** 
1439:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos 0U                                 /*!< MPU TYPE: SEPARATE Position *
1440:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk (1UL /*<< MPU_TYPE_SEPARATE_Pos*/) /*!< MPU TYPE: SEPARATE Mask */
1441:Drivers/CMSIS/Include/core_cm7.h **** 
1442:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1443:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos 2U                               /*!< MPU CTRL: PRIVDEFENA Position
1444:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk (1UL << MPU_CTRL_PRIVDEFENA_Pos) /*!< MPU CTRL: PRIVDEFENA Mask */
1445:Drivers/CMSIS/Include/core_cm7.h **** 
1446:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos 1U                             /*!< MPU CTRL: HFNMIENA Position */
1447:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk (1UL << MPU_CTRL_HFNMIENA_Pos) /*!< MPU CTRL: HFNMIENA Mask */
1448:Drivers/CMSIS/Include/core_cm7.h **** 
1449:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos 0U                               /*!< MPU CTRL: ENABLE Position */
1450:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk (1UL /*<< MPU_CTRL_ENABLE_Pos*/) /*!< MPU CTRL: ENABLE Mask */
1451:Drivers/CMSIS/Include/core_cm7.h **** 
1452:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1453:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos 0U                                 /*!< MPU RNR: REGION Position */
1454:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk (0xFFUL /*<< MPU_RNR_REGION_Pos*/) /*!< MPU RNR: REGION Mask */
1455:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 27


1456:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1457:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos 5U                                 /*!< MPU RBAR: ADDR Position */
1458:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos) /*!< MPU RBAR: ADDR Mask */
1459:Drivers/CMSIS/Include/core_cm7.h **** 
1460:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos 4U                          /*!< MPU RBAR: VALID Position */
1461:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk (1UL << MPU_RBAR_VALID_Pos) /*!< MPU RBAR: VALID Mask */
1462:Drivers/CMSIS/Include/core_cm7.h **** 
1463:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos 0U                                 /*!< MPU RBAR: REGION Position */
1464:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk (0xFUL /*<< MPU_RBAR_REGION_Pos*/) /*!< MPU RBAR: REGION Mask */
1465:Drivers/CMSIS/Include/core_cm7.h **** 
1466:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1467:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos 16U                              /*!< MPU RASR: MPU Region Attribute fie
1468:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk (0xFFFFUL << MPU_RASR_ATTRS_Pos) /*!< MPU RASR: MPU Region Attribute fie
1469:Drivers/CMSIS/Include/core_cm7.h **** 
1470:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos 28U                      /*!< MPU RASR: ATTRS.XN Position */
1471:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk (1UL << MPU_RASR_XN_Pos) /*!< MPU RASR: ATTRS.XN Mask */
1472:Drivers/CMSIS/Include/core_cm7.h **** 
1473:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos 24U                        /*!< MPU RASR: ATTRS.AP Position */
1474:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk (0x7UL << MPU_RASR_AP_Pos) /*!< MPU RASR: ATTRS.AP Mask */
1475:Drivers/CMSIS/Include/core_cm7.h **** 
1476:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos 19U                         /*!< MPU RASR: ATTRS.TEX Position */
1477:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk (0x7UL << MPU_RASR_TEX_Pos) /*!< MPU RASR: ATTRS.TEX Mask */
1478:Drivers/CMSIS/Include/core_cm7.h **** 
1479:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos 18U                     /*!< MPU RASR: ATTRS.S Position */
1480:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk (1UL << MPU_RASR_S_Pos) /*!< MPU RASR: ATTRS.S Mask */
1481:Drivers/CMSIS/Include/core_cm7.h **** 
1482:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos 17U                     /*!< MPU RASR: ATTRS.C Position */
1483:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk (1UL << MPU_RASR_C_Pos) /*!< MPU RASR: ATTRS.C Mask */
1484:Drivers/CMSIS/Include/core_cm7.h **** 
1485:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos 16U                     /*!< MPU RASR: ATTRS.B Position */
1486:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk (1UL << MPU_RASR_B_Pos) /*!< MPU RASR: ATTRS.B Mask */
1487:Drivers/CMSIS/Include/core_cm7.h **** 
1488:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos 8U                           /*!< MPU RASR: Sub-Region Disable Position */
1489:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk (0xFFUL << MPU_RASR_SRD_Pos) /*!< MPU RASR: Sub-Region Disable Mask */
1490:Drivers/CMSIS/Include/core_cm7.h **** 
1491:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos 1U                            /*!< MPU RASR: Region Size Field Position *
1492:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk (0x1FUL << MPU_RASR_SIZE_Pos) /*!< MPU RASR: Region Size Field Mask */
1493:Drivers/CMSIS/Include/core_cm7.h **** 
1494:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos 0U                               /*!< MPU RASR: Region enable bit Posit
1495:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk (1UL /*<< MPU_RASR_ENABLE_Pos*/) /*!< MPU RASR: Region enable bit Disab
1496:Drivers/CMSIS/Include/core_cm7.h **** 
1497:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1498:Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1499:Drivers/CMSIS/Include/core_cm7.h **** 
1500:Drivers/CMSIS/Include/core_cm7.h ****   /**
1501:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
1502:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1503:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Floating Point Unit (FPU)
1504:Drivers/CMSIS/Include/core_cm7.h ****     @{
1505:Drivers/CMSIS/Include/core_cm7.h ****    */
1506:Drivers/CMSIS/Include/core_cm7.h **** 
1507:Drivers/CMSIS/Include/core_cm7.h ****   /**
1508:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Floating Point Unit (FPU).
1509:Drivers/CMSIS/Include/core_cm7.h ****    */
1510:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1511:Drivers/CMSIS/Include/core_cm7.h ****   {
1512:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[1U];
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 28


1513:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FPCCR;  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control Register */
1514:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FPCAR;  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address Register */
1515:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FPDSCR; /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Control Register
1516:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR0;   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 */
1517:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR1;   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 */
1518:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR2;   /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 */
1519:Drivers/CMSIS/Include/core_cm7.h ****   } FPU_Type;
1520:Drivers/CMSIS/Include/core_cm7.h **** 
1521:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1522:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos 31U                          /*!< FPCCR: ASPEN bit Position */
1523:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk (1UL << FPU_FPCCR_ASPEN_Pos) /*!< FPCCR: ASPEN bit Mask */
1524:Drivers/CMSIS/Include/core_cm7.h **** 
1525:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos 30U                          /*!< FPCCR: LSPEN Position */
1526:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk (1UL << FPU_FPCCR_LSPEN_Pos) /*!< FPCCR: LSPEN bit Mask */
1527:Drivers/CMSIS/Include/core_cm7.h **** 
1528:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos 8U                            /*!< FPCCR: MONRDY Position */
1529:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk (1UL << FPU_FPCCR_MONRDY_Pos) /*!< FPCCR: MONRDY bit Mask */
1530:Drivers/CMSIS/Include/core_cm7.h **** 
1531:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos 6U                           /*!< FPCCR: BFRDY Position */
1532:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk (1UL << FPU_FPCCR_BFRDY_Pos) /*!< FPCCR: BFRDY bit Mask */
1533:Drivers/CMSIS/Include/core_cm7.h **** 
1534:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos 5U                           /*!< FPCCR: MMRDY Position */
1535:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk (1UL << FPU_FPCCR_MMRDY_Pos) /*!< FPCCR: MMRDY bit Mask */
1536:Drivers/CMSIS/Include/core_cm7.h **** 
1537:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos 4U                           /*!< FPCCR: HFRDY Position */
1538:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk (1UL << FPU_FPCCR_HFRDY_Pos) /*!< FPCCR: HFRDY bit Mask */
1539:Drivers/CMSIS/Include/core_cm7.h **** 
1540:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos 3U                            /*!< FPCCR: processor mode bit Position 
1541:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk (1UL << FPU_FPCCR_THREAD_Pos) /*!< FPCCR: processor mode active bit Ma
1542:Drivers/CMSIS/Include/core_cm7.h **** 
1543:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos 1U                          /*!< FPCCR: privilege level bit Position */
1544:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk (1UL << FPU_FPCCR_USER_Pos) /*!< FPCCR: privilege level bit Mask */
1545:Drivers/CMSIS/Include/core_cm7.h **** 
1546:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos 0U                                /*!< FPCCR: Lazy state preservation 
1547:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk (1UL /*<< FPU_FPCCR_LSPACT_Pos*/) /*!< FPCCR: Lazy state preservation 
1548:Drivers/CMSIS/Include/core_cm7.h **** 
1549:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1550:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos 3U                                      /*!< FPCAR: ADDRESS bit Posit
1551:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos) /*!< FPCAR: ADDRESS bit Mask 
1552:Drivers/CMSIS/Include/core_cm7.h **** 
1553:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1554:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos 26U                         /*!< FPDSCR: AHP bit Position */
1555:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk (1UL << FPU_FPDSCR_AHP_Pos) /*!< FPDSCR: AHP bit Mask */
1556:Drivers/CMSIS/Include/core_cm7.h **** 
1557:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos 25U                        /*!< FPDSCR: DN bit Position */
1558:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk (1UL << FPU_FPDSCR_DN_Pos) /*!< FPDSCR: DN bit Mask */
1559:Drivers/CMSIS/Include/core_cm7.h **** 
1560:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos 24U                        /*!< FPDSCR: FZ bit Position */
1561:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk (1UL << FPU_FPDSCR_FZ_Pos) /*!< FPDSCR: FZ bit Mask */
1562:Drivers/CMSIS/Include/core_cm7.h **** 
1563:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos 22U                           /*!< FPDSCR: RMode bit Position */
1564:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk (3UL << FPU_FPDSCR_RMode_Pos) /*!< FPDSCR: RMode bit Mask */
1565:Drivers/CMSIS/Include/core_cm7.h **** 
1566:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1567:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos 28U                                        /*!< MVFR0: FP r
1568:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos) /*!< MVFR0: FP r
1569:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 29


1570:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos 24U                                    /*!< MVFR0: Short vector
1571:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk (0xFUL << FPU_MVFR0_Short_vectors_Pos) /*!< MVFR0: Short vector
1572:Drivers/CMSIS/Include/core_cm7.h **** 
1573:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos 20U                                  /*!< MVFR0: Square root bits
1574:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk (0xFUL << FPU_MVFR0_Square_root_Pos) /*!< MVFR0: Square root bits
1575:Drivers/CMSIS/Include/core_cm7.h **** 
1576:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos 16U                             /*!< MVFR0: Divide bits Position */
1577:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk (0xFUL << FPU_MVFR0_Divide_Pos) /*!< MVFR0: Divide bits Mask */
1578:Drivers/CMSIS/Include/core_cm7.h **** 
1579:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos 12U                                        /*!< MVFR0: FP e
1580:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos) /*!< MVFR0: FP e
1581:Drivers/CMSIS/Include/core_cm7.h **** 
1582:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos 8U                                        /*!< MVFR0: Double
1583:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk (0xFUL << FPU_MVFR0_Double_precision_Pos) /*!< MVFR0: Double
1584:Drivers/CMSIS/Include/core_cm7.h **** 
1585:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos 4U                                        /*!< MVFR0: Single
1586:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk (0xFUL << FPU_MVFR0_Single_precision_Pos) /*!< MVFR0: Single
1587:Drivers/CMSIS/Include/core_cm7.h **** 
1588:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos 0U                                            /*!< MVFR0: A_
1589:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/) /*!< MVFR0: A_
1590:Drivers/CMSIS/Include/core_cm7.h **** 
1591:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1592:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos 28U                                   /*!< MVFR1: FP fused MAC b
1593:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos) /*!< MVFR1: FP fused MAC b
1594:Drivers/CMSIS/Include/core_cm7.h **** 
1595:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos 24U                              /*!< MVFR1: FP HPFP bits Position */
1596:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk (0xFUL << FPU_MVFR1_FP_HPFP_Pos) /*!< MVFR1: FP HPFP bits Mask */
1597:Drivers/CMSIS/Include/core_cm7.h **** 
1598:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos 4U                                  /*!< MVFR1: D_NaN mode bits Po
1599:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk (0xFUL << FPU_MVFR1_D_NaN_mode_Pos) /*!< MVFR1: D_NaN mode bits Ma
1600:Drivers/CMSIS/Include/core_cm7.h **** 
1601:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos 0U                                    /*!< MVFR1: FtZ mode bits Posi
1602:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/) /*!< MVFR1: FtZ mode bits Mask
1603:Drivers/CMSIS/Include/core_cm7.h **** 
1604:Drivers/CMSIS/Include/core_cm7.h ****   /* Media and FP Feature Register 2 Definitions */
1605:Drivers/CMSIS/Include/core_cm7.h **** 
1606:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_FPU */
1607:Drivers/CMSIS/Include/core_cm7.h **** 
1608:Drivers/CMSIS/Include/core_cm7.h ****   /**
1609:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
1610:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1611:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Core Debug Registers
1612:Drivers/CMSIS/Include/core_cm7.h ****     @{
1613:Drivers/CMSIS/Include/core_cm7.h ****    */
1614:Drivers/CMSIS/Include/core_cm7.h **** 
1615:Drivers/CMSIS/Include/core_cm7.h ****   /**
1616:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Core Debug Register (CoreDebug).
1617:Drivers/CMSIS/Include/core_cm7.h ****    */
1618:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1619:Drivers/CMSIS/Include/core_cm7.h ****   {
1620:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t DHCSR; /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status Register */
1621:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCRSR;  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Register */
1622:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t DCRDR; /*!< Offset: 0x008 (R/W)  Debug Core Register Data Register */
1623:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t DEMCR; /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Control Register */
1624:Drivers/CMSIS/Include/core_cm7.h ****   } CoreDebug_Type;
1625:Drivers/CMSIS/Include/core_cm7.h **** 
1626:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 30


1627:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos 16U                                      /*!< CoreDebug DHCSR: D
1628:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos) /*!< CoreDebug DHCSR: D
1629:Drivers/CMSIS/Include/core_cm7.h **** 
1630:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos 25U                                     /*!< CoreDebug DHCSR
1631:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos) /*!< CoreDebug DHCSR
1632:Drivers/CMSIS/Include/core_cm7.h **** 
1633:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos 24U                                      /*!< CoreDebug DHC
1634:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos) /*!< CoreDebug DHC
1635:Drivers/CMSIS/Include/core_cm7.h **** 
1636:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos 19U                                   /*!< CoreDebug DHCSR: S_
1637:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos) /*!< CoreDebug DHCSR: S_
1638:Drivers/CMSIS/Include/core_cm7.h **** 
1639:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos 18U                                  /*!< CoreDebug DHCSR: S_SL
1640:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk (1UL << CoreDebug_DHCSR_S_SLEEP_Pos) /*!< CoreDebug DHCSR: S_SL
1641:Drivers/CMSIS/Include/core_cm7.h **** 
1642:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos 17U                                 /*!< CoreDebug DHCSR: S_HALT
1643:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk (1UL << CoreDebug_DHCSR_S_HALT_Pos) /*!< CoreDebug DHCSR: S_HALT
1644:Drivers/CMSIS/Include/core_cm7.h **** 
1645:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos 16U                                   /*!< CoreDebug DHCSR: S_
1646:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk (1UL << CoreDebug_DHCSR_S_REGRDY_Pos) /*!< CoreDebug DHCSR: S_
1647:Drivers/CMSIS/Include/core_cm7.h **** 
1648:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos 5U                                       /*!< CoreDebug DHC
1649:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos) /*!< CoreDebug DHC
1650:Drivers/CMSIS/Include/core_cm7.h **** 
1651:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos 3U                                      /*!< CoreDebug DHCSR
1652:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos) /*!< CoreDebug DHCSR
1653:Drivers/CMSIS/Include/core_cm7.h **** 
1654:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos 2U                                  /*!< CoreDebug DHCSR: C_STEP
1655:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk (1UL << CoreDebug_DHCSR_C_STEP_Pos) /*!< CoreDebug DHCSR: C_STEP
1656:Drivers/CMSIS/Include/core_cm7.h **** 
1657:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos 1U                                  /*!< CoreDebug DHCSR: C_HALT
1658:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk (1UL << CoreDebug_DHCSR_C_HALT_Pos) /*!< CoreDebug DHCSR: C_HALT
1659:Drivers/CMSIS/Include/core_cm7.h **** 
1660:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos 0U                                         /*!< CoreDebug DHC
1661:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/) /*!< CoreDebug DHC
1662:Drivers/CMSIS/Include/core_cm7.h **** 
1663:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1664:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos 16U                                 /*!< CoreDebug DCRSR: REGWnR
1665:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk (1UL << CoreDebug_DCRSR_REGWnR_Pos) /*!< CoreDebug DCRSR: REGWnR
1666:Drivers/CMSIS/Include/core_cm7.h **** 
1667:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos 0U                                         /*!< CoreDebug DCRSR:
1668:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/) /*!< CoreDebug DCRSR:
1669:Drivers/CMSIS/Include/core_cm7.h **** 
1670:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1671:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos 24U                                 /*!< CoreDebug DEMCR: TRCENA
1672:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk (1UL << CoreDebug_DEMCR_TRCENA_Pos) /*!< CoreDebug DEMCR: TRCENA
1673:Drivers/CMSIS/Include/core_cm7.h **** 
1674:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos 19U                                  /*!< CoreDebug DEMCR: MON_
1675:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk (1UL << CoreDebug_DEMCR_MON_REQ_Pos) /*!< CoreDebug DEMCR: MON_
1676:Drivers/CMSIS/Include/core_cm7.h **** 
1677:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos 18U                                   /*!< CoreDebug DEMCR: MO
1678:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk (1UL << CoreDebug_DEMCR_MON_STEP_Pos) /*!< CoreDebug DEMCR: MO
1679:Drivers/CMSIS/Include/core_cm7.h **** 
1680:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos 17U                                   /*!< CoreDebug DEMCR: MO
1681:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk (1UL << CoreDebug_DEMCR_MON_PEND_Pos) /*!< CoreDebug DEMCR: MO
1682:Drivers/CMSIS/Include/core_cm7.h **** 
1683:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos 16U                                 /*!< CoreDebug DEMCR: MON_EN
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 31


1684:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk (1UL << CoreDebug_DEMCR_MON_EN_Pos) /*!< CoreDebug DEMCR: MON_EN
1685:Drivers/CMSIS/Include/core_cm7.h **** 
1686:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos 10U                                     /*!< CoreDebug DEMCR
1687:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos) /*!< CoreDebug DEMCR
1688:Drivers/CMSIS/Include/core_cm7.h **** 
1689:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos 9U                                     /*!< CoreDebug DEMCR: 
1690:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk (1UL << CoreDebug_DEMCR_VC_INTERR_Pos) /*!< CoreDebug DEMCR: 
1691:Drivers/CMSIS/Include/core_cm7.h **** 
1692:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos 8U                                     /*!< CoreDebug DEMCR: 
1693:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos) /*!< CoreDebug DEMCR: 
1694:Drivers/CMSIS/Include/core_cm7.h **** 
1695:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos 7U                                      /*!< CoreDebug DEMCR
1696:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk (1UL << CoreDebug_DEMCR_VC_STATERR_Pos) /*!< CoreDebug DEMCR
1697:Drivers/CMSIS/Include/core_cm7.h **** 
1698:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos 6U                                     /*!< CoreDebug DEMCR: 
1699:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos) /*!< CoreDebug DEMCR: 
1700:Drivers/CMSIS/Include/core_cm7.h **** 
1701:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos 5U                                      /*!< CoreDebug DEMCR
1702:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos) /*!< CoreDebug DEMCR
1703:Drivers/CMSIS/Include/core_cm7.h **** 
1704:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos 4U                                    /*!< CoreDebug DEMCR: VC
1705:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk (1UL << CoreDebug_DEMCR_VC_MMERR_Pos) /*!< CoreDebug DEMCR: VC
1706:Drivers/CMSIS/Include/core_cm7.h **** 
1707:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos 0U                                            /*!< CoreDeb
1708:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/) /*!< CoreDeb
1709:Drivers/CMSIS/Include/core_cm7.h **** 
1710:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1711:Drivers/CMSIS/Include/core_cm7.h **** 
1712:Drivers/CMSIS/Include/core_cm7.h **** /**
1713:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1714:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1715:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1716:Drivers/CMSIS/Include/core_cm7.h ****   @{
1717:Drivers/CMSIS/Include/core_cm7.h ****  */
1718:Drivers/CMSIS/Include/core_cm7.h **** 
1719:Drivers/CMSIS/Include/core_cm7.h **** /**
1720:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1721:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1722:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1723:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1724:Drivers/CMSIS/Include/core_cm7.h **** */
1725:Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value) (((uint32_t)(value) << field##_Pos) & field##_Msk)
1726:Drivers/CMSIS/Include/core_cm7.h **** 
1727:Drivers/CMSIS/Include/core_cm7.h **** /**
1728:Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1729:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1730:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1731:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1732:Drivers/CMSIS/Include/core_cm7.h **** */
1733:Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value) (((uint32_t)(value) & field##_Msk) >> field##_Pos)
1734:Drivers/CMSIS/Include/core_cm7.h **** 
1735:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1736:Drivers/CMSIS/Include/core_cm7.h **** 
1737:Drivers/CMSIS/Include/core_cm7.h **** /**
1738:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1739:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1740:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 32


1741:Drivers/CMSIS/Include/core_cm7.h ****   @{
1742:Drivers/CMSIS/Include/core_cm7.h ****  */
1743:Drivers/CMSIS/Include/core_cm7.h **** 
1744:Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1745:Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE (0xE000E000UL)            /*!< System Control Space Base Address */
1746:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE (0xE0000000UL)            /*!< ITM Base Address */
1747:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE (0xE0001000UL)            /*!< DWT Base Address */
1748:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE (0xE0040000UL)            /*!< TPI Base Address */
1749:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE (0xE000EDF0UL)      /*!< Core Debug Base Address */
1750:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE (SCS_BASE + 0x0010UL) /*!< SysTick Base Address */
1751:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE (SCS_BASE + 0x0100UL)    /*!< NVIC Base Address */
1752:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE (SCS_BASE + 0x0D00UL)     /*!< System Control Block Base Address */
1753:Drivers/CMSIS/Include/core_cm7.h **** 
1754:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB ((SCnSCB_Type *)SCS_BASE)             /*!< System control Register not in SCB */
1755:Drivers/CMSIS/Include/core_cm7.h **** #define SCB ((SCB_Type *)SCB_BASE)                   /*!< SCB configuration struct */
1756:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick ((SysTick_Type *)SysTick_BASE)       /*!< SysTick configuration struct */
1757:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC ((NVIC_Type *)NVIC_BASE)                /*!< NVIC configuration struct */
1758:Drivers/CMSIS/Include/core_cm7.h **** #define ITM ((ITM_Type *)ITM_BASE)                   /*!< ITM configuration struct */
1759:Drivers/CMSIS/Include/core_cm7.h **** #define DWT ((DWT_Type *)DWT_BASE)                   /*!< DWT configuration struct */
1760:Drivers/CMSIS/Include/core_cm7.h **** #define TPI ((TPI_Type *)TPI_BASE)                   /*!< TPI configuration struct */
1761:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug ((CoreDebug_Type *)CoreDebug_BASE) /*!< Core Debug configuration struct */
1762:Drivers/CMSIS/Include/core_cm7.h **** 
1763:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1764:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_BASE (SCS_BASE + 0x0D90UL) /*!< Memory Protection Unit */
1765:Drivers/CMSIS/Include/core_cm7.h **** #define MPU ((MPU_Type *)MPU_BASE)     /*!< Memory Protection Unit */
1766:Drivers/CMSIS/Include/core_cm7.h **** #endif
1767:Drivers/CMSIS/Include/core_cm7.h **** 
1768:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE (SCS_BASE + 0x0F30UL) /*!< Floating Point Unit */
1769:Drivers/CMSIS/Include/core_cm7.h **** #define FPU ((FPU_Type *)FPU_BASE)     /*!< Floating Point Unit */
1770:Drivers/CMSIS/Include/core_cm7.h **** 
1771:Drivers/CMSIS/Include/core_cm7.h ****   /*@} */
1772:Drivers/CMSIS/Include/core_cm7.h **** 
1773:Drivers/CMSIS/Include/core_cm7.h ****   /*******************************************************************************
1774:Drivers/CMSIS/Include/core_cm7.h ****    *                Hardware Abstraction Layer
1775:Drivers/CMSIS/Include/core_cm7.h ****     Core Function Interface contains:
1776:Drivers/CMSIS/Include/core_cm7.h ****     - Core NVIC Functions
1777:Drivers/CMSIS/Include/core_cm7.h ****     - Core SysTick Functions
1778:Drivers/CMSIS/Include/core_cm7.h ****     - Core Debug Functions
1779:Drivers/CMSIS/Include/core_cm7.h ****     - Core Register Access Functions
1780:Drivers/CMSIS/Include/core_cm7.h ****    ******************************************************************************/
1781:Drivers/CMSIS/Include/core_cm7.h ****   /**
1782:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1783:Drivers/CMSIS/Include/core_cm7.h ****   */
1784:Drivers/CMSIS/Include/core_cm7.h **** 
1785:Drivers/CMSIS/Include/core_cm7.h ****   /* ##########################   NVIC functions  #################################### */
1786:Drivers/CMSIS/Include/core_cm7.h ****   /**
1787:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_Core_FunctionInterface
1788:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1789:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Functions that manage interrupts and exceptions via the NVIC.
1790:Drivers/CMSIS/Include/core_cm7.h ****     @{
1791:Drivers/CMSIS/Include/core_cm7.h ****    */
1792:Drivers/CMSIS/Include/core_cm7.h **** 
1793:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1794:Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1795:Drivers/CMSIS/Include/core_cm7.h **** #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1796:Drivers/CMSIS/Include/core_cm7.h **** #endif
1797:Drivers/CMSIS/Include/core_cm7.h **** #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 33


1798:Drivers/CMSIS/Include/core_cm7.h **** #else
1799:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_SetPriorityGrouping __NVIC_SetPriorityGrouping
1800:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetPriorityGrouping __NVIC_GetPriorityGrouping
1801:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_EnableIRQ __NVIC_EnableIRQ
1802:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetEnableIRQ __NVIC_GetEnableIRQ
1803:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_DisableIRQ __NVIC_DisableIRQ
1804:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetPendingIRQ __NVIC_GetPendingIRQ
1805:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_SetPendingIRQ __NVIC_SetPendingIRQ
1806:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_ClearPendingIRQ __NVIC_ClearPendingIRQ
1807:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetActive __NVIC_GetActive
1808:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_SetPriority __NVIC_SetPriority
1809:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetPriority __NVIC_GetPriority
1810:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_SystemReset __NVIC_SystemReset
1811:Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1812:Drivers/CMSIS/Include/core_cm7.h **** 
1813:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1814:Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1815:Drivers/CMSIS/Include/core_cm7.h **** #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1816:Drivers/CMSIS/Include/core_cm7.h **** #endif
1817:Drivers/CMSIS/Include/core_cm7.h **** #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1818:Drivers/CMSIS/Include/core_cm7.h **** #else
1819:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_SetVector __NVIC_SetVector
1820:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetVector __NVIC_GetVector
1821:Drivers/CMSIS/Include/core_cm7.h **** #endif /* (CMSIS_VECTAB_VIRTUAL) */
1822:Drivers/CMSIS/Include/core_cm7.h **** 
1823:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET 16
1824:Drivers/CMSIS/Include/core_cm7.h **** 
1825:Drivers/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1826:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER (0xFFFFFFF1UL)        /* return to Handler mode, uses MSP after return  
1827:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return   
1828:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return   
1829:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU (0xFFFFFFE1UL)    /* return to Handler mode, uses MSP after return, 
1830:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU (0xFFFFFFE9UL) /* return to Thread mode, uses MSP after return, r
1831:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU (0xFFFFFFEDUL) /* return to Thread mode, uses PSP after return, r
1832:Drivers/CMSIS/Include/core_cm7.h **** 
1833:Drivers/CMSIS/Include/core_cm7.h ****   /**
1834:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Set Priority Grouping
1835:Drivers/CMSIS/Include/core_cm7.h ****     \details Sets the priority grouping field using the required unlock sequence.
1836:Drivers/CMSIS/Include/core_cm7.h ****              The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1837:Drivers/CMSIS/Include/core_cm7.h ****              Only values from 0..7 are used.
1838:Drivers/CMSIS/Include/core_cm7.h ****              In case of a conflict between priority grouping and available
1839:Drivers/CMSIS/Include/core_cm7.h ****              priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1840:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      PriorityGroup  Priority grouping field.
1841:Drivers/CMSIS/Include/core_cm7.h ****    */
1842:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1843:Drivers/CMSIS/Include/core_cm7.h ****   {
1844:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t reg_value;
1845:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL); /* only values 0..7 are used   
1846:Drivers/CMSIS/Include/core_cm7.h **** 
1847:Drivers/CMSIS/Include/core_cm7.h ****     reg_value = SCB->AIRCR;                                                     /* read old registe
1848:Drivers/CMSIS/Include/core_cm7.h ****     reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to ch
1849:Drivers/CMSIS/Include/core_cm7.h ****     reg_value = (reg_value |
1850:Drivers/CMSIS/Include/core_cm7.h ****                  ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1851:Drivers/CMSIS/Include/core_cm7.h ****                  (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)); /* Insert write key and priority gr
1852:Drivers/CMSIS/Include/core_cm7.h ****     SCB->AIRCR = reg_value;
1853:Drivers/CMSIS/Include/core_cm7.h ****   }
1854:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 34


1855:Drivers/CMSIS/Include/core_cm7.h ****   /**
1856:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Priority Grouping
1857:Drivers/CMSIS/Include/core_cm7.h ****     \details Reads the priority grouping field from the NVIC Interrupt Controller.
1858:Drivers/CMSIS/Include/core_cm7.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1859:Drivers/CMSIS/Include/core_cm7.h ****    */
1860:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1861:Drivers/CMSIS/Include/core_cm7.h ****   {
1862:Drivers/CMSIS/Include/core_cm7.h ****     return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1863:Drivers/CMSIS/Include/core_cm7.h ****   }
1864:Drivers/CMSIS/Include/core_cm7.h **** 
1865:Drivers/CMSIS/Include/core_cm7.h ****   /**
1866:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Enable Interrupt
1867:Drivers/CMSIS/Include/core_cm7.h ****     \details Enables a device specific interrupt in the NVIC interrupt controller.
1868:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1869:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1870:Drivers/CMSIS/Include/core_cm7.h ****    */
1871:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1872:Drivers/CMSIS/Include/core_cm7.h ****   {
1873:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1874:Drivers/CMSIS/Include/core_cm7.h ****     {
1875:Drivers/CMSIS/Include/core_cm7.h ****       NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1876:Drivers/CMSIS/Include/core_cm7.h ****     }
1877:Drivers/CMSIS/Include/core_cm7.h ****   }
1878:Drivers/CMSIS/Include/core_cm7.h **** 
1879:Drivers/CMSIS/Include/core_cm7.h ****   /**
1880:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Interrupt Enable status
1881:Drivers/CMSIS/Include/core_cm7.h ****     \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1882:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1883:Drivers/CMSIS/Include/core_cm7.h ****     \return             0  Interrupt is not enabled.
1884:Drivers/CMSIS/Include/core_cm7.h ****     \return             1  Interrupt is enabled.
1885:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1886:Drivers/CMSIS/Include/core_cm7.h ****    */
1887:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1888:Drivers/CMSIS/Include/core_cm7.h ****   {
1889:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1890:Drivers/CMSIS/Include/core_cm7.h ****     {
1891:Drivers/CMSIS/Include/core_cm7.h ****       return ((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1F
1892:Drivers/CMSIS/Include/core_cm7.h ****     }
1893:Drivers/CMSIS/Include/core_cm7.h ****     else
1894:Drivers/CMSIS/Include/core_cm7.h ****     {
1895:Drivers/CMSIS/Include/core_cm7.h ****       return (0U);
1896:Drivers/CMSIS/Include/core_cm7.h ****     }
1897:Drivers/CMSIS/Include/core_cm7.h ****   }
1898:Drivers/CMSIS/Include/core_cm7.h **** 
1899:Drivers/CMSIS/Include/core_cm7.h ****   /**
1900:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Disable Interrupt
1901:Drivers/CMSIS/Include/core_cm7.h ****     \details Disables a device specific interrupt in the NVIC interrupt controller.
1902:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1903:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1904:Drivers/CMSIS/Include/core_cm7.h ****    */
1905:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1906:Drivers/CMSIS/Include/core_cm7.h ****   {
  29              		.loc 2 1906 3 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 35


1907:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
  34              		.loc 2 1907 5 view .LVU1
  35              		.loc 2 1907 8 is_stmt 0 view .LVU2
  36 0000 0028     		cmp	r0, #0
  37              		.loc 2 1907 8 view .LVU3
  38 0002 0CDB     		blt	.L1
1908:Drivers/CMSIS/Include/core_cm7.h ****     {
1909:Drivers/CMSIS/Include/core_cm7.h ****       NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  39              		.loc 2 1909 7 is_stmt 1 view .LVU4
  40              		.loc 2 1909 83 is_stmt 0 view .LVU5
  41 0004 00F01F02 		and	r2, r0, #31
  42              		.loc 2 1909 36 view .LVU6
  43 0008 4009     		lsrs	r0, r0, #5
  44              	.LVL1:
  45              		.loc 2 1909 47 view .LVU7
  46 000a 0123     		movs	r3, #1
  47 000c 9340     		lsls	r3, r3, r2
  48              		.loc 2 1909 45 view .LVU8
  49 000e 2030     		adds	r0, r0, #32
  50 0010 034A     		ldr	r2, .L3
  51 0012 42F82030 		str	r3, [r2, r0, lsl #2]
1910:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
  52              		.loc 2 1910 7 is_stmt 1 view .LVU9
  53              	.LBB38:
  54              	.LBI38:
  55              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 36


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 37


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 38


 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 39


 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 40


 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 41


 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 42


 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 43


 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 44


 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 45


 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 46


 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 47


 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 48


 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 49


 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 50


 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  56              		.loc 3 877 27 view .LVU10
  57              	.LBB39:
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  58              		.loc 3 879 3 view .LVU11
  59              		.syntax unified
  60              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  61 0016 BFF34F8F 		dsb 0xF
  62              	@ 0 "" 2
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 51


  63              		.thumb
  64              		.syntax unified
  65              	.LBE39:
  66              	.LBE38:
1911:Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
  67              		.loc 2 1911 7 view .LVU12
  68              	.LBB40:
  69              	.LBI40:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  70              		.loc 3 866 27 view .LVU13
  71              	.LBB41:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  72              		.loc 3 868 3 view .LVU14
  73              		.syntax unified
  74              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  75 001a BFF36F8F 		isb 0xF
  76              	@ 0 "" 2
  77              		.thumb
  78              		.syntax unified
  79              	.L1:
  80              	.LBE41:
  81              	.LBE40:
1912:Drivers/CMSIS/Include/core_cm7.h ****     }
1913:Drivers/CMSIS/Include/core_cm7.h ****   }
  82              		.loc 2 1913 3 is_stmt 0 view .LVU15
  83 001e 7047     		bx	lr
  84              	.L4:
  85              		.align	2
  86              	.L3:
  87 0020 00E100E0 		.word	-536813312
  88              		.cfi_endproc
  89              	.LFE106:
  91              		.section	.text.__NVIC_SetPriority,"ax",%progbits
  92              		.align	1
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	__NVIC_SetPriority:
  98              	.LVL2:
  99              	.LFB111:
1914:Drivers/CMSIS/Include/core_cm7.h **** 
1915:Drivers/CMSIS/Include/core_cm7.h ****   /**
1916:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Pending Interrupt
1917:Drivers/CMSIS/Include/core_cm7.h ****     \details Reads the NVIC pending register and returns the pending bit for the specified device s
1918:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1919:Drivers/CMSIS/Include/core_cm7.h ****     \return             0  Interrupt status is not pending.
1920:Drivers/CMSIS/Include/core_cm7.h ****     \return             1  Interrupt status is pending.
1921:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1922:Drivers/CMSIS/Include/core_cm7.h ****    */
1923:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1924:Drivers/CMSIS/Include/core_cm7.h ****   {
1925:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1926:Drivers/CMSIS/Include/core_cm7.h ****     {
1927:Drivers/CMSIS/Include/core_cm7.h ****       return ((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1F
1928:Drivers/CMSIS/Include/core_cm7.h ****     }
1929:Drivers/CMSIS/Include/core_cm7.h ****     else
1930:Drivers/CMSIS/Include/core_cm7.h ****     {
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 52


1931:Drivers/CMSIS/Include/core_cm7.h ****       return (0U);
1932:Drivers/CMSIS/Include/core_cm7.h ****     }
1933:Drivers/CMSIS/Include/core_cm7.h ****   }
1934:Drivers/CMSIS/Include/core_cm7.h **** 
1935:Drivers/CMSIS/Include/core_cm7.h ****   /**
1936:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Set Pending Interrupt
1937:Drivers/CMSIS/Include/core_cm7.h ****     \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1938:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1939:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1940:Drivers/CMSIS/Include/core_cm7.h ****    */
1941:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1942:Drivers/CMSIS/Include/core_cm7.h ****   {
1943:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1944:Drivers/CMSIS/Include/core_cm7.h ****     {
1945:Drivers/CMSIS/Include/core_cm7.h ****       NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1946:Drivers/CMSIS/Include/core_cm7.h ****     }
1947:Drivers/CMSIS/Include/core_cm7.h ****   }
1948:Drivers/CMSIS/Include/core_cm7.h **** 
1949:Drivers/CMSIS/Include/core_cm7.h ****   /**
1950:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Clear Pending Interrupt
1951:Drivers/CMSIS/Include/core_cm7.h ****     \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1952:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1953:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1954:Drivers/CMSIS/Include/core_cm7.h ****    */
1955:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1956:Drivers/CMSIS/Include/core_cm7.h ****   {
1957:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1958:Drivers/CMSIS/Include/core_cm7.h ****     {
1959:Drivers/CMSIS/Include/core_cm7.h ****       NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1960:Drivers/CMSIS/Include/core_cm7.h ****     }
1961:Drivers/CMSIS/Include/core_cm7.h ****   }
1962:Drivers/CMSIS/Include/core_cm7.h **** 
1963:Drivers/CMSIS/Include/core_cm7.h ****   /**
1964:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Active Interrupt
1965:Drivers/CMSIS/Include/core_cm7.h ****     \details Reads the active register in the NVIC and returns the active bit for the device specif
1966:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1967:Drivers/CMSIS/Include/core_cm7.h ****     \return             0  Interrupt status is not active.
1968:Drivers/CMSIS/Include/core_cm7.h ****     \return             1  Interrupt status is active.
1969:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1970:Drivers/CMSIS/Include/core_cm7.h ****    */
1971:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1972:Drivers/CMSIS/Include/core_cm7.h ****   {
1973:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1974:Drivers/CMSIS/Include/core_cm7.h ****     {
1975:Drivers/CMSIS/Include/core_cm7.h ****       return ((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1F
1976:Drivers/CMSIS/Include/core_cm7.h ****     }
1977:Drivers/CMSIS/Include/core_cm7.h ****     else
1978:Drivers/CMSIS/Include/core_cm7.h ****     {
1979:Drivers/CMSIS/Include/core_cm7.h ****       return (0U);
1980:Drivers/CMSIS/Include/core_cm7.h ****     }
1981:Drivers/CMSIS/Include/core_cm7.h ****   }
1982:Drivers/CMSIS/Include/core_cm7.h **** 
1983:Drivers/CMSIS/Include/core_cm7.h ****   /**
1984:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Set Interrupt Priority
1985:Drivers/CMSIS/Include/core_cm7.h ****     \details Sets the priority of a device specific interrupt or a processor exception.
1986:Drivers/CMSIS/Include/core_cm7.h ****              The interrupt number can be positive to specify a device specific interrupt,
1987:Drivers/CMSIS/Include/core_cm7.h ****              or negative to specify a processor exception.
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 53


1988:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Interrupt number.
1989:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]  priority  Priority to set.
1990:Drivers/CMSIS/Include/core_cm7.h ****     \note    The priority cannot be set for every processor exception.
1991:Drivers/CMSIS/Include/core_cm7.h ****    */
1992:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1993:Drivers/CMSIS/Include/core_cm7.h ****   {
 100              		.loc 2 1993 3 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
1994:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
 105              		.loc 2 1994 5 view .LVU17
 106              		.loc 2 1994 8 is_stmt 0 view .LVU18
 107 0000 0028     		cmp	r0, #0
 108              		.loc 2 1994 8 view .LVU19
 109 0002 04DB     		blt	.L6
1995:Drivers/CMSIS/Include/core_cm7.h ****     {
1996:Drivers/CMSIS/Include/core_cm7.h ****       NVIC->IP[((uint32_t)IRQn)] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFF
 110              		.loc 2 1996 7 is_stmt 1 view .LVU20
 111              		.loc 2 1996 36 is_stmt 0 view .LVU21
 112 0004 0901     		lsls	r1, r1, #4
 113              	.LVL3:
 114              		.loc 2 1996 36 view .LVU22
 115 0006 C9B2     		uxtb	r1, r1
 116              		.loc 2 1996 34 view .LVU23
 117 0008 044B     		ldr	r3, .L8
 118 000a 1954     		strb	r1, [r3, r0]
 119 000c 7047     		bx	lr
 120              	.LVL4:
 121              	.L6:
1997:Drivers/CMSIS/Include/core_cm7.h ****     }
1998:Drivers/CMSIS/Include/core_cm7.h ****     else
1999:Drivers/CMSIS/Include/core_cm7.h ****     {
2000:Drivers/CMSIS/Include/core_cm7.h ****       SCB->SHPR[(((uint32_t)IRQn) & 0xFUL) - 4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS))
 122              		.loc 2 2000 7 is_stmt 1 view .LVU24
 123              		.loc 2 2000 35 is_stmt 0 view .LVU25
 124 000e 00F00F00 		and	r0, r0, #15
 125              	.LVL5:
 126              		.loc 2 2000 53 view .LVU26
 127 0012 0901     		lsls	r1, r1, #4
 128              	.LVL6:
 129              		.loc 2 2000 53 view .LVU27
 130 0014 C9B2     		uxtb	r1, r1
 131              		.loc 2 2000 51 view .LVU28
 132 0016 024B     		ldr	r3, .L8+4
 133 0018 1954     		strb	r1, [r3, r0]
2001:Drivers/CMSIS/Include/core_cm7.h ****     }
2002:Drivers/CMSIS/Include/core_cm7.h ****   }
 134              		.loc 2 2002 3 view .LVU29
 135 001a 7047     		bx	lr
 136              	.L9:
 137              		.align	2
 138              	.L8:
 139 001c 00E400E0 		.word	-536812544
 140 0020 14ED00E0 		.word	-536810220
 141              		.cfi_endproc
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 54


 142              	.LFE111:
 144              		.section	.text.__NVIC_GetPriority,"ax",%progbits
 145              		.align	1
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	__NVIC_GetPriority:
 151              	.LVL7:
 152              	.LFB112:
2003:Drivers/CMSIS/Include/core_cm7.h **** 
2004:Drivers/CMSIS/Include/core_cm7.h ****   /**
2005:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Interrupt Priority
2006:Drivers/CMSIS/Include/core_cm7.h ****     \details Reads the priority of a device specific interrupt or a processor exception.
2007:Drivers/CMSIS/Include/core_cm7.h ****              The interrupt number can be positive to specify a device specific interrupt,
2008:Drivers/CMSIS/Include/core_cm7.h ****              or negative to specify a processor exception.
2009:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]   IRQn  Interrupt number.
2010:Drivers/CMSIS/Include/core_cm7.h ****     \return             Interrupt Priority.
2011:Drivers/CMSIS/Include/core_cm7.h ****                         Value is aligned automatically to the implemented priority bits of the micr
2012:Drivers/CMSIS/Include/core_cm7.h ****    */
2013:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2014:Drivers/CMSIS/Include/core_cm7.h ****   {
 153              		.loc 2 2014 3 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
2015:Drivers/CMSIS/Include/core_cm7.h **** 
2016:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
 158              		.loc 2 2016 5 view .LVU31
 159              		.loc 2 2016 8 is_stmt 0 view .LVU32
 160 0000 0028     		cmp	r0, #0
 161              		.loc 2 2016 8 view .LVU33
 162 0002 03DB     		blt	.L11
2017:Drivers/CMSIS/Include/core_cm7.h ****     {
2018:Drivers/CMSIS/Include/core_cm7.h ****       return (((uint32_t)NVIC->IP[((uint32_t)IRQn)] >> (8U - __NVIC_PRIO_BITS)));
 163              		.loc 2 2018 7 is_stmt 1 view .LVU34
 164              		.loc 2 2018 34 is_stmt 0 view .LVU35
 165 0004 044B     		ldr	r3, .L13
 166 0006 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 167              	.LVL8:
 168              		.loc 2 2018 53 view .LVU36
 169 0008 0009     		lsrs	r0, r0, #4
 170 000a 7047     		bx	lr
 171              	.L11:
2019:Drivers/CMSIS/Include/core_cm7.h ****     }
2020:Drivers/CMSIS/Include/core_cm7.h ****     else
2021:Drivers/CMSIS/Include/core_cm7.h ****     {
2022:Drivers/CMSIS/Include/core_cm7.h ****       return (((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL) - 4UL] >> (8U - __NVIC_PRIO_BITS)));
 172              		.loc 2 2022 7 is_stmt 1 view .LVU37
 173              		.loc 2 2022 54 is_stmt 0 view .LVU38
 174 000c 00F00F00 		and	r0, r0, #15
 175              		.loc 2 2022 35 view .LVU39
 176 0010 024B     		ldr	r3, .L13+4
 177 0012 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 178              		.loc 2 2022 70 view .LVU40
 179 0014 0009     		lsrs	r0, r0, #4
2023:Drivers/CMSIS/Include/core_cm7.h ****     }
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 55


2024:Drivers/CMSIS/Include/core_cm7.h ****   }
 180              		.loc 2 2024 3 view .LVU41
 181 0016 7047     		bx	lr
 182              	.L14:
 183              		.align	2
 184              	.L13:
 185 0018 00E400E0 		.word	-536812544
 186 001c 14ED00E0 		.word	-536810220
 187              		.cfi_endproc
 188              	.LFE112:
 190              		.section	.text.NVIC_EncodePriority,"ax",%progbits
 191              		.align	1
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	NVIC_EncodePriority:
 197              	.LVL9:
 198              	.LFB113:
2025:Drivers/CMSIS/Include/core_cm7.h **** 
2026:Drivers/CMSIS/Include/core_cm7.h ****   /**
2027:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Encode Priority
2028:Drivers/CMSIS/Include/core_cm7.h ****     \details Encodes the priority for an interrupt with the given priority group,
2029:Drivers/CMSIS/Include/core_cm7.h ****              preemptive priority value, and subpriority value.
2030:Drivers/CMSIS/Include/core_cm7.h ****              In case of a conflict between priority grouping and available
2031:Drivers/CMSIS/Include/core_cm7.h ****              priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2032:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]     PriorityGroup  Used priority group.
2033:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2034:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
2035:Drivers/CMSIS/Include/core_cm7.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
2036:Drivers/CMSIS/Include/core_cm7.h ****    */
2037:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t NVIC_EncodePriority(uint32_t PriorityGroup, uint32_t PreemptPriority, ui
2038:Drivers/CMSIS/Include/core_cm7.h ****   {
 199              		.loc 2 2038 3 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		.loc 2 2038 3 is_stmt 0 view .LVU43
 204 0000 00B5     		push	{lr}
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 14, -4
2039:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL); /* only values 0..7 are used   
 207              		.loc 2 2039 5 is_stmt 1 view .LVU44
 208              		.loc 2 2039 14 is_stmt 0 view .LVU45
 209 0002 00F00700 		and	r0, r0, #7
 210              	.LVL10:
2040:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PreemptPriorityBits;
 211              		.loc 2 2040 5 is_stmt 1 view .LVU46
2041:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SubPriorityBits;
 212              		.loc 2 2041 5 view .LVU47
2042:Drivers/CMSIS/Include/core_cm7.h **** 
2043:Drivers/CMSIS/Include/core_cm7.h ****     PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__
 213              		.loc 2 2043 5 view .LVU48
 214              		.loc 2 2043 33 is_stmt 0 view .LVU49
 215 0006 C0F1070C 		rsb	ip, r0, #7
 216              		.loc 2 2043 25 view .LVU50
 217 000a BCF1040F 		cmp	ip, #4
 218 000e 28BF     		it	cs
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 56


 219 0010 4FF0040C 		movcs	ip, #4
 220              	.LVL11:
2044:Drivers/CMSIS/Include/core_cm7.h ****     SubPriorityBits = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32
 221              		.loc 2 2044 5 is_stmt 1 view .LVU51
 222              		.loc 2 2044 42 is_stmt 0 view .LVU52
 223 0014 031D     		adds	r3, r0, #4
 224              		.loc 2 2044 107 view .LVU53
 225 0016 062B     		cmp	r3, #6
 226 0018 0FD9     		bls	.L17
 227              		.loc 2 2044 107 discriminator 1 view .LVU54
 228 001a C31E     		subs	r3, r0, #3
 229              	.L16:
 230              	.LVL12:
2045:Drivers/CMSIS/Include/core_cm7.h **** 
2046:Drivers/CMSIS/Include/core_cm7.h ****     return (
 231              		.loc 2 2046 5 is_stmt 1 view .LVU55
2047:Drivers/CMSIS/Include/core_cm7.h ****         ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 232              		.loc 2 2047 27 is_stmt 0 view .LVU56
 233 001c 4FF0FF3E 		mov	lr, #-1
 234 0020 0EFA0CF0 		lsl	r0, lr, ip
 235              	.LVL13:
 236              		.loc 2 2047 27 view .LVU57
 237 0024 21EA0001 		bic	r1, r1, r0
 238              	.LVL14:
 239              		.loc 2 2047 79 view .LVU58
 240 0028 9940     		lsls	r1, r1, r3
2048:Drivers/CMSIS/Include/core_cm7.h ****         ((SubPriority & (uint32_t)((1UL << (SubPriorityBits)) - 1UL))));
 241              		.loc 2 2048 23 view .LVU59
 242 002a 0EFA03FE 		lsl	lr, lr, r3
 243 002e 22EA0E02 		bic	r2, r2, lr
 244              	.LVL15:
2049:Drivers/CMSIS/Include/core_cm7.h ****   }
 245              		.loc 2 2049 3 view .LVU60
 246 0032 41EA0200 		orr	r0, r1, r2
 247 0036 5DF804FB 		ldr	pc, [sp], #4
 248              	.LVL16:
 249              	.L17:
2044:Drivers/CMSIS/Include/core_cm7.h **** 
 250              		.loc 2 2044 107 discriminator 2 view .LVU61
 251 003a 0023     		movs	r3, #0
 252 003c EEE7     		b	.L16
 253              		.cfi_endproc
 254              	.LFE113:
 256              		.section	.text.NVIC_DecodePriority,"ax",%progbits
 257              		.align	1
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	NVIC_DecodePriority:
 263              	.LVL17:
 264              	.LFB114:
2050:Drivers/CMSIS/Include/core_cm7.h **** 
2051:Drivers/CMSIS/Include/core_cm7.h ****   /**
2052:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Decode Priority
2053:Drivers/CMSIS/Include/core_cm7.h ****     \details Decodes an interrupt priority value with a given priority group to
2054:Drivers/CMSIS/Include/core_cm7.h ****              preemptive priority value and subpriority value.
2055:Drivers/CMSIS/Include/core_cm7.h ****              In case of a conflict between priority grouping and available
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 57


2056:Drivers/CMSIS/Include/core_cm7.h ****              priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2057:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
2058:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]     PriorityGroup  Used priority group.
2059:Drivers/CMSIS/Include/core_cm7.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2060:Drivers/CMSIS/Include/core_cm7.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
2061:Drivers/CMSIS/Include/core_cm7.h ****    */
2062:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void NVIC_DecodePriority(uint32_t Priority, uint32_t PriorityGroup, uint32_t *con
2063:Drivers/CMSIS/Include/core_cm7.h ****   {
 265              		.loc 2 2063 3 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 2 2063 3 is_stmt 0 view .LVU63
 270 0000 10B5     		push	{r4, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 4, -8
 273              		.cfi_offset 14, -4
2064:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL); /* only values 0..7 are used   
 274              		.loc 2 2064 5 is_stmt 1 view .LVU64
 275              		.loc 2 2064 14 is_stmt 0 view .LVU65
 276 0002 01F00701 		and	r1, r1, #7
 277              	.LVL18:
2065:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PreemptPriorityBits;
 278              		.loc 2 2065 5 is_stmt 1 view .LVU66
2066:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SubPriorityBits;
 279              		.loc 2 2066 5 view .LVU67
2067:Drivers/CMSIS/Include/core_cm7.h **** 
2068:Drivers/CMSIS/Include/core_cm7.h ****     PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__
 280              		.loc 2 2068 5 view .LVU68
 281              		.loc 2 2068 33 is_stmt 0 view .LVU69
 282 0006 C1F1070C 		rsb	ip, r1, #7
 283              		.loc 2 2068 25 view .LVU70
 284 000a BCF1040F 		cmp	ip, #4
 285 000e 28BF     		it	cs
 286 0010 4FF0040C 		movcs	ip, #4
 287              	.LVL19:
2069:Drivers/CMSIS/Include/core_cm7.h ****     SubPriorityBits = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32
 288              		.loc 2 2069 5 is_stmt 1 view .LVU71
 289              		.loc 2 2069 42 is_stmt 0 view .LVU72
 290 0014 0C1D     		adds	r4, r1, #4
 291              		.loc 2 2069 107 view .LVU73
 292 0016 062C     		cmp	r4, #6
 293 0018 0FD9     		bls	.L21
 294              		.loc 2 2069 107 discriminator 1 view .LVU74
 295 001a 0339     		subs	r1, r1, #3
 296              	.LVL20:
 297              	.L20:
2070:Drivers/CMSIS/Include/core_cm7.h **** 
2071:Drivers/CMSIS/Include/core_cm7.h ****     *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) -
 298              		.loc 2 2071 5 is_stmt 1 view .LVU75
 299              		.loc 2 2071 35 is_stmt 0 view .LVU76
 300 001c 20FA01F4 		lsr	r4, r0, r1
 301              	.LVL21:
 302              		.loc 2 2071 55 view .LVU77
 303 0020 4FF0FF3E 		mov	lr, #-1
 304 0024 0EFA0CFC 		lsl	ip, lr, ip
 305              	.LVL22:
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 58


 306              		.loc 2 2071 55 view .LVU78
 307 0028 24EA0C04 		bic	r4, r4, ip
 308              		.loc 2 2071 23 view .LVU79
 309 002c 1460     		str	r4, [r2]
2072:Drivers/CMSIS/Include/core_cm7.h ****     *pSubPriority = (Priority) & (uint32_t)((1UL << (SubPriorityBits)) - 1UL);
 310              		.loc 2 2072 5 is_stmt 1 view .LVU80
 311              		.loc 2 2072 32 is_stmt 0 view .LVU81
 312 002e 0EFA01FE 		lsl	lr, lr, r1
 313 0032 20EA0E00 		bic	r0, r0, lr
 314              	.LVL23:
 315              		.loc 2 2072 19 view .LVU82
 316 0036 1860     		str	r0, [r3]
2073:Drivers/CMSIS/Include/core_cm7.h ****   }
 317              		.loc 2 2073 3 view .LVU83
 318 0038 10BD     		pop	{r4, pc}
 319              	.LVL24:
 320              	.L21:
2069:Drivers/CMSIS/Include/core_cm7.h **** 
 321              		.loc 2 2069 107 discriminator 2 view .LVU84
 322 003a 0021     		movs	r1, #0
 323              	.LVL25:
2069:Drivers/CMSIS/Include/core_cm7.h **** 
 324              		.loc 2 2069 107 discriminator 2 view .LVU85
 325 003c EEE7     		b	.L20
 326              		.cfi_endproc
 327              	.LFE114:
 329              		.section	.text.__NVIC_SystemReset,"ax",%progbits
 330              		.align	1
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 335              	__NVIC_SystemReset:
 336              	.LFB117:
2074:Drivers/CMSIS/Include/core_cm7.h **** 
2075:Drivers/CMSIS/Include/core_cm7.h ****   /**
2076:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Set Interrupt Vector
2077:Drivers/CMSIS/Include/core_cm7.h ****     \details Sets an interrupt vector in SRAM based interrupt vector table.
2078:Drivers/CMSIS/Include/core_cm7.h ****              The interrupt number can be positive to specify a device specific interrupt,
2079:Drivers/CMSIS/Include/core_cm7.h ****              or negative to specify a processor exception.
2080:Drivers/CMSIS/Include/core_cm7.h ****              VTOR must been relocated to SRAM before.
2081:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]   IRQn      Interrupt number
2082:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]   vector    Address of interrupt handler function
2083:Drivers/CMSIS/Include/core_cm7.h ****    */
2084:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2085:Drivers/CMSIS/Include/core_cm7.h ****   {
2086:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t *vectors = (uint32_t *)SCB->VTOR;
2087:Drivers/CMSIS/Include/core_cm7.h ****     vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2088:Drivers/CMSIS/Include/core_cm7.h ****   }
2089:Drivers/CMSIS/Include/core_cm7.h **** 
2090:Drivers/CMSIS/Include/core_cm7.h ****   /**
2091:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Interrupt Vector
2092:Drivers/CMSIS/Include/core_cm7.h ****     \details Reads an interrupt vector from interrupt vector table.
2093:Drivers/CMSIS/Include/core_cm7.h ****              The interrupt number can be positive to specify a device specific interrupt,
2094:Drivers/CMSIS/Include/core_cm7.h ****              or negative to specify a processor exception.
2095:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]   IRQn      Interrupt number.
2096:Drivers/CMSIS/Include/core_cm7.h ****     \return                 Address of interrupt handler function
2097:Drivers/CMSIS/Include/core_cm7.h ****    */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 59


2098:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2099:Drivers/CMSIS/Include/core_cm7.h ****   {
2100:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t *vectors = (uint32_t *)SCB->VTOR;
2101:Drivers/CMSIS/Include/core_cm7.h ****     return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2102:Drivers/CMSIS/Include/core_cm7.h ****   }
2103:Drivers/CMSIS/Include/core_cm7.h **** 
2104:Drivers/CMSIS/Include/core_cm7.h ****   /**
2105:Drivers/CMSIS/Include/core_cm7.h ****     \brief   System Reset
2106:Drivers/CMSIS/Include/core_cm7.h ****     \details Initiates a system reset request to reset the MCU.
2107:Drivers/CMSIS/Include/core_cm7.h ****    */
2108:Drivers/CMSIS/Include/core_cm7.h ****   __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2109:Drivers/CMSIS/Include/core_cm7.h ****   {
 337              		.loc 2 2109 3 is_stmt 1 view -0
 338              		.cfi_startproc
 339              		@ Volatile: function does not return.
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
2110:Drivers/CMSIS/Include/core_cm7.h ****     __DSB(); /* Ensure all outstanding memory accesses included
 343              		.loc 2 2110 5 view .LVU87
 344              	.LBB42:
 345              	.LBI42:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346              		.loc 3 877 27 view .LVU88
 347              	.LBB43:
 348              		.loc 3 879 3 view .LVU89
 349              		.syntax unified
 350              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 351 0000 BFF34F8F 		dsb 0xF
 352              	@ 0 "" 2
 353              		.thumb
 354              		.syntax unified
 355              	.LBE43:
 356              	.LBE42:
2111:Drivers/CMSIS/Include/core_cm7.h ****                 buffered write are completed before reset */
2112:Drivers/CMSIS/Include/core_cm7.h ****     SCB->AIRCR = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 357              		.loc 2 2112 5 view .LVU90
2113:Drivers/CMSIS/Include/core_cm7.h ****                             (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 358              		.loc 2 2113 33 is_stmt 0 view .LVU91
 359 0004 0549     		ldr	r1, .L25
 360 0006 CA68     		ldr	r2, [r1, #12]
 361              		.loc 2 2113 41 view .LVU92
 362 0008 02F4E062 		and	r2, r2, #1792
2112:Drivers/CMSIS/Include/core_cm7.h ****                             (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 363              		.loc 2 2112 18 view .LVU93
 364 000c 044B     		ldr	r3, .L25+4
 365 000e 1343     		orrs	r3, r3, r2
2112:Drivers/CMSIS/Include/core_cm7.h ****                             (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 366              		.loc 2 2112 16 view .LVU94
 367 0010 CB60     		str	r3, [r1, #12]
2114:Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk); /* Keep priority group unchanged */
2115:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();                                            /* Ensure completion of memory access */
 368              		.loc 2 2115 5 is_stmt 1 view .LVU95
 369              	.LBB44:
 370              	.LBI44:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 371              		.loc 3 877 27 view .LVU96
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 60


 372              	.LBB45:
 373              		.loc 3 879 3 view .LVU97
 374              		.syntax unified
 375              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 376 0012 BFF34F8F 		dsb 0xF
 377              	@ 0 "" 2
 378              		.thumb
 379              		.syntax unified
 380              	.L24:
 381              	.LBE45:
 382              	.LBE44:
2116:Drivers/CMSIS/Include/core_cm7.h **** 
2117:Drivers/CMSIS/Include/core_cm7.h ****     for (;;) /* wait until reset */
 383              		.loc 2 2117 5 view .LVU98
2118:Drivers/CMSIS/Include/core_cm7.h ****     {
2119:Drivers/CMSIS/Include/core_cm7.h ****       __NOP();
 384              		.loc 2 2119 7 discriminator 1 view .LVU99
 385              		.syntax unified
 386              	@ 2119 "Drivers/CMSIS/Include/core_cm7.h" 1
 387 0016 00BF     		nop
 388              	@ 0 "" 2
2117:Drivers/CMSIS/Include/core_cm7.h ****     {
 389              		.loc 2 2117 5 view .LVU100
 390              		.thumb
 391              		.syntax unified
 392 0018 FDE7     		b	.L24
 393              	.L26:
 394 001a 00BF     		.align	2
 395              	.L25:
 396 001c 00ED00E0 		.word	-536810240
 397 0020 0400FA05 		.word	100270084
 398              		.cfi_endproc
 399              	.LFE117:
 401              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
 402              		.align	1
 403              		.global	HAL_NVIC_SetPriorityGrouping
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 408              	HAL_NVIC_SetPriorityGrouping:
 409              	.LVL26:
 410              	.LFB141:
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @file    stm32f7xx_hal_cortex.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           + Peripheral Control functions 
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   @verbatim  
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 61


  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]  
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     ===========================================================
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]     
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         function according to the following table.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority(). 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority. 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible. 
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest preemption priority
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest sub priority
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]  
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     ========================================================
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****            
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        is a CMSIS function that:
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        inside the stm32f7xx_hal_cortex.h file.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                             
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   @endverbatim
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @attention
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * Copyright (c) 2017 STMicroelectronics.
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * All rights reserved.
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 62


  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * the root directory of this software component.
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #include "stm32f7xx_hal.h"
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @addtogroup STM32F7xx_HAL_Driver
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @verbatim    
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       Systick functionalities 
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @endverbatim
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         using the required unlock sequence.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  PriorityGroup The priority grouping bits length. 
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    4 bits for subpriority
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 63


 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    3 bits for subpriority
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    2 bits for subpriority
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    1 bits for subpriority
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    0 bits for subpriority
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 411              		.loc 1 143 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 416              		.loc 1 145 3 view .LVU102
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 417              		.loc 1 148 3 view .LVU103
 418              	.LBB46:
 419              	.LBI46:
1842:Drivers/CMSIS/Include/core_cm7.h ****   {
 420              		.loc 2 1842 24 view .LVU104
 421              	.LBB47:
1844:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL); /* only values 0..7 are used   
 422              		.loc 2 1844 5 view .LVU105
1845:Drivers/CMSIS/Include/core_cm7.h **** 
 423              		.loc 2 1845 5 view .LVU106
1847:Drivers/CMSIS/Include/core_cm7.h ****     reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to ch
 424              		.loc 2 1847 5 view .LVU107
1847:Drivers/CMSIS/Include/core_cm7.h ****     reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to ch
 425              		.loc 2 1847 15 is_stmt 0 view .LVU108
 426 0000 0649     		ldr	r1, .L28
 427 0002 CB68     		ldr	r3, [r1, #12]
 428              	.LVL27:
1848:Drivers/CMSIS/Include/core_cm7.h ****     reg_value = (reg_value |
 429              		.loc 2 1848 5 is_stmt 1 view .LVU109
1848:Drivers/CMSIS/Include/core_cm7.h ****     reg_value = (reg_value |
 430              		.loc 2 1848 15 is_stmt 0 view .LVU110
 431 0004 23F4E063 		bic	r3, r3, #1792
 432              	.LVL28:
1848:Drivers/CMSIS/Include/core_cm7.h ****     reg_value = (reg_value |
 433              		.loc 2 1848 15 view .LVU111
 434 0008 1B04     		lsls	r3, r3, #16
 435 000a 1B0C     		lsrs	r3, r3, #16
 436              	.LVL29:
1849:Drivers/CMSIS/Include/core_cm7.h ****                  ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 437              		.loc 2 1849 5 is_stmt 1 view .LVU112
1851:Drivers/CMSIS/Include/core_cm7.h ****     SCB->AIRCR = reg_value;
 438              		.loc 2 1851 36 is_stmt 0 view .LVU113
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 64


 439 000c 0002     		lsls	r0, r0, #8
 440              	.LVL30:
1851:Drivers/CMSIS/Include/core_cm7.h ****     SCB->AIRCR = reg_value;
 441              		.loc 2 1851 36 view .LVU114
 442 000e 00F4E060 		and	r0, r0, #1792
1850:Drivers/CMSIS/Include/core_cm7.h ****                  (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)); /* Insert write key and priority gr
 443              		.loc 2 1850 63 view .LVU115
 444 0012 0343     		orrs	r3, r3, r0
 445              	.LVL31:
1849:Drivers/CMSIS/Include/core_cm7.h ****                  ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 446              		.loc 2 1849 15 view .LVU116
 447 0014 024A     		ldr	r2, .L28+4
 448 0016 1A43     		orrs	r2, r2, r3
 449              	.LVL32:
1852:Drivers/CMSIS/Include/core_cm7.h ****   }
 450              		.loc 2 1852 5 is_stmt 1 view .LVU117
1852:Drivers/CMSIS/Include/core_cm7.h ****   }
 451              		.loc 2 1852 16 is_stmt 0 view .LVU118
 452 0018 CA60     		str	r2, [r1, #12]
 453              	.LVL33:
1852:Drivers/CMSIS/Include/core_cm7.h ****   }
 454              		.loc 2 1852 16 view .LVU119
 455              	.LBE47:
 456              	.LBE46:
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 457              		.loc 1 149 1 view .LVU120
 458 001a 7047     		bx	lr
 459              	.L29:
 460              		.align	2
 461              	.L28:
 462 001c 00ED00E0 		.word	-536810240
 463 0020 0000FA05 		.word	100270080
 464              		.cfi_endproc
 465              	.LFE141:
 467              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
 468              		.align	1
 469              		.global	HAL_NVIC_SetPriority
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 474              	HAL_NVIC_SetPriority:
 475              	.LVL34:
 476              	.LFB142:
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  PreemptPriority The preemption priority for the IRQn channel.
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority 
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.          
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 65


 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** { 
 477              		.loc 1 165 1 is_stmt 1 view -0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		.loc 1 165 1 is_stmt 0 view .LVU122
 482 0000 10B5     		push	{r4, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 4, -8
 485              		.cfi_offset 14, -4
 486 0002 0446     		mov	r4, r0
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 487              		.loc 1 166 3 is_stmt 1 view .LVU123
 488              	.LVL35:
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 489              		.loc 1 169 3 view .LVU124
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 490              		.loc 1 170 3 view .LVU125
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 491              		.loc 1 172 3 view .LVU126
 492              	.LBB48:
 493              	.LBI48:
1860:Drivers/CMSIS/Include/core_cm7.h ****   {
 494              		.loc 2 1860 28 view .LVU127
 495              	.LBB49:
1862:Drivers/CMSIS/Include/core_cm7.h ****   }
 496              		.loc 2 1862 5 view .LVU128
1862:Drivers/CMSIS/Include/core_cm7.h ****   }
 497              		.loc 2 1862 28 is_stmt 0 view .LVU129
 498 0004 054B     		ldr	r3, .L32
 499 0006 D868     		ldr	r0, [r3, #12]
 500              	.LVL36:
1862:Drivers/CMSIS/Include/core_cm7.h ****   }
 501              		.loc 2 1862 28 view .LVU130
 502              	.LBE49:
 503              	.LBE48:
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 504              		.loc 1 174 3 is_stmt 1 view .LVU131
 505 0008 C0F30220 		ubfx	r0, r0, #8, #3
 506              	.LVL37:
 507              		.loc 1 174 3 is_stmt 0 view .LVU132
 508 000c FFF7FEFF 		bl	NVIC_EncodePriority
 509              	.LVL38:
 510              		.loc 1 174 3 view .LVU133
 511 0010 0146     		mov	r1, r0
 512              		.loc 1 174 3 discriminator 1 view .LVU134
 513 0012 2046     		mov	r0, r4
 514 0014 FFF7FEFF 		bl	__NVIC_SetPriority
 515              	.LVL39:
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 516              		.loc 1 175 1 view .LVU135
 517 0018 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 66


 518              	.LVL40:
 519              	.L33:
 520              		.loc 1 175 1 view .LVU136
 521 001a 00BF     		.align	2
 522              	.L32:
 523 001c 00ED00E0 		.word	-536810240
 524              		.cfi_endproc
 525              	.LFE142:
 527              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 528              		.align	1
 529              		.global	HAL_NVIC_EnableIRQ
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 534              	HAL_NVIC_EnableIRQ:
 535              	.LVL41:
 536              	.LFB143:
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         function should be called before. 
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 537              		.loc 1 187 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 542              		.loc 1 189 3 view .LVU138
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable interrupt */
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 543              		.loc 1 192 3 view .LVU139
 544              	.LBB50:
 545              	.LBI50:
1871:Drivers/CMSIS/Include/core_cm7.h ****   {
 546              		.loc 2 1871 24 view .LVU140
 547              	.LBB51:
1873:Drivers/CMSIS/Include/core_cm7.h ****     {
 548              		.loc 2 1873 5 view .LVU141
1873:Drivers/CMSIS/Include/core_cm7.h ****     {
 549              		.loc 2 1873 8 is_stmt 0 view .LVU142
 550 0000 0028     		cmp	r0, #0
1873:Drivers/CMSIS/Include/core_cm7.h ****     {
 551              		.loc 2 1873 8 view .LVU143
 552 0002 07DB     		blt	.L34
1875:Drivers/CMSIS/Include/core_cm7.h ****     }
 553              		.loc 2 1875 7 is_stmt 1 view .LVU144
1875:Drivers/CMSIS/Include/core_cm7.h ****     }
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 67


 554              		.loc 2 1875 83 is_stmt 0 view .LVU145
 555 0004 00F01F02 		and	r2, r0, #31
1875:Drivers/CMSIS/Include/core_cm7.h ****     }
 556              		.loc 2 1875 36 view .LVU146
 557 0008 4009     		lsrs	r0, r0, #5
 558              	.LVL42:
1875:Drivers/CMSIS/Include/core_cm7.h ****     }
 559              		.loc 2 1875 47 view .LVU147
 560 000a 0123     		movs	r3, #1
 561 000c 9340     		lsls	r3, r3, r2
1875:Drivers/CMSIS/Include/core_cm7.h ****     }
 562              		.loc 2 1875 45 view .LVU148
 563 000e 024A     		ldr	r2, .L36
 564 0010 42F82030 		str	r3, [r2, r0, lsl #2]
 565              	.LVL43:
 566              	.L34:
1875:Drivers/CMSIS/Include/core_cm7.h ****     }
 567              		.loc 2 1875 45 view .LVU149
 568              	.LBE51:
 569              	.LBE50:
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 570              		.loc 1 193 1 view .LVU150
 571 0014 7047     		bx	lr
 572              	.L37:
 573 0016 00BF     		.align	2
 574              	.L36:
 575 0018 00E100E0 		.word	-536813312
 576              		.cfi_endproc
 577              	.LFE143:
 579              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 580              		.align	1
 581              		.global	HAL_NVIC_DisableIRQ
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 586              	HAL_NVIC_DisableIRQ:
 587              	.LVL44:
 588              	.LFB144:
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 589              		.loc 1 203 1 is_stmt 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		.loc 1 203 1 is_stmt 0 view .LVU152
 594 0000 08B5     		push	{r3, lr}
 595              		.cfi_def_cfa_offset 8
 596              		.cfi_offset 3, -8
 597              		.cfi_offset 14, -4
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 68


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 598              		.loc 1 205 3 is_stmt 1 view .LVU153
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable interrupt */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 599              		.loc 1 208 3 view .LVU154
 600 0002 FFF7FEFF 		bl	__NVIC_DisableIRQ
 601              	.LVL45:
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 602              		.loc 1 209 1 is_stmt 0 view .LVU155
 603 0006 08BD     		pop	{r3, pc}
 604              		.cfi_endproc
 605              	.LFE144:
 607              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 608              		.align	1
 609              		.global	HAL_NVIC_SystemReset
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	HAL_NVIC_SystemReset:
 615              	.LFB145:
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 616              		.loc 1 216 1 is_stmt 1 view -0
 617              		.cfi_startproc
 618              		@ Volatile: function does not return.
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621 0000 08B5     		push	{r3, lr}
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 3, -8
 624              		.cfi_offset 14, -4
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* System Reset */
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SystemReset();
 625              		.loc 1 218 3 view .LVU157
 626 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 627              	.LVL46:
 628              		.cfi_endproc
 629              	.LFE145:
 631              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 632              		.align	1
 633              		.global	HAL_SYSTICK_Config
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 638              	HAL_SYSTICK_Config:
 639              	.LVL47:
 640              	.LFB146:
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 69


 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                  - 1  Function failed.
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 641              		.loc 1 229 1 view -0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 646              		.loc 1 230 4 view .LVU159
 647              	.LBB52:
 648              	.LBI52:
2120:Drivers/CMSIS/Include/core_cm7.h ****     }
2121:Drivers/CMSIS/Include/core_cm7.h ****   }
2122:Drivers/CMSIS/Include/core_cm7.h **** 
2123:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of CMSIS_Core_NVICFunctions */
2124:Drivers/CMSIS/Include/core_cm7.h **** 
2125:Drivers/CMSIS/Include/core_cm7.h ****   /* ##########################  MPU functions  #################################### */
2126:Drivers/CMSIS/Include/core_cm7.h **** 
2127:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2128:Drivers/CMSIS/Include/core_cm7.h **** 
2129:Drivers/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2130:Drivers/CMSIS/Include/core_cm7.h **** 
2131:Drivers/CMSIS/Include/core_cm7.h **** #endif
2132:Drivers/CMSIS/Include/core_cm7.h **** 
2133:Drivers/CMSIS/Include/core_cm7.h ****   /* ##########################  FPU functions  #################################### */
2134:Drivers/CMSIS/Include/core_cm7.h ****   /**
2135:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_Core_FunctionInterface
2136:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_Core_FpuFunctions FPU Functions
2137:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Function that provides FPU type.
2138:Drivers/CMSIS/Include/core_cm7.h ****     @{
2139:Drivers/CMSIS/Include/core_cm7.h ****    */
2140:Drivers/CMSIS/Include/core_cm7.h **** 
2141:Drivers/CMSIS/Include/core_cm7.h ****   /**
2142:Drivers/CMSIS/Include/core_cm7.h ****     \brief   get FPU type
2143:Drivers/CMSIS/Include/core_cm7.h ****     \details returns the FPU type
2144:Drivers/CMSIS/Include/core_cm7.h ****     \returns
2145:Drivers/CMSIS/Include/core_cm7.h ****      - \b  0: No FPU
2146:Drivers/CMSIS/Include/core_cm7.h ****      - \b  1: Single precision FPU
2147:Drivers/CMSIS/Include/core_cm7.h ****      - \b  2: Double + Single precision FPU
2148:Drivers/CMSIS/Include/core_cm7.h ****    */
2149:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2150:Drivers/CMSIS/Include/core_cm7.h ****   {
2151:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t mvfr0;
2152:Drivers/CMSIS/Include/core_cm7.h **** 
2153:Drivers/CMSIS/Include/core_cm7.h ****     mvfr0 = SCB->MVFR0;
2154:Drivers/CMSIS/Include/core_cm7.h ****     if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2155:Drivers/CMSIS/Include/core_cm7.h ****     {
2156:Drivers/CMSIS/Include/core_cm7.h ****       return 2U; /* Double + Single precision FPU */
2157:Drivers/CMSIS/Include/core_cm7.h ****     }
2158:Drivers/CMSIS/Include/core_cm7.h ****     else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2159:Drivers/CMSIS/Include/core_cm7.h ****     {
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 70


2160:Drivers/CMSIS/Include/core_cm7.h ****       return 1U; /* Single precision FPU */
2161:Drivers/CMSIS/Include/core_cm7.h ****     }
2162:Drivers/CMSIS/Include/core_cm7.h ****     else
2163:Drivers/CMSIS/Include/core_cm7.h ****     {
2164:Drivers/CMSIS/Include/core_cm7.h ****       return 0U; /* No FPU */
2165:Drivers/CMSIS/Include/core_cm7.h ****     }
2166:Drivers/CMSIS/Include/core_cm7.h ****   }
2167:Drivers/CMSIS/Include/core_cm7.h **** 
2168:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2169:Drivers/CMSIS/Include/core_cm7.h **** 
2170:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2171:Drivers/CMSIS/Include/core_cm7.h **** /**
2172:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2173:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2174:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2175:Drivers/CMSIS/Include/core_cm7.h ****   @{
2176:Drivers/CMSIS/Include/core_cm7.h ****  */
2177:Drivers/CMSIS/Include/core_cm7.h **** 
2178:Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2179:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x) (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Pos)
2180:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x) (((x) & SCB_CCSIDR_NUMSETS_Msk) >> SCB_CCSIDR_NUMSETS_Pos)
2181:Drivers/CMSIS/Include/core_cm7.h **** 
2182:Drivers/CMSIS/Include/core_cm7.h ****   /**
2183:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Enable I-Cache
2184:Drivers/CMSIS/Include/core_cm7.h ****     \details Turns on I-Cache
2185:Drivers/CMSIS/Include/core_cm7.h ****     */
2186:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_EnableICache(void)
2187:Drivers/CMSIS/Include/core_cm7.h ****   {
2188:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2189:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2190:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2191:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL; /* invalidate I-Cache */
2192:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2193:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2194:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |= (uint32_t)SCB_CCR_IC_Msk; /* enable I-Cache */
2195:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2196:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2197:Drivers/CMSIS/Include/core_cm7.h **** #endif
2198:Drivers/CMSIS/Include/core_cm7.h ****   }
2199:Drivers/CMSIS/Include/core_cm7.h **** 
2200:Drivers/CMSIS/Include/core_cm7.h ****   /**
2201:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Disable I-Cache
2202:Drivers/CMSIS/Include/core_cm7.h ****     \details Turns off I-Cache
2203:Drivers/CMSIS/Include/core_cm7.h ****     */
2204:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_DisableICache(void)
2205:Drivers/CMSIS/Include/core_cm7.h ****   {
2206:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2207:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2208:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2209:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk; /* disable I-Cache */
2210:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                    /* invalidate I-Cache */
2211:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2212:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2213:Drivers/CMSIS/Include/core_cm7.h **** #endif
2214:Drivers/CMSIS/Include/core_cm7.h ****   }
2215:Drivers/CMSIS/Include/core_cm7.h **** 
2216:Drivers/CMSIS/Include/core_cm7.h ****   /**
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 71


2217:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Invalidate I-Cache
2218:Drivers/CMSIS/Include/core_cm7.h ****     \details Invalidates I-Cache
2219:Drivers/CMSIS/Include/core_cm7.h ****     */
2220:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_InvalidateICache(void)
2221:Drivers/CMSIS/Include/core_cm7.h ****   {
2222:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2223:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2224:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2225:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2226:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2227:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2228:Drivers/CMSIS/Include/core_cm7.h **** #endif
2229:Drivers/CMSIS/Include/core_cm7.h ****   }
2230:Drivers/CMSIS/Include/core_cm7.h **** 
2231:Drivers/CMSIS/Include/core_cm7.h ****   /**
2232:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Enable D-Cache
2233:Drivers/CMSIS/Include/core_cm7.h ****     \details Turns on D-Cache
2234:Drivers/CMSIS/Include/core_cm7.h ****     */
2235:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_EnableDCache(void)
2236:Drivers/CMSIS/Include/core_cm7.h ****   {
2237:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2238:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2239:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2240:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2241:Drivers/CMSIS/Include/core_cm7.h **** 
2242:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/ /* Level 1 data cache */
2243:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2244:Drivers/CMSIS/Include/core_cm7.h **** 
2245:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2246:Drivers/CMSIS/Include/core_cm7.h **** 
2247:Drivers/CMSIS/Include/core_cm7.h ****     /* invalidate D-Cache */
2248:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2249:Drivers/CMSIS/Include/core_cm7.h ****     do
2250:Drivers/CMSIS/Include/core_cm7.h ****     {
2251:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2252:Drivers/CMSIS/Include/core_cm7.h ****       do
2253:Drivers/CMSIS/Include/core_cm7.h ****       {
2254:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2255:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk));
2256:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__CC_ARM)
2257:Drivers/CMSIS/Include/core_cm7.h ****         __schedule_barrier();
2258:Drivers/CMSIS/Include/core_cm7.h **** #endif
2259:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2260:Drivers/CMSIS/Include/core_cm7.h ****     } while (sets-- != 0U);
2261:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2262:Drivers/CMSIS/Include/core_cm7.h **** 
2263:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |= (uint32_t)SCB_CCR_DC_Msk; /* enable D-Cache */
2264:Drivers/CMSIS/Include/core_cm7.h **** 
2265:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2266:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2267:Drivers/CMSIS/Include/core_cm7.h **** #endif
2268:Drivers/CMSIS/Include/core_cm7.h ****   }
2269:Drivers/CMSIS/Include/core_cm7.h **** 
2270:Drivers/CMSIS/Include/core_cm7.h ****   /**
2271:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Disable D-Cache
2272:Drivers/CMSIS/Include/core_cm7.h ****     \details Turns off D-Cache
2273:Drivers/CMSIS/Include/core_cm7.h ****     */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 72


2274:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_DisableDCache(void)
2275:Drivers/CMSIS/Include/core_cm7.h ****   {
2276:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2277:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2278:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2279:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2280:Drivers/CMSIS/Include/core_cm7.h **** 
2281:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/ /* Level 1 data cache */
2282:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2283:Drivers/CMSIS/Include/core_cm7.h **** 
2284:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk; /* disable D-Cache */
2285:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2286:Drivers/CMSIS/Include/core_cm7.h **** 
2287:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2288:Drivers/CMSIS/Include/core_cm7.h **** 
2289:Drivers/CMSIS/Include/core_cm7.h ****     /* clean & invalidate D-Cache */
2290:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2291:Drivers/CMSIS/Include/core_cm7.h ****     do
2292:Drivers/CMSIS/Include/core_cm7.h ****     {
2293:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2294:Drivers/CMSIS/Include/core_cm7.h ****       do
2295:Drivers/CMSIS/Include/core_cm7.h ****       {
2296:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2297:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk));
2298:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__CC_ARM)
2299:Drivers/CMSIS/Include/core_cm7.h ****         __schedule_barrier();
2300:Drivers/CMSIS/Include/core_cm7.h **** #endif
2301:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2302:Drivers/CMSIS/Include/core_cm7.h ****     } while (sets-- != 0U);
2303:Drivers/CMSIS/Include/core_cm7.h **** 
2304:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2305:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2306:Drivers/CMSIS/Include/core_cm7.h **** #endif
2307:Drivers/CMSIS/Include/core_cm7.h ****   }
2308:Drivers/CMSIS/Include/core_cm7.h **** 
2309:Drivers/CMSIS/Include/core_cm7.h ****   /**
2310:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Invalidate D-Cache
2311:Drivers/CMSIS/Include/core_cm7.h ****     \details Invalidates D-Cache
2312:Drivers/CMSIS/Include/core_cm7.h ****     */
2313:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_InvalidateDCache(void)
2314:Drivers/CMSIS/Include/core_cm7.h ****   {
2315:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2316:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2317:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2318:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2319:Drivers/CMSIS/Include/core_cm7.h **** 
2320:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/ /* Level 1 data cache */
2321:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2322:Drivers/CMSIS/Include/core_cm7.h **** 
2323:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2324:Drivers/CMSIS/Include/core_cm7.h **** 
2325:Drivers/CMSIS/Include/core_cm7.h ****     /* invalidate D-Cache */
2326:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2327:Drivers/CMSIS/Include/core_cm7.h ****     do
2328:Drivers/CMSIS/Include/core_cm7.h ****     {
2329:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2330:Drivers/CMSIS/Include/core_cm7.h ****       do
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 73


2331:Drivers/CMSIS/Include/core_cm7.h ****       {
2332:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2333:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk));
2334:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__CC_ARM)
2335:Drivers/CMSIS/Include/core_cm7.h ****         __schedule_barrier();
2336:Drivers/CMSIS/Include/core_cm7.h **** #endif
2337:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2338:Drivers/CMSIS/Include/core_cm7.h ****     } while (sets-- != 0U);
2339:Drivers/CMSIS/Include/core_cm7.h **** 
2340:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2341:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2342:Drivers/CMSIS/Include/core_cm7.h **** #endif
2343:Drivers/CMSIS/Include/core_cm7.h ****   }
2344:Drivers/CMSIS/Include/core_cm7.h **** 
2345:Drivers/CMSIS/Include/core_cm7.h ****   /**
2346:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Clean D-Cache
2347:Drivers/CMSIS/Include/core_cm7.h ****     \details Cleans D-Cache
2348:Drivers/CMSIS/Include/core_cm7.h ****     */
2349:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_CleanDCache(void)
2350:Drivers/CMSIS/Include/core_cm7.h ****   {
2351:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2352:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2353:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2354:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2355:Drivers/CMSIS/Include/core_cm7.h **** 
2356:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/ /* Level 1 data cache */
2357:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2358:Drivers/CMSIS/Include/core_cm7.h **** 
2359:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2360:Drivers/CMSIS/Include/core_cm7.h **** 
2361:Drivers/CMSIS/Include/core_cm7.h ****     /* clean D-Cache */
2362:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2363:Drivers/CMSIS/Include/core_cm7.h ****     do
2364:Drivers/CMSIS/Include/core_cm7.h ****     {
2365:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2366:Drivers/CMSIS/Include/core_cm7.h ****       do
2367:Drivers/CMSIS/Include/core_cm7.h ****       {
2368:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2369:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk));
2370:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__CC_ARM)
2371:Drivers/CMSIS/Include/core_cm7.h ****         __schedule_barrier();
2372:Drivers/CMSIS/Include/core_cm7.h **** #endif
2373:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2374:Drivers/CMSIS/Include/core_cm7.h ****     } while (sets-- != 0U);
2375:Drivers/CMSIS/Include/core_cm7.h **** 
2376:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2377:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2378:Drivers/CMSIS/Include/core_cm7.h **** #endif
2379:Drivers/CMSIS/Include/core_cm7.h ****   }
2380:Drivers/CMSIS/Include/core_cm7.h **** 
2381:Drivers/CMSIS/Include/core_cm7.h ****   /**
2382:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Clean & Invalidate D-Cache
2383:Drivers/CMSIS/Include/core_cm7.h ****     \details Cleans and Invalidates D-Cache
2384:Drivers/CMSIS/Include/core_cm7.h ****     */
2385:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_CleanInvalidateDCache(void)
2386:Drivers/CMSIS/Include/core_cm7.h ****   {
2387:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 74


2388:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2389:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2391:Drivers/CMSIS/Include/core_cm7.h **** 
2392:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/ /* Level 1 data cache */
2393:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2394:Drivers/CMSIS/Include/core_cm7.h **** 
2395:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2396:Drivers/CMSIS/Include/core_cm7.h **** 
2397:Drivers/CMSIS/Include/core_cm7.h ****     /* clean & invalidate D-Cache */
2398:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2399:Drivers/CMSIS/Include/core_cm7.h ****     do
2400:Drivers/CMSIS/Include/core_cm7.h ****     {
2401:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2402:Drivers/CMSIS/Include/core_cm7.h ****       do
2403:Drivers/CMSIS/Include/core_cm7.h ****       {
2404:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2405:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk));
2406:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__CC_ARM)
2407:Drivers/CMSIS/Include/core_cm7.h ****         __schedule_barrier();
2408:Drivers/CMSIS/Include/core_cm7.h **** #endif
2409:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2410:Drivers/CMSIS/Include/core_cm7.h ****     } while (sets-- != 0U);
2411:Drivers/CMSIS/Include/core_cm7.h **** 
2412:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2413:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2414:Drivers/CMSIS/Include/core_cm7.h **** #endif
2415:Drivers/CMSIS/Include/core_cm7.h ****   }
2416:Drivers/CMSIS/Include/core_cm7.h **** 
2417:Drivers/CMSIS/Include/core_cm7.h ****   /**
2418:Drivers/CMSIS/Include/core_cm7.h ****     \brief   D-Cache Invalidate by address
2419:Drivers/CMSIS/Include/core_cm7.h ****     \details Invalidates D-Cache for the given address
2420:Drivers/CMSIS/Include/core_cm7.h ****     \param[in]   addr    address (aligned to 32-byte boundary)
2421:Drivers/CMSIS/Include/core_cm7.h ****     \param[in]   dsize   size of memory block (in number of bytes)
2422:Drivers/CMSIS/Include/core_cm7.h ****   */
2423:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_InvalidateDCache_by_Addr(uint32_t *addr, int32_t dsize)
2424:Drivers/CMSIS/Include/core_cm7.h ****   {
2425:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2426:Drivers/CMSIS/Include/core_cm7.h ****     int32_t op_size = dsize;
2427:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t)addr;
2428:Drivers/CMSIS/Include/core_cm7.h ****     int32_t linesize = 32; /* in Cortex-M7 size of cache line is fixed to 8 words (32 bytes) */
2429:Drivers/CMSIS/Include/core_cm7.h **** 
2430:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2431:Drivers/CMSIS/Include/core_cm7.h **** 
2432:Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0)
2433:Drivers/CMSIS/Include/core_cm7.h ****     {
2434:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCIMVAC = op_addr;
2435:Drivers/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2436:Drivers/CMSIS/Include/core_cm7.h ****       op_size -= linesize;
2437:Drivers/CMSIS/Include/core_cm7.h ****     }
2438:Drivers/CMSIS/Include/core_cm7.h **** 
2439:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2440:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2441:Drivers/CMSIS/Include/core_cm7.h **** #endif
2442:Drivers/CMSIS/Include/core_cm7.h ****   }
2443:Drivers/CMSIS/Include/core_cm7.h **** 
2444:Drivers/CMSIS/Include/core_cm7.h ****   /**
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 75


2445:Drivers/CMSIS/Include/core_cm7.h ****     \brief   D-Cache Clean by address
2446:Drivers/CMSIS/Include/core_cm7.h ****     \details Cleans D-Cache for the given address
2447:Drivers/CMSIS/Include/core_cm7.h ****     \param[in]   addr    address (aligned to 32-byte boundary)
2448:Drivers/CMSIS/Include/core_cm7.h ****     \param[in]   dsize   size of memory block (in number of bytes)
2449:Drivers/CMSIS/Include/core_cm7.h ****   */
2450:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_CleanDCache_by_Addr(uint32_t *addr, int32_t dsize)
2451:Drivers/CMSIS/Include/core_cm7.h ****   {
2452:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2453:Drivers/CMSIS/Include/core_cm7.h ****     int32_t op_size = dsize;
2454:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t)addr;
2455:Drivers/CMSIS/Include/core_cm7.h ****     int32_t linesize = 32; /* in Cortex-M7 size of cache line is fixed to 8 words (32 bytes) */
2456:Drivers/CMSIS/Include/core_cm7.h **** 
2457:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2458:Drivers/CMSIS/Include/core_cm7.h **** 
2459:Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0)
2460:Drivers/CMSIS/Include/core_cm7.h ****     {
2461:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCCMVAC = op_addr;
2462:Drivers/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2463:Drivers/CMSIS/Include/core_cm7.h ****       op_size -= linesize;
2464:Drivers/CMSIS/Include/core_cm7.h ****     }
2465:Drivers/CMSIS/Include/core_cm7.h **** 
2466:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2467:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2468:Drivers/CMSIS/Include/core_cm7.h **** #endif
2469:Drivers/CMSIS/Include/core_cm7.h ****   }
2470:Drivers/CMSIS/Include/core_cm7.h **** 
2471:Drivers/CMSIS/Include/core_cm7.h ****   /**
2472:Drivers/CMSIS/Include/core_cm7.h ****     \brief   D-Cache Clean and Invalidate by address
2473:Drivers/CMSIS/Include/core_cm7.h ****     \details Cleans and invalidates D_Cache for the given address
2474:Drivers/CMSIS/Include/core_cm7.h ****     \param[in]   addr    address (aligned to 32-byte boundary)
2475:Drivers/CMSIS/Include/core_cm7.h ****     \param[in]   dsize   size of memory block (in number of bytes)
2476:Drivers/CMSIS/Include/core_cm7.h ****   */
2477:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_CleanInvalidateDCache_by_Addr(uint32_t *addr, int32_t dsize)
2478:Drivers/CMSIS/Include/core_cm7.h ****   {
2479:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2480:Drivers/CMSIS/Include/core_cm7.h ****     int32_t op_size = dsize;
2481:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t)addr;
2482:Drivers/CMSIS/Include/core_cm7.h ****     int32_t linesize = 32; /* in Cortex-M7 size of cache line is fixed to 8 words (32 bytes) */
2483:Drivers/CMSIS/Include/core_cm7.h **** 
2484:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2485:Drivers/CMSIS/Include/core_cm7.h **** 
2486:Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0)
2487:Drivers/CMSIS/Include/core_cm7.h ****     {
2488:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCCIMVAC = op_addr;
2489:Drivers/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2490:Drivers/CMSIS/Include/core_cm7.h ****       op_size -= linesize;
2491:Drivers/CMSIS/Include/core_cm7.h ****     }
2492:Drivers/CMSIS/Include/core_cm7.h **** 
2493:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2494:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2495:Drivers/CMSIS/Include/core_cm7.h **** #endif
2496:Drivers/CMSIS/Include/core_cm7.h ****   }
2497:Drivers/CMSIS/Include/core_cm7.h **** 
2498:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of CMSIS_Core_CacheFunctions */
2499:Drivers/CMSIS/Include/core_cm7.h **** 
2500:Drivers/CMSIS/Include/core_cm7.h ****   /* ##################################    SysTick function  ######################################
2501:Drivers/CMSIS/Include/core_cm7.h ****   /**
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 76


2502:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_Core_FunctionInterface
2503:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2504:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Functions that configure the System.
2505:Drivers/CMSIS/Include/core_cm7.h ****     @{
2506:Drivers/CMSIS/Include/core_cm7.h ****    */
2507:Drivers/CMSIS/Include/core_cm7.h **** 
2508:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2509:Drivers/CMSIS/Include/core_cm7.h **** 
2510:Drivers/CMSIS/Include/core_cm7.h ****   /**
2511:Drivers/CMSIS/Include/core_cm7.h ****     \brief   System Tick Configuration
2512:Drivers/CMSIS/Include/core_cm7.h ****     \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2513:Drivers/CMSIS/Include/core_cm7.h ****              Counter is in free running mode to generate periodic interrupts.
2514:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]  ticks  Number of ticks between two interrupts.
2515:Drivers/CMSIS/Include/core_cm7.h ****     \return          0  Function succeeded.
2516:Drivers/CMSIS/Include/core_cm7.h ****     \return          1  Function failed.
2517:Drivers/CMSIS/Include/core_cm7.h ****     \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2518:Drivers/CMSIS/Include/core_cm7.h ****              function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i
2519:Drivers/CMSIS/Include/core_cm7.h ****              must contain a vendor-specific implementation of this function.
2520:Drivers/CMSIS/Include/core_cm7.h ****    */
2521:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 649              		.loc 2 2521 28 view .LVU160
 650              	.LBB53:
2522:Drivers/CMSIS/Include/core_cm7.h ****   {
2523:Drivers/CMSIS/Include/core_cm7.h ****     if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 651              		.loc 2 2523 5 view .LVU161
 652              		.loc 2 2523 16 is_stmt 0 view .LVU162
 653 0000 0138     		subs	r0, r0, #1
 654              	.LVL48:
 655              		.loc 2 2523 8 view .LVU163
 656 0002 B0F1807F 		cmp	r0, #16777216
 657 0006 0BD2     		bcs	.L44
2524:Drivers/CMSIS/Include/core_cm7.h ****     {
2525:Drivers/CMSIS/Include/core_cm7.h ****       return (1UL); /* Reload value impossible */
2526:Drivers/CMSIS/Include/core_cm7.h ****     }
2527:Drivers/CMSIS/Include/core_cm7.h **** 
2528:Drivers/CMSIS/Include/core_cm7.h ****     SysTick->LOAD = (uint32_t)(ticks - 1UL);                         /* set reload register */
 658              		.loc 2 2528 5 is_stmt 1 view .LVU164
 659              		.loc 2 2528 19 is_stmt 0 view .LVU165
 660 0008 4FF0E023 		mov	r3, #-536813568
 661 000c 5861     		str	r0, [r3, #20]
2529:Drivers/CMSIS/Include/core_cm7.h ****     NVIC_SetPriority(SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick In
 662              		.loc 2 2529 5 is_stmt 1 view .LVU166
 663              	.LVL49:
 664              	.LBB54:
 665              	.LBI54:
1992:Drivers/CMSIS/Include/core_cm7.h ****   {
 666              		.loc 2 1992 24 view .LVU167
 667              	.LBB55:
1994:Drivers/CMSIS/Include/core_cm7.h ****     {
 668              		.loc 2 1994 5 view .LVU168
2000:Drivers/CMSIS/Include/core_cm7.h ****     }
 669              		.loc 2 2000 7 view .LVU169
2000:Drivers/CMSIS/Include/core_cm7.h ****     }
 670              		.loc 2 2000 51 is_stmt 0 view .LVU170
 671 000e 054A     		ldr	r2, .L45
 672 0010 F021     		movs	r1, #240
 673 0012 82F82310 		strb	r1, [r2, #35]
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 77


 674              	.LVL50:
2000:Drivers/CMSIS/Include/core_cm7.h ****     }
 675              		.loc 2 2000 51 view .LVU171
 676              	.LBE55:
 677              	.LBE54:
2530:Drivers/CMSIS/Include/core_cm7.h ****     SysTick->VAL = 0UL;                                              /* Load the SysTick Counter Va
 678              		.loc 2 2530 5 is_stmt 1 view .LVU172
 679              		.loc 2 2530 18 is_stmt 0 view .LVU173
 680 0016 0020     		movs	r0, #0
 681              	.LVL51:
 682              		.loc 2 2530 18 view .LVU174
 683 0018 9861     		str	r0, [r3, #24]
2531:Drivers/CMSIS/Include/core_cm7.h ****     SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk |
 684              		.loc 2 2531 5 is_stmt 1 view .LVU175
 685              		.loc 2 2531 19 is_stmt 0 view .LVU176
 686 001a 0722     		movs	r2, #7
 687 001c 1A61     		str	r2, [r3, #16]
2532:Drivers/CMSIS/Include/core_cm7.h ****                     SysTick_CTRL_TICKINT_Msk |
2533:Drivers/CMSIS/Include/core_cm7.h ****                     SysTick_CTRL_ENABLE_Msk; /* Enable SysTick IRQ and SysTick Timer */
2534:Drivers/CMSIS/Include/core_cm7.h ****     return (0UL);                            /* Function successful */
 688              		.loc 2 2534 5 is_stmt 1 view .LVU177
 689              		.loc 2 2534 12 is_stmt 0 view .LVU178
 690 001e 7047     		bx	lr
 691              	.L44:
2525:Drivers/CMSIS/Include/core_cm7.h ****     }
 692              		.loc 2 2525 14 view .LVU179
 693 0020 0120     		movs	r0, #1
 694              	.LVL52:
2525:Drivers/CMSIS/Include/core_cm7.h ****     }
 695              		.loc 2 2525 14 view .LVU180
 696              	.LBE53:
 697              	.LBE52:
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 698              		.loc 1 231 1 view .LVU181
 699 0022 7047     		bx	lr
 700              	.L46:
 701              		.align	2
 702              	.L45:
 703 0024 00ED00E0 		.word	-536810240
 704              		.cfi_endproc
 705              	.LFE146:
 707              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 708              		.align	1
 709              		.global	HAL_MPU_Disable
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 714              	HAL_MPU_Disable:
 715              	.LFB147:
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @}
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *  @brief   Cortex control functions 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @verbatim   
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 78


 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================  
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities. 
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @endverbatim
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Disables the MPU
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 716              		.loc 1 258 1 is_stmt 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __DMB();
 721              		.loc 1 260 3 view .LVU183
 722              	.LBB56:
 723              	.LBI56:
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 724              		.loc 3 888 27 view .LVU184
 725              	.LBB57:
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 726              		.loc 3 890 3 view .LVU185
 727              		.syntax unified
 728              	@ 890 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 729 0000 BFF35F8F 		dmb 0xF
 730              	@ 0 "" 2
 731              		.thumb
 732              		.syntax unified
 733              	.LBE57:
 734              	.LBE56:
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable fault exceptions */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 735              		.loc 1 263 3 view .LVU186
 736              		.loc 1 263 6 is_stmt 0 view .LVU187
 737 0004 044B     		ldr	r3, .L48
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 79


 738 0006 5A6A     		ldr	r2, [r3, #36]
 739              		.loc 1 263 14 view .LVU188
 740 0008 22F48032 		bic	r2, r2, #65536
 741 000c 5A62     		str	r2, [r3, #36]
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->CTRL = 0;
 742              		.loc 1 266 3 is_stmt 1 view .LVU189
 743              		.loc 1 266 13 is_stmt 0 view .LVU190
 744 000e 0022     		movs	r2, #0
 745 0010 C3F89420 		str	r2, [r3, #148]
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 746              		.loc 1 267 1 view .LVU191
 747 0014 7047     		bx	lr
 748              	.L49:
 749 0016 00BF     		.align	2
 750              	.L48:
 751 0018 00ED00E0 		.word	-536810240
 752              		.cfi_endproc
 753              	.LFE147:
 755              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 756              		.align	1
 757              		.global	HAL_MPU_Enable
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 762              	HAL_MPU_Enable:
 763              	.LVL53:
 764              	.LFB148:
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Enables the MPU
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  MPU_Control Specifies the control mode of the MPU during hard fault, 
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged access to the default memory 
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 765              		.loc 1 281 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable the MPU */
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 770              		.loc 1 283 3 view .LVU193
 771              		.loc 1 283 27 is_stmt 0 view .LVU194
 772 0000 40F00100 		orr	r0, r0, #1
 773              	.LVL54:
 774              		.loc 1 283 13 view .LVU195
 775 0004 054B     		ldr	r3, .L51
 776 0006 C3F89400 		str	r0, [r3, #148]
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 80


 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable fault exceptions */
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 777              		.loc 1 286 3 is_stmt 1 view .LVU196
 778              		.loc 1 286 6 is_stmt 0 view .LVU197
 779 000a 5A6A     		ldr	r2, [r3, #36]
 780              		.loc 1 286 14 view .LVU198
 781 000c 42F48032 		orr	r2, r2, #65536
 782 0010 5A62     		str	r2, [r3, #36]
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __DSB();
 783              		.loc 1 289 3 is_stmt 1 view .LVU199
 784              	.LBB58:
 785              	.LBI58:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 786              		.loc 3 877 27 view .LVU200
 787              	.LBB59:
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 788              		.loc 3 879 3 view .LVU201
 789              		.syntax unified
 790              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 791 0012 BFF34F8F 		dsb 0xF
 792              	@ 0 "" 2
 793              		.thumb
 794              		.syntax unified
 795              	.LBE59:
 796              	.LBE58:
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __ISB();
 797              		.loc 1 290 3 view .LVU202
 798              	.LBB60:
 799              	.LBI60:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 800              		.loc 3 866 27 view .LVU203
 801              	.LBB61:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802              		.loc 3 868 3 view .LVU204
 803              		.syntax unified
 804              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 805 0016 BFF36F8F 		isb 0xF
 806              	@ 0 "" 2
 807              		.thumb
 808              		.syntax unified
 809              	.LBE61:
 810              	.LBE60:
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 811              		.loc 1 291 1 is_stmt 0 view .LVU205
 812 001a 7047     		bx	lr
 813              	.L52:
 814              		.align	2
 815              	.L51:
 816 001c 00ED00E0 		.word	-536810240
 817              		.cfi_endproc
 818              	.LFE148:
 820              		.section	.text.HAL_MPU_EnableRegion,"ax",%progbits
 821              		.align	1
 822              		.global	HAL_MPU_EnableRegion
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 81


 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 827              	HAL_MPU_EnableRegion:
 828              	.LVL55:
 829              	.LFB149:
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Enables the MPU Region.
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_EnableRegion(uint32_t RegionNumber)
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 830              		.loc 1 298 1 is_stmt 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		@ link register save eliminated.
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(RegionNumber));
 835              		.loc 1 300 3 view .LVU207
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set the Region number */
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->RNR = RegionNumber;
 836              		.loc 1 303 3 view .LVU208
 837              		.loc 1 303 12 is_stmt 0 view .LVU209
 838 0000 044B     		ldr	r3, .L54
 839 0002 C3F89800 		str	r0, [r3, #152]
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable the Region */
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   SET_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 840              		.loc 1 306 3 is_stmt 1 view .LVU210
 841 0006 D3F8A020 		ldr	r2, [r3, #160]
 842 000a 42F00102 		orr	r2, r2, #1
 843 000e C3F8A020 		str	r2, [r3, #160]
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 844              		.loc 1 307 1 is_stmt 0 view .LVU211
 845 0012 7047     		bx	lr
 846              	.L55:
 847              		.align	2
 848              	.L54:
 849 0014 00ED00E0 		.word	-536810240
 850              		.cfi_endproc
 851              	.LFE149:
 853              		.section	.text.HAL_MPU_DisableRegion,"ax",%progbits
 854              		.align	1
 855              		.global	HAL_MPU_DisableRegion
 856              		.syntax unified
 857              		.thumb
 858              		.thumb_func
 860              	HAL_MPU_DisableRegion:
 861              	.LVL56:
 862              	.LFB150:
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Disables the MPU Region.
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 82


 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_DisableRegion(uint32_t RegionNumber)
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 863              		.loc 1 314 1 is_stmt 1 view -0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 0
 866              		@ frame_needed = 0, uses_anonymous_args = 0
 867              		@ link register save eliminated.
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(RegionNumber));
 868              		.loc 1 316 3 view .LVU213
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set the Region number */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->RNR = RegionNumber;
 869              		.loc 1 319 3 view .LVU214
 870              		.loc 1 319 12 is_stmt 0 view .LVU215
 871 0000 044B     		ldr	r3, .L57
 872 0002 C3F89800 		str	r0, [r3, #152]
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable the Region */
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 873              		.loc 1 322 3 is_stmt 1 view .LVU216
 874 0006 D3F8A020 		ldr	r2, [r3, #160]
 875 000a 22F00102 		bic	r2, r2, #1
 876 000e C3F8A020 		str	r2, [r3, #160]
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 877              		.loc 1 323 1 is_stmt 0 view .LVU217
 878 0012 7047     		bx	lr
 879              	.L58:
 880              		.align	2
 881              	.L57:
 882 0014 00ED00E0 		.word	-536810240
 883              		.cfi_endproc
 884              	.LFE150:
 886              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 887              		.align	1
 888              		.global	HAL_MPU_ConfigRegion
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 893              	HAL_MPU_ConfigRegion:
 894              	.LVL57:
 895              	.LFB151:
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                the initialization and configuration information.
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 896              		.loc 1 332 1 is_stmt 1 view -0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 83


 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 901              		.loc 1 334 3 view .LVU219
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 902              		.loc 1 335 3 view .LVU220
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 903              		.loc 1 336 3 view .LVU221
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 904              		.loc 1 337 3 view .LVU222
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 905              		.loc 1 338 3 view .LVU223
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 906              		.loc 1 339 3 view .LVU224
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 907              		.loc 1 340 3 view .LVU225
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 908              		.loc 1 341 3 view .LVU226
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 909              		.loc 1 342 3 view .LVU227
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 910              		.loc 1 343 3 view .LVU228
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set the Region number */
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 911              		.loc 1 346 3 view .LVU229
 912              		.loc 1 346 22 is_stmt 0 view .LVU230
 913 0000 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 914              		.loc 1 346 12 view .LVU231
 915 0002 144A     		ldr	r2, .L60
 916 0004 C2F89830 		str	r3, [r2, #152]
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable the Region */
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 917              		.loc 1 349 3 is_stmt 1 view .LVU232
 918 0008 D2F8A030 		ldr	r3, [r2, #160]
 919 000c 23F00103 		bic	r3, r3, #1
 920 0010 C2F8A030 		str	r3, [r2, #160]
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Apply configuration */
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->RBAR = MPU_Init->BaseAddress;
 921              		.loc 1 352 3 view .LVU233
 922              		.loc 1 352 23 is_stmt 0 view .LVU234
 923 0014 4368     		ldr	r3, [r0, #4]
 924              		.loc 1 352 13 view .LVU235
 925 0016 C2F89C30 		str	r3, [r2, #156]
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 926              		.loc 1 353 3 is_stmt 1 view .LVU236
 927              		.loc 1 353 34 is_stmt 0 view .LVU237
 928 001a 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 929              		.loc 1 354 34 view .LVU238
 930 001c C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 931              		.loc 1 354 60 view .LVU239
 932 001e 1B06     		lsls	r3, r3, #24
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 933              		.loc 1 353 82 view .LVU240
 934 0020 43EA0173 		orr	r3, r3, r1, lsl #28
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 84


 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 935              		.loc 1 355 34 view .LVU241
 936 0024 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 937              		.loc 1 354 82 view .LVU242
 938 0026 43EAC143 		orr	r3, r3, r1, lsl #19
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 939              		.loc 1 356 34 view .LVU243
 940 002a 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 941              		.loc 1 355 82 view .LVU244
 942 002c 43EA8143 		orr	r3, r3, r1, lsl #18
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 943              		.loc 1 357 34 view .LVU245
 944 0030 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 945              		.loc 1 356 82 view .LVU246
 946 0032 43EA4143 		orr	r3, r3, r1, lsl #17
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 947              		.loc 1 358 34 view .LVU247
 948 0036 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 949              		.loc 1 357 82 view .LVU248
 950 0038 43EA0143 		orr	r3, r3, r1, lsl #16
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 951              		.loc 1 359 34 view .LVU249
 952 003c 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 953              		.loc 1 358 82 view .LVU250
 954 003e 43EA0123 		orr	r3, r3, r1, lsl #8
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 955              		.loc 1 360 34 view .LVU251
 956 0042 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 957              		.loc 1 359 82 view .LVU252
 958 0044 43EA4103 		orr	r3, r3, r1, lsl #1
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 959              		.loc 1 361 34 view .LVU253
 960 0048 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 961              		.loc 1 360 82 view .LVU254
 962 004a 0B43     		orrs	r3, r3, r1
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 963              		.loc 1 353 13 view .LVU255
 964 004c C2F8A030 		str	r3, [r2, #160]
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 965              		.loc 1 362 1 view .LVU256
 966 0050 7047     		bx	lr
 967              	.L61:
 968 0052 00BF     		.align	2
 969              	.L60:
 970 0054 00ED00E0 		.word	-536810240
 971              		.cfi_endproc
 972              	.LFE151:
 974              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 975              		.align	1
 976              		.global	HAL_NVIC_GetPriorityGrouping
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 85


 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
 981              	HAL_NVIC_GetPriorityGrouping:
 982              	.LFB152:
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 983              		.loc 1 370 1 is_stmt 1 view -0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              		@ link register save eliminated.
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 988              		.loc 1 372 3 view .LVU258
 989              	.LBB62:
 990              	.LBI62:
1860:Drivers/CMSIS/Include/core_cm7.h ****   {
 991              		.loc 2 1860 28 view .LVU259
 992              	.LBB63:
1862:Drivers/CMSIS/Include/core_cm7.h ****   }
 993              		.loc 2 1862 5 view .LVU260
1862:Drivers/CMSIS/Include/core_cm7.h ****   }
 994              		.loc 2 1862 28 is_stmt 0 view .LVU261
 995 0000 024B     		ldr	r3, .L63
 996 0002 D868     		ldr	r0, [r3, #12]
 997              	.LBE63:
 998              	.LBE62:
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 999              		.loc 1 373 1 view .LVU262
 1000 0004 C0F30220 		ubfx	r0, r0, #8, #3
 1001 0008 7047     		bx	lr
 1002              	.L64:
 1003 000a 00BF     		.align	2
 1004              	.L63:
 1005 000c 00ED00E0 		.word	-536810240
 1006              		.cfi_endproc
 1007              	.LFE152:
 1009              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 1010              		.align	1
 1011              		.global	HAL_NVIC_GetPriority
 1012              		.syntax unified
 1013              		.thumb
 1014              		.thumb_func
 1016              	HAL_NVIC_GetPriority:
 1017              	.LVL58:
 1018              	.LFB153:
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 86


 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param   PriorityGroup the priority grouping bits length.
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      4 bits for subpriority
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      3 bits for subpriority
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      2 bits for subpriority
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      1 bits for subpriority
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      0 bits for subpriority
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  pPreemptPriority Pointer on the Preemptive priority value (starting from 0).
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  pSubPriority Pointer on the Subpriority value (starting from 0).
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1019              		.loc 1 397 1 is_stmt 1 view -0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              		.loc 1 397 1 is_stmt 0 view .LVU264
 1024 0000 70B5     		push	{r4, r5, r6, lr}
 1025              		.cfi_def_cfa_offset 16
 1026              		.cfi_offset 4, -16
 1027              		.cfi_offset 5, -12
 1028              		.cfi_offset 6, -8
 1029              		.cfi_offset 14, -4
 1030 0002 0C46     		mov	r4, r1
 1031 0004 1546     		mov	r5, r2
 1032 0006 1E46     		mov	r6, r3
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 1033              		.loc 1 399 3 is_stmt 1 view .LVU265
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 1034              		.loc 1 401 3 view .LVU266
 1035 0008 FFF7FEFF 		bl	__NVIC_GetPriority
 1036              	.LVL59:
 1037              		.loc 1 401 3 is_stmt 0 discriminator 1 view .LVU267
 1038 000c 3346     		mov	r3, r6
 1039 000e 2A46     		mov	r2, r5
 1040 0010 2146     		mov	r1, r4
 1041 0012 FFF7FEFF 		bl	NVIC_DecodePriority
 1042              	.LVL60:
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1043              		.loc 1 402 1 view .LVU268
 1044 0016 70BD     		pop	{r4, r5, r6, pc}
 1045              		.loc 1 402 1 view .LVU269
 1046              		.cfi_endproc
 1047              	.LFE153:
 1049              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 1050              		.align	1
 1051              		.global	HAL_NVIC_SetPendingIRQ
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 87


 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1056              	HAL_NVIC_SetPendingIRQ:
 1057              	.LVL61:
 1058              	.LFB154:
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1059              		.loc 1 412 1 is_stmt 1 view -0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1064              		.loc 1 414 3 view .LVU271
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set interrupt pending */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 1065              		.loc 1 417 3 view .LVU272
 1066              	.LBB64:
 1067              	.LBI64:
1941:Drivers/CMSIS/Include/core_cm7.h ****   {
 1068              		.loc 2 1941 24 view .LVU273
 1069              	.LBB65:
1943:Drivers/CMSIS/Include/core_cm7.h ****     {
 1070              		.loc 2 1943 5 view .LVU274
1943:Drivers/CMSIS/Include/core_cm7.h ****     {
 1071              		.loc 2 1943 8 is_stmt 0 view .LVU275
 1072 0000 0028     		cmp	r0, #0
1943:Drivers/CMSIS/Include/core_cm7.h ****     {
 1073              		.loc 2 1943 8 view .LVU276
 1074 0002 08DB     		blt	.L67
1945:Drivers/CMSIS/Include/core_cm7.h ****     }
 1075              		.loc 2 1945 7 is_stmt 1 view .LVU277
1945:Drivers/CMSIS/Include/core_cm7.h ****     }
 1076              		.loc 2 1945 83 is_stmt 0 view .LVU278
 1077 0004 00F01F02 		and	r2, r0, #31
1945:Drivers/CMSIS/Include/core_cm7.h ****     }
 1078              		.loc 2 1945 36 view .LVU279
 1079 0008 4009     		lsrs	r0, r0, #5
 1080              	.LVL62:
1945:Drivers/CMSIS/Include/core_cm7.h ****     }
 1081              		.loc 2 1945 47 view .LVU280
 1082 000a 0123     		movs	r3, #1
 1083 000c 9340     		lsls	r3, r3, r2
1945:Drivers/CMSIS/Include/core_cm7.h ****     }
 1084              		.loc 2 1945 45 view .LVU281
 1085 000e 4030     		adds	r0, r0, #64
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 88


 1086 0010 014A     		ldr	r2, .L69
 1087 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 1088              	.LVL63:
 1089              	.L67:
1945:Drivers/CMSIS/Include/core_cm7.h ****     }
 1090              		.loc 2 1945 45 view .LVU282
 1091              	.LBE65:
 1092              	.LBE64:
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1093              		.loc 1 418 1 view .LVU283
 1094 0016 7047     		bx	lr
 1095              	.L70:
 1096              		.align	2
 1097              	.L69:
 1098 0018 00E100E0 		.word	-536813312
 1099              		.cfi_endproc
 1100              	.LFE154:
 1102              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 1103              		.align	1
 1104              		.global	HAL_NVIC_GetPendingIRQ
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1109              	HAL_NVIC_GetPendingIRQ:
 1110              	.LVL64:
 1111              	.LFB155:
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC 
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1112              		.loc 1 430 1 is_stmt 1 view -0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1117              		.loc 1 432 3 view .LVU285
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1118              		.loc 1 435 3 view .LVU286
 1119              	.LBB66:
 1120              	.LBI66:
1923:Drivers/CMSIS/Include/core_cm7.h ****   {
 1121              		.loc 2 1923 28 view .LVU287
 1122              	.LBB67:
1925:Drivers/CMSIS/Include/core_cm7.h ****     {
 1123              		.loc 2 1925 5 view .LVU288
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 89


1925:Drivers/CMSIS/Include/core_cm7.h ****     {
 1124              		.loc 2 1925 8 is_stmt 0 view .LVU289
 1125 0000 0028     		cmp	r0, #0
1925:Drivers/CMSIS/Include/core_cm7.h ****     {
 1126              		.loc 2 1925 8 view .LVU290
 1127 0002 0BDB     		blt	.L73
1927:Drivers/CMSIS/Include/core_cm7.h ****     }
 1128              		.loc 2 1927 7 is_stmt 1 view .LVU291
1927:Drivers/CMSIS/Include/core_cm7.h ****     }
 1129              		.loc 2 1927 57 is_stmt 0 view .LVU292
 1130 0004 4309     		lsrs	r3, r0, #5
1927:Drivers/CMSIS/Include/core_cm7.h ****     }
 1131              		.loc 2 1927 38 view .LVU293
 1132 0006 4033     		adds	r3, r3, #64
 1133 0008 054A     		ldr	r2, .L74
 1134 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1927:Drivers/CMSIS/Include/core_cm7.h ****     }
 1135              		.loc 2 1927 94 view .LVU294
 1136 000e 00F01F00 		and	r0, r0, #31
 1137              	.LVL65:
1927:Drivers/CMSIS/Include/core_cm7.h ****     }
 1138              		.loc 2 1927 106 view .LVU295
 1139 0012 23FA00F0 		lsr	r0, r3, r0
1927:Drivers/CMSIS/Include/core_cm7.h ****     }
 1140              		.loc 2 1927 15 view .LVU296
 1141 0016 00F00100 		and	r0, r0, #1
 1142 001a 7047     		bx	lr
 1143              	.L73:
1931:Drivers/CMSIS/Include/core_cm7.h ****     }
 1144              		.loc 2 1931 14 view .LVU297
 1145 001c 0020     		movs	r0, #0
 1146              	.LVL66:
1931:Drivers/CMSIS/Include/core_cm7.h ****     }
 1147              		.loc 2 1931 14 view .LVU298
 1148              	.LBE67:
 1149              	.LBE66:
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1150              		.loc 1 436 1 view .LVU299
 1151 001e 7047     		bx	lr
 1152              	.L75:
 1153              		.align	2
 1154              	.L74:
 1155 0020 00E100E0 		.word	-536813312
 1156              		.cfi_endproc
 1157              	.LFE155:
 1159              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1160              		.align	1
 1161              		.global	HAL_NVIC_ClearPendingIRQ
 1162              		.syntax unified
 1163              		.thumb
 1164              		.thumb_func
 1166              	HAL_NVIC_ClearPendingIRQ:
 1167              	.LVL67:
 1168              	.LFB156:
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 90


 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1169              		.loc 1 446 1 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1174              		.loc 1 448 3 view .LVU301
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Clear pending interrupt */
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1175              		.loc 1 451 3 view .LVU302
 1176              	.LBB68:
 1177              	.LBI68:
1955:Drivers/CMSIS/Include/core_cm7.h ****   {
 1178              		.loc 2 1955 24 view .LVU303
 1179              	.LBB69:
1957:Drivers/CMSIS/Include/core_cm7.h ****     {
 1180              		.loc 2 1957 5 view .LVU304
1957:Drivers/CMSIS/Include/core_cm7.h ****     {
 1181              		.loc 2 1957 8 is_stmt 0 view .LVU305
 1182 0000 0028     		cmp	r0, #0
1957:Drivers/CMSIS/Include/core_cm7.h ****     {
 1183              		.loc 2 1957 8 view .LVU306
 1184 0002 08DB     		blt	.L76
1959:Drivers/CMSIS/Include/core_cm7.h ****     }
 1185              		.loc 2 1959 7 is_stmt 1 view .LVU307
1959:Drivers/CMSIS/Include/core_cm7.h ****     }
 1186              		.loc 2 1959 83 is_stmt 0 view .LVU308
 1187 0004 00F01F02 		and	r2, r0, #31
1959:Drivers/CMSIS/Include/core_cm7.h ****     }
 1188              		.loc 2 1959 36 view .LVU309
 1189 0008 4009     		lsrs	r0, r0, #5
 1190              	.LVL68:
1959:Drivers/CMSIS/Include/core_cm7.h ****     }
 1191              		.loc 2 1959 47 view .LVU310
 1192 000a 0123     		movs	r3, #1
 1193 000c 9340     		lsls	r3, r3, r2
1959:Drivers/CMSIS/Include/core_cm7.h ****     }
 1194              		.loc 2 1959 45 view .LVU311
 1195 000e 6030     		adds	r0, r0, #96
 1196 0010 014A     		ldr	r2, .L78
 1197 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 1198              	.LVL69:
 1199              	.L76:
1959:Drivers/CMSIS/Include/core_cm7.h ****     }
 1200              		.loc 2 1959 45 view .LVU312
 1201              	.LBE69:
 1202              	.LBE68:
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 91


 1203              		.loc 1 452 1 view .LVU313
 1204 0016 7047     		bx	lr
 1205              	.L79:
 1206              		.align	2
 1207              	.L78:
 1208 0018 00E100E0 		.word	-536813312
 1209              		.cfi_endproc
 1210              	.LFE156:
 1212              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1213              		.align	1
 1214              		.global	HAL_NVIC_GetActive
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1219              	HAL_NVIC_GetActive:
 1220              	.LVL70:
 1221              	.LFB157:
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param IRQn External interrupt number
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1222              		.loc 1 463 1 is_stmt 1 view -0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              		@ link register save eliminated.
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 1227              		.loc 1 465 3 view .LVU315
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1228              		.loc 1 468 3 view .LVU316
 1229              	.LBB70:
 1230              	.LBI70:
1971:Drivers/CMSIS/Include/core_cm7.h ****   {
 1231              		.loc 2 1971 28 view .LVU317
 1232              	.LBB71:
1973:Drivers/CMSIS/Include/core_cm7.h ****     {
 1233              		.loc 2 1973 5 view .LVU318
1973:Drivers/CMSIS/Include/core_cm7.h ****     {
 1234              		.loc 2 1973 8 is_stmt 0 view .LVU319
 1235 0000 0028     		cmp	r0, #0
1973:Drivers/CMSIS/Include/core_cm7.h ****     {
 1236              		.loc 2 1973 8 view .LVU320
 1237 0002 0BDB     		blt	.L82
1975:Drivers/CMSIS/Include/core_cm7.h ****     }
 1238              		.loc 2 1975 7 is_stmt 1 view .LVU321
1975:Drivers/CMSIS/Include/core_cm7.h ****     }
 1239              		.loc 2 1975 57 is_stmt 0 view .LVU322
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 92


 1240 0004 4309     		lsrs	r3, r0, #5
1975:Drivers/CMSIS/Include/core_cm7.h ****     }
 1241              		.loc 2 1975 38 view .LVU323
 1242 0006 8033     		adds	r3, r3, #128
 1243 0008 054A     		ldr	r2, .L83
 1244 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1975:Drivers/CMSIS/Include/core_cm7.h ****     }
 1245              		.loc 2 1975 94 view .LVU324
 1246 000e 00F01F00 		and	r0, r0, #31
 1247              	.LVL71:
1975:Drivers/CMSIS/Include/core_cm7.h ****     }
 1248              		.loc 2 1975 106 view .LVU325
 1249 0012 23FA00F0 		lsr	r0, r3, r0
1975:Drivers/CMSIS/Include/core_cm7.h ****     }
 1250              		.loc 2 1975 15 view .LVU326
 1251 0016 00F00100 		and	r0, r0, #1
 1252 001a 7047     		bx	lr
 1253              	.L82:
1979:Drivers/CMSIS/Include/core_cm7.h ****     }
 1254              		.loc 2 1979 14 view .LVU327
 1255 001c 0020     		movs	r0, #0
 1256              	.LVL72:
1979:Drivers/CMSIS/Include/core_cm7.h ****     }
 1257              		.loc 2 1979 14 view .LVU328
 1258              	.LBE71:
 1259              	.LBE70:
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1260              		.loc 1 469 1 view .LVU329
 1261 001e 7047     		bx	lr
 1262              	.L84:
 1263              		.align	2
 1264              	.L83:
 1265 0020 00E100E0 		.word	-536813312
 1266              		.cfi_endproc
 1267              	.LFE157:
 1269              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1270              		.align	1
 1271              		.global	HAL_SYSTICK_CLKSourceConfig
 1272              		.syntax unified
 1273              		.thumb
 1274              		.thumb_func
 1276              	HAL_SYSTICK_CLKSourceConfig:
 1277              	.LVL73:
 1278              	.LFB158:
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1279              		.loc 1 480 1 is_stmt 1 view -0
 1280              		.cfi_startproc
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 93


 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 1283              		@ link register save eliminated.
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 1284              		.loc 1 482 3 view .LVU331
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1285              		.loc 1 483 3 view .LVU332
 1286              		.loc 1 483 6 is_stmt 0 view .LVU333
 1287 0000 0428     		cmp	r0, #4
 1288 0002 06D0     		beq	.L88
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   else
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 1289              		.loc 1 489 5 is_stmt 1 view .LVU334
 1290              		.loc 1 489 12 is_stmt 0 view .LVU335
 1291 0004 4FF0E022 		mov	r2, #-536813568
 1292 0008 1369     		ldr	r3, [r2, #16]
 1293              		.loc 1 489 19 view .LVU336
 1294 000a 23F00403 		bic	r3, r3, #4
 1295 000e 1361     		str	r3, [r2, #16]
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1296              		.loc 1 491 1 view .LVU337
 1297 0010 7047     		bx	lr
 1298              	.L88:
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 1299              		.loc 1 485 5 is_stmt 1 view .LVU338
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 1300              		.loc 1 485 12 is_stmt 0 view .LVU339
 1301 0012 4FF0E022 		mov	r2, #-536813568
 1302 0016 1369     		ldr	r3, [r2, #16]
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 1303              		.loc 1 485 19 view .LVU340
 1304 0018 43F00403 		orr	r3, r3, #4
 1305 001c 1361     		str	r3, [r2, #16]
 1306 001e 7047     		bx	lr
 1307              		.cfi_endproc
 1308              	.LFE158:
 1310              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1311              		.align	1
 1312              		.weak	HAL_SYSTICK_Callback
 1313              		.syntax unified
 1314              		.thumb
 1315              		.thumb_func
 1317              	HAL_SYSTICK_Callback:
 1318              	.LFB160:
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 94


 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1319              		.loc 1 507 1 is_stmt 1 view -0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 1323              		@ link register save eliminated.
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1324              		.loc 1 511 1 view .LVU342
 1325 0000 7047     		bx	lr
 1326              		.cfi_endproc
 1327              	.LFE160:
 1329              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1330              		.align	1
 1331              		.global	HAL_SYSTICK_IRQHandler
 1332              		.syntax unified
 1333              		.thumb
 1334              		.thumb_func
 1336              	HAL_SYSTICK_IRQHandler:
 1337              	.LFB159:
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1338              		.loc 1 498 1 view -0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342 0000 08B5     		push	{r3, lr}
 1343              		.cfi_def_cfa_offset 8
 1344              		.cfi_offset 3, -8
 1345              		.cfi_offset 14, -4
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1346              		.loc 1 499 3 view .LVU344
 1347 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 1348              	.LVL74:
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 1349              		.loc 1 500 1 is_stmt 0 view .LVU345
 1350 0006 08BD     		pop	{r3, pc}
 1351              		.cfi_endproc
 1352              	.LFE159:
 1354              		.text
 1355              	.Letext0:
 1356              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 1357              		.file 5 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 1358              		.file 6 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 1359              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 95


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_cortex.c
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:20     .text.__NVIC_DisableIRQ:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:25     .text.__NVIC_DisableIRQ:00000000 __NVIC_DisableIRQ
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:87     .text.__NVIC_DisableIRQ:00000020 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:92     .text.__NVIC_SetPriority:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:97     .text.__NVIC_SetPriority:00000000 __NVIC_SetPriority
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:139    .text.__NVIC_SetPriority:0000001c $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:145    .text.__NVIC_GetPriority:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:150    .text.__NVIC_GetPriority:00000000 __NVIC_GetPriority
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:185    .text.__NVIC_GetPriority:00000018 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:191    .text.NVIC_EncodePriority:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:196    .text.NVIC_EncodePriority:00000000 NVIC_EncodePriority
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:257    .text.NVIC_DecodePriority:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:262    .text.NVIC_DecodePriority:00000000 NVIC_DecodePriority
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:330    .text.__NVIC_SystemReset:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:335    .text.__NVIC_SystemReset:00000000 __NVIC_SystemReset
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:396    .text.__NVIC_SystemReset:0000001c $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:402    .text.HAL_NVIC_SetPriorityGrouping:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:408    .text.HAL_NVIC_SetPriorityGrouping:00000000 HAL_NVIC_SetPriorityGrouping
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:462    .text.HAL_NVIC_SetPriorityGrouping:0000001c $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:468    .text.HAL_NVIC_SetPriority:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:474    .text.HAL_NVIC_SetPriority:00000000 HAL_NVIC_SetPriority
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:523    .text.HAL_NVIC_SetPriority:0000001c $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:528    .text.HAL_NVIC_EnableIRQ:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:534    .text.HAL_NVIC_EnableIRQ:00000000 HAL_NVIC_EnableIRQ
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:575    .text.HAL_NVIC_EnableIRQ:00000018 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:580    .text.HAL_NVIC_DisableIRQ:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:586    .text.HAL_NVIC_DisableIRQ:00000000 HAL_NVIC_DisableIRQ
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:608    .text.HAL_NVIC_SystemReset:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:614    .text.HAL_NVIC_SystemReset:00000000 HAL_NVIC_SystemReset
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:632    .text.HAL_SYSTICK_Config:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:638    .text.HAL_SYSTICK_Config:00000000 HAL_SYSTICK_Config
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:703    .text.HAL_SYSTICK_Config:00000024 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:708    .text.HAL_MPU_Disable:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:714    .text.HAL_MPU_Disable:00000000 HAL_MPU_Disable
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:751    .text.HAL_MPU_Disable:00000018 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:756    .text.HAL_MPU_Enable:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:762    .text.HAL_MPU_Enable:00000000 HAL_MPU_Enable
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:816    .text.HAL_MPU_Enable:0000001c $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:821    .text.HAL_MPU_EnableRegion:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:827    .text.HAL_MPU_EnableRegion:00000000 HAL_MPU_EnableRegion
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:849    .text.HAL_MPU_EnableRegion:00000014 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:854    .text.HAL_MPU_DisableRegion:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:860    .text.HAL_MPU_DisableRegion:00000000 HAL_MPU_DisableRegion
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:882    .text.HAL_MPU_DisableRegion:00000014 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:887    .text.HAL_MPU_ConfigRegion:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:893    .text.HAL_MPU_ConfigRegion:00000000 HAL_MPU_ConfigRegion
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:970    .text.HAL_MPU_ConfigRegion:00000054 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:975    .text.HAL_NVIC_GetPriorityGrouping:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:981    .text.HAL_NVIC_GetPriorityGrouping:00000000 HAL_NVIC_GetPriorityGrouping
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1005   .text.HAL_NVIC_GetPriorityGrouping:0000000c $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1010   .text.HAL_NVIC_GetPriority:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1016   .text.HAL_NVIC_GetPriority:00000000 HAL_NVIC_GetPriority
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1050   .text.HAL_NVIC_SetPendingIRQ:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1056   .text.HAL_NVIC_SetPendingIRQ:00000000 HAL_NVIC_SetPendingIRQ
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1098   .text.HAL_NVIC_SetPendingIRQ:00000018 $d
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s 			page 96


/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1103   .text.HAL_NVIC_GetPendingIRQ:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1109   .text.HAL_NVIC_GetPendingIRQ:00000000 HAL_NVIC_GetPendingIRQ
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1155   .text.HAL_NVIC_GetPendingIRQ:00000020 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1160   .text.HAL_NVIC_ClearPendingIRQ:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1166   .text.HAL_NVIC_ClearPendingIRQ:00000000 HAL_NVIC_ClearPendingIRQ
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1208   .text.HAL_NVIC_ClearPendingIRQ:00000018 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1213   .text.HAL_NVIC_GetActive:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1219   .text.HAL_NVIC_GetActive:00000000 HAL_NVIC_GetActive
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1265   .text.HAL_NVIC_GetActive:00000020 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1270   .text.HAL_SYSTICK_CLKSourceConfig:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1276   .text.HAL_SYSTICK_CLKSourceConfig:00000000 HAL_SYSTICK_CLKSourceConfig
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1311   .text.HAL_SYSTICK_Callback:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1317   .text.HAL_SYSTICK_Callback:00000000 HAL_SYSTICK_Callback
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1330   .text.HAL_SYSTICK_IRQHandler:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccStitUT.s:1336   .text.HAL_SYSTICK_IRQHandler:00000000 HAL_SYSTICK_IRQHandler

NO UNDEFINED SYMBOLS
