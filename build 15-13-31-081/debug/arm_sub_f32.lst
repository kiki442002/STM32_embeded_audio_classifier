ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccqIfsyc.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"arm_sub_f32.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c"
  19              		.section	.text.arm_sub_f32,"ax",%progbits
  20              		.align	1
  21              		.global	arm_sub_f32
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	arm_sub_f32:
  27              	.LVL0:
  28              	.LFB135:
   1:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** /* ----------------------------------------------------------------------
   2:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * Project:      CMSIS DSP Library
   3:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * Title:        arm_sub_f32.c
   4:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * Description:  Floating-point vector subtraction.
   5:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  *
   6:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * $Date:        27. January 2017
   7:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * $Revision:    V.1.5.1
   8:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  *
   9:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * Target Processor: Cortex-M cores
  10:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * -------------------------------------------------------------------- */
  11:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** /*
  12:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  *
  14:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  *
  16:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * not use this file except in compliance with the License.
  18:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * You may obtain a copy of the License at
  19:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  *
  20:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  *
  22:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * See the License for the specific language governing permissions and
  26:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * limitations under the License.
  27:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  */
  28:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
  29:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** #include "arm_math.h"
  30:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccqIfsyc.s 			page 2


  31:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** /**
  32:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * @ingroup groupMath
  33:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  */
  34:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
  35:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** /**
  36:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * @defgroup BasicSub Vector Subtraction
  37:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  *
  38:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * Element-by-element subtraction of two vectors.
  39:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  *
  40:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * <pre>
  41:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  *     pDst[n] = pSrcA[n] - pSrcB[n],   0 <= n < blockSize.
  42:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * </pre>
  43:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  *
  44:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * There are separate functions for floating-point, Q7, Q15, and Q31 data types.
  45:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  */
  46:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
  47:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** /**
  48:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * @addtogroup BasicSub
  49:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * @{
  50:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  */
  51:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
  52:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
  53:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** /**
  54:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * @brief Floating-point vector subtraction.
  55:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * @param[in]       *pSrcA points to the first input vector
  56:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * @param[in]       *pSrcB points to the second input vector
  57:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * @param[out]      *pDst points to the output vector
  58:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * @param[in]       blockSize number of samples in each vector
  59:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  * @return none.
  60:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****  */
  61:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
  62:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** void arm_sub_f32(
  63:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   float32_t * pSrcA,
  64:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   float32_t * pSrcB,
  65:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   float32_t * pDst,
  66:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   uint32_t blockSize)
  67:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** {
  29              		.loc 1 67 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 67 1 is_stmt 0 view .LVU1
  35 0000 10B4     		push	{r4}
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 4, -4
  68:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  38              		.loc 1 68 3 is_stmt 1 view .LVU2
  69:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
  70:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** #if defined (ARM_MATH_DSP)
  71:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
  72:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** /* Run the below code for Cortex-M4 and Cortex-M3 */
  73:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   float32_t inA1, inA2, inA3, inA4;              /* temporary variables */
  39              		.loc 1 73 3 view .LVU3
  74:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   float32_t inB1, inB2, inB3, inB4;              /* temporary variables */
  40              		.loc 1 74 3 view .LVU4
  75:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccqIfsyc.s 			page 3


  76:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   /*loop Unrolling */
  77:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   blkCnt = blockSize >> 2U;
  41              		.loc 1 77 3 view .LVU5
  42              		.loc 1 77 10 is_stmt 0 view .LVU6
  43 0002 9C08     		lsrs	r4, r3, #2
  44              	.LVL1:
  78:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
  79:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  80:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  81:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   while (blkCnt > 0U)
  45              		.loc 1 81 3 is_stmt 1 view .LVU7
  46              		.loc 1 81 9 is_stmt 0 view .LVU8
  47 0004 23E0     		b	.L2
  48              	.L3:
  82:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   {
  83:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     /* C = A - B */
  84:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     /* Subtract and then store the results in the destination buffer. */
  85:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     /* Read 4 input samples from sourceA and sourceB */
  86:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     inA1 = *pSrcA;
  49              		.loc 1 86 5 is_stmt 1 view .LVU9
  50              		.loc 1 86 10 is_stmt 0 view .LVU10
  51 0006 90ED006A 		vldr.32	s12, [r0]
  52              	.LVL2:
  87:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     inB1 = *pSrcB;
  53              		.loc 1 87 5 is_stmt 1 view .LVU11
  54              		.loc 1 87 10 is_stmt 0 view .LVU12
  55 000a 91ED004A 		vldr.32	s8, [r1]
  56              	.LVL3:
  88:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     inA2 = *(pSrcA + 1);
  57              		.loc 1 88 5 is_stmt 1 view .LVU13
  58              		.loc 1 88 10 is_stmt 0 view .LVU14
  59 000e D0ED016A 		vldr.32	s13, [r0, #4]
  60              	.LVL4:
  89:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     inB2 = *(pSrcB + 1);
  61              		.loc 1 89 5 is_stmt 1 view .LVU15
  62              		.loc 1 89 10 is_stmt 0 view .LVU16
  63 0012 D1ED014A 		vldr.32	s9, [r1, #4]
  64              	.LVL5:
  90:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     inA3 = *(pSrcA + 2);
  65              		.loc 1 90 5 is_stmt 1 view .LVU17
  66              		.loc 1 90 10 is_stmt 0 view .LVU18
  67 0016 90ED027A 		vldr.32	s14, [r0, #8]
  68              	.LVL6:
  91:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     inB3 = *(pSrcB + 2);
  69              		.loc 1 91 5 is_stmt 1 view .LVU19
  70              		.loc 1 91 10 is_stmt 0 view .LVU20
  71 001a 91ED025A 		vldr.32	s10, [r1, #8]
  72              	.LVL7:
  92:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     inA4 = *(pSrcA + 3);
  73              		.loc 1 92 5 is_stmt 1 view .LVU21
  74              		.loc 1 92 10 is_stmt 0 view .LVU22
  75 001e D0ED037A 		vldr.32	s15, [r0, #12]
  76              	.LVL8:
  93:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     inB4 = *(pSrcB + 3);
  77              		.loc 1 93 5 is_stmt 1 view .LVU23
  78              		.loc 1 93 10 is_stmt 0 view .LVU24
  79 0022 D1ED035A 		vldr.32	s11, [r1, #12]
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccqIfsyc.s 			page 4


  80              	.LVL9:
  94:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
  95:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     /* dst = srcA - srcB */
  96:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     /* subtract and store the result */
  97:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     *pDst = inA1 - inB1;
  81              		.loc 1 97 5 is_stmt 1 view .LVU25
  82              		.loc 1 97 18 is_stmt 0 view .LVU26
  83 0026 36EE446A 		vsub.f32	s12, s12, s8
  84              	.LVL10:
  85              		.loc 1 97 11 view .LVU27
  86 002a 82ED006A 		vstr.32	s12, [r2]
  87              	.LVL11:
  98:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     *(pDst + 1) = inA2 - inB2;
  88              		.loc 1 98 5 is_stmt 1 view .LVU28
  89              		.loc 1 98 24 is_stmt 0 view .LVU29
  90 002e 76EEE46A 		vsub.f32	s13, s13, s9
  91              	.LVL12:
  92              		.loc 1 98 17 view .LVU30
  93 0032 C2ED016A 		vstr.32	s13, [r2, #4]
  99:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     *(pDst + 2) = inA3 - inB3;
  94              		.loc 1 99 5 is_stmt 1 view .LVU31
  95              		.loc 1 99 24 is_stmt 0 view .LVU32
  96 0036 37EE457A 		vsub.f32	s14, s14, s10
  97              	.LVL13:
  98              		.loc 1 99 17 view .LVU33
  99 003a 82ED027A 		vstr.32	s14, [r2, #8]
 100:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     *(pDst + 3) = inA4 - inB4;
 100              		.loc 1 100 5 is_stmt 1 view .LVU34
 101              		.loc 1 100 24 is_stmt 0 view .LVU35
 102 003e 77EEE57A 		vsub.f32	s15, s15, s11
 103              	.LVL14:
 104              		.loc 1 100 17 view .LVU36
 105 0042 C2ED037A 		vstr.32	s15, [r2, #12]
 101:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
 102:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
 103:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     /* Update pointers to process next sampels */
 104:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     pSrcA += 4U;
 106              		.loc 1 104 5 is_stmt 1 view .LVU37
 107              		.loc 1 104 11 is_stmt 0 view .LVU38
 108 0046 1030     		adds	r0, r0, #16
 109              	.LVL15:
 105:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     pSrcB += 4U;
 110              		.loc 1 105 5 is_stmt 1 view .LVU39
 111              		.loc 1 105 11 is_stmt 0 view .LVU40
 112 0048 1031     		adds	r1, r1, #16
 113              	.LVL16:
 106:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     pDst += 4U;
 114              		.loc 1 106 5 is_stmt 1 view .LVU41
 115              		.loc 1 106 10 is_stmt 0 view .LVU42
 116 004a 1032     		adds	r2, r2, #16
 117              	.LVL17:
 107:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
 108:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     /* Decrement the loop counter */
 109:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     blkCnt--;
 118              		.loc 1 109 5 is_stmt 1 view .LVU43
 119              		.loc 1 109 11 is_stmt 0 view .LVU44
 120 004c 013C     		subs	r4, r4, #1
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccqIfsyc.s 			page 5


 121              	.LVL18:
 122              	.L2:
  81:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   {
 123              		.loc 1 81 17 is_stmt 1 view .LVU45
 124 004e 002C     		cmp	r4, #0
 125 0050 D9D1     		bne	.L3
 110:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   }
 111:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
 112:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 113:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****    ** No loop unrolling is used. */
 114:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   blkCnt = blockSize % 0x4U;
 126              		.loc 1 114 3 view .LVU46
 127              		.loc 1 114 10 is_stmt 0 view .LVU47
 128 0052 03F00303 		and	r3, r3, #3
 129              	.LVL19:
 115:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
 116:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** #else
 117:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
 118:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   /* Run the below code for Cortex-M0 */
 119:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
 120:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   /* Initialize blkCnt with number of samples */
 121:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   blkCnt = blockSize;
 122:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
 123:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 124:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
 125:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   while (blkCnt > 0U)
 130              		.loc 1 125 3 is_stmt 1 view .LVU48
 131              		.loc 1 125 9 is_stmt 0 view .LVU49
 132 0056 08E0     		b	.L4
 133              	.L5:
 126:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   {
 127:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     /* C = A - B */
 128:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     /* Subtract and then store the results in the destination buffer. */
 129:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     *pDst++ = (*pSrcA++) - (*pSrcB++);
 134              		.loc 1 129 5 is_stmt 1 view .LVU50
 135              	.LVL20:
 136              		.loc 1 129 16 is_stmt 0 view .LVU51
 137 0058 F0EC017A 		vldmia.32	r0!, {s15}
 138              	.LVL21:
 139              		.loc 1 129 29 view .LVU52
 140 005c B1EC017A 		vldmia.32	r1!, {s14}
 141              	.LVL22:
 142              		.loc 1 129 26 view .LVU53
 143 0060 77EEC77A 		vsub.f32	s15, s15, s14
 144              		.loc 1 129 13 view .LVU54
 145 0064 E2EC017A 		vstmia.32	r2!, {s15}
 146              	.LVL23:
 130:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** 
 131:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     /* Decrement the loop counter */
 132:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****     blkCnt--;
 147              		.loc 1 132 5 is_stmt 1 view .LVU55
 148              		.loc 1 132 11 is_stmt 0 view .LVU56
 149 0068 013B     		subs	r3, r3, #1
 150              	.LVL24:
 151              	.L4:
 125:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   {
 152              		.loc 1 125 17 is_stmt 1 view .LVU57
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccqIfsyc.s 			page 6


 153 006a 002B     		cmp	r3, #0
 154 006c F4D1     		bne	.L5
 133:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c ****   }
 134:Drivers/CMSIS/DSP/Source/BasicMathFunctions/arm_sub_f32.c **** }
 155              		.loc 1 134 1 is_stmt 0 view .LVU58
 156 006e 5DF8044B 		ldr	r4, [sp], #4
 157              		.cfi_restore 4
 158              		.cfi_def_cfa_offset 0
 159 0072 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE135:
 163              		.text
 164              	.Letext0:
 165              		.file 2 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 166              		.file 3 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 167              		.file 4 "Drivers/CMSIS/DSP/Include/arm_math.h"
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccqIfsyc.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 arm_sub_f32.c
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccqIfsyc.s:20     .text.arm_sub_f32:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccqIfsyc.s:26     .text.arm_sub_f32:00000000 arm_sub_f32

NO UNDEFINED SYMBOLS
