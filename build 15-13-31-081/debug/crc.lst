ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"crc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/crc.c"
  19              		.section	.text.MX_CRC_Init,"ax",%progbits
  20              		.align	1
  21              		.global	MX_CRC_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_CRC_Init:
  27              	.LFB144:
   1:Core/Src/crc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/crc.c **** /**
   3:Core/Src/crc.c ****   ******************************************************************************
   4:Core/Src/crc.c ****   * @file    crc.c
   5:Core/Src/crc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/crc.c ****   *          of the CRC instances.
   7:Core/Src/crc.c ****   ******************************************************************************
   8:Core/Src/crc.c ****   * @attention
   9:Core/Src/crc.c ****   *
  10:Core/Src/crc.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/crc.c ****   * All rights reserved.
  12:Core/Src/crc.c ****   *
  13:Core/Src/crc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/crc.c ****   * in the root directory of this software component.
  15:Core/Src/crc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/crc.c ****   *
  17:Core/Src/crc.c ****   ******************************************************************************
  18:Core/Src/crc.c ****   */
  19:Core/Src/crc.c **** /* USER CODE END Header */
  20:Core/Src/crc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/crc.c **** #include "crc.h"
  22:Core/Src/crc.c **** 
  23:Core/Src/crc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/crc.c **** 
  25:Core/Src/crc.c **** /* USER CODE END 0 */
  26:Core/Src/crc.c **** 
  27:Core/Src/crc.c **** CRC_HandleTypeDef hcrc;
  28:Core/Src/crc.c **** 
  29:Core/Src/crc.c **** /* CRC init function */
  30:Core/Src/crc.c **** void MX_CRC_Init(void)
  31:Core/Src/crc.c **** {
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s 			page 2


  28              		.loc 1 31 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  32:Core/Src/crc.c **** 
  33:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_Init 0 */
  34:Core/Src/crc.c **** 
  35:Core/Src/crc.c ****   /* USER CODE END CRC_Init 0 */
  36:Core/Src/crc.c **** 
  37:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_Init 1 */
  38:Core/Src/crc.c **** 
  39:Core/Src/crc.c ****   /* USER CODE END CRC_Init 1 */
  40:Core/Src/crc.c ****   hcrc.Instance = CRC;
  36              		.loc 1 40 3 view .LVU1
  37              		.loc 1 40 17 is_stmt 0 view .LVU2
  38 0002 0848     		ldr	r0, .L5
  39 0004 084B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  41:Core/Src/crc.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
  41              		.loc 1 41 3 is_stmt 1 view .LVU3
  42              		.loc 1 41 34 is_stmt 0 view .LVU4
  43 0008 0023     		movs	r3, #0
  44 000a 0371     		strb	r3, [r0, #4]
  42:Core/Src/crc.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
  45              		.loc 1 42 3 is_stmt 1 view .LVU5
  46              		.loc 1 42 33 is_stmt 0 view .LVU6
  47 000c 4371     		strb	r3, [r0, #5]
  43:Core/Src/crc.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
  48              		.loc 1 43 3 is_stmt 1 view .LVU7
  49              		.loc 1 43 36 is_stmt 0 view .LVU8
  50 000e 4361     		str	r3, [r0, #20]
  44:Core/Src/crc.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
  51              		.loc 1 44 3 is_stmt 1 view .LVU9
  52              		.loc 1 44 37 is_stmt 0 view .LVU10
  53 0010 8361     		str	r3, [r0, #24]
  45:Core/Src/crc.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
  54              		.loc 1 45 3 is_stmt 1 view .LVU11
  55              		.loc 1 45 24 is_stmt 0 view .LVU12
  56 0012 0123     		movs	r3, #1
  57 0014 0362     		str	r3, [r0, #32]
  46:Core/Src/crc.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
  58              		.loc 1 46 3 is_stmt 1 view .LVU13
  59              		.loc 1 46 7 is_stmt 0 view .LVU14
  60 0016 FFF7FEFF 		bl	HAL_CRC_Init
  61              	.LVL0:
  62              		.loc 1 46 6 discriminator 1 view .LVU15
  63 001a 00B9     		cbnz	r0, .L4
  64              	.L1:
  47:Core/Src/crc.c ****   {
  48:Core/Src/crc.c ****     Error_Handler();
  49:Core/Src/crc.c ****   }
  50:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_Init 2 */
  51:Core/Src/crc.c **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s 			page 3


  52:Core/Src/crc.c ****   /* USER CODE END CRC_Init 2 */
  53:Core/Src/crc.c **** 
  54:Core/Src/crc.c **** }
  65              		.loc 1 54 1 view .LVU16
  66 001c 08BD     		pop	{r3, pc}
  67              	.L4:
  48:Core/Src/crc.c ****   }
  68              		.loc 1 48 5 is_stmt 1 view .LVU17
  69 001e FFF7FEFF 		bl	Error_Handler
  70              	.LVL1:
  71              		.loc 1 54 1 is_stmt 0 view .LVU18
  72 0022 FBE7     		b	.L1
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 0024 00000000 		.word	hcrc
  77 0028 00300240 		.word	1073885184
  78              		.cfi_endproc
  79              	.LFE144:
  81              		.section	.text.HAL_CRC_MspInit,"ax",%progbits
  82              		.align	1
  83              		.global	HAL_CRC_MspInit
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  88              	HAL_CRC_MspInit:
  89              	.LVL2:
  90              	.LFB145:
  55:Core/Src/crc.c **** 
  56:Core/Src/crc.c **** void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
  57:Core/Src/crc.c **** {
  91              		.loc 1 57 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 8
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  58:Core/Src/crc.c **** 
  59:Core/Src/crc.c ****   if(crcHandle->Instance==CRC)
  96              		.loc 1 59 3 view .LVU20
  97              		.loc 1 59 15 is_stmt 0 view .LVU21
  98 0000 0268     		ldr	r2, [r0]
  99              		.loc 1 59 5 view .LVU22
 100 0002 094B     		ldr	r3, .L14
 101 0004 9A42     		cmp	r2, r3
 102 0006 00D0     		beq	.L13
 103 0008 7047     		bx	lr
 104              	.L13:
  57:Core/Src/crc.c **** 
 105              		.loc 1 57 1 view .LVU23
 106 000a 82B0     		sub	sp, sp, #8
 107              		.cfi_def_cfa_offset 8
  60:Core/Src/crc.c ****   {
  61:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 0 */
  62:Core/Src/crc.c **** 
  63:Core/Src/crc.c ****   /* USER CODE END CRC_MspInit 0 */
  64:Core/Src/crc.c ****     /* CRC clock enable */
  65:Core/Src/crc.c ****     __HAL_RCC_CRC_CLK_ENABLE();
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s 			page 4


 108              		.loc 1 65 5 is_stmt 1 view .LVU24
 109              	.LBB2:
 110              		.loc 1 65 5 view .LVU25
 111              		.loc 1 65 5 view .LVU26
 112 000c 03F50063 		add	r3, r3, #2048
 113 0010 1A6B     		ldr	r2, [r3, #48]
 114 0012 42F48052 		orr	r2, r2, #4096
 115 0016 1A63     		str	r2, [r3, #48]
 116              		.loc 1 65 5 view .LVU27
 117 0018 1B6B     		ldr	r3, [r3, #48]
 118 001a 03F48053 		and	r3, r3, #4096
 119 001e 0193     		str	r3, [sp, #4]
 120              		.loc 1 65 5 view .LVU28
 121 0020 019B     		ldr	r3, [sp, #4]
 122              	.LBE2:
 123              		.loc 1 65 5 discriminator 1 view .LVU29
  66:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspInit 1 */
  67:Core/Src/crc.c **** 
  68:Core/Src/crc.c ****   /* USER CODE END CRC_MspInit 1 */
  69:Core/Src/crc.c ****   }
  70:Core/Src/crc.c **** }
 124              		.loc 1 70 1 is_stmt 0 view .LVU30
 125 0022 02B0     		add	sp, sp, #8
 126              		.cfi_def_cfa_offset 0
 127              		@ sp needed
 128 0024 7047     		bx	lr
 129              	.L15:
 130 0026 00BF     		.align	2
 131              	.L14:
 132 0028 00300240 		.word	1073885184
 133              		.cfi_endproc
 134              	.LFE145:
 136              		.section	.text.HAL_CRC_MspDeInit,"ax",%progbits
 137              		.align	1
 138              		.global	HAL_CRC_MspDeInit
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	HAL_CRC_MspDeInit:
 144              	.LVL3:
 145              	.LFB146:
  71:Core/Src/crc.c **** 
  72:Core/Src/crc.c **** void HAL_CRC_MspDeInit(CRC_HandleTypeDef* crcHandle)
  73:Core/Src/crc.c **** {
 146              		.loc 1 73 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
  74:Core/Src/crc.c **** 
  75:Core/Src/crc.c ****   if(crcHandle->Instance==CRC)
 151              		.loc 1 75 3 view .LVU32
 152              		.loc 1 75 15 is_stmt 0 view .LVU33
 153 0000 0268     		ldr	r2, [r0]
 154              		.loc 1 75 5 view .LVU34
 155 0002 054B     		ldr	r3, .L19
 156 0004 9A42     		cmp	r2, r3
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s 			page 5


 157 0006 00D0     		beq	.L18
 158              	.L16:
  76:Core/Src/crc.c ****   {
  77:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspDeInit 0 */
  78:Core/Src/crc.c **** 
  79:Core/Src/crc.c ****   /* USER CODE END CRC_MspDeInit 0 */
  80:Core/Src/crc.c ****     /* Peripheral clock disable */
  81:Core/Src/crc.c ****     __HAL_RCC_CRC_CLK_DISABLE();
  82:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspDeInit 1 */
  83:Core/Src/crc.c **** 
  84:Core/Src/crc.c ****   /* USER CODE END CRC_MspDeInit 1 */
  85:Core/Src/crc.c ****   }
  86:Core/Src/crc.c **** }
 159              		.loc 1 86 1 view .LVU35
 160 0008 7047     		bx	lr
 161              	.L18:
  81:Core/Src/crc.c ****   /* USER CODE BEGIN CRC_MspDeInit 1 */
 162              		.loc 1 81 5 is_stmt 1 view .LVU36
 163 000a 044A     		ldr	r2, .L19+4
 164 000c 136B     		ldr	r3, [r2, #48]
 165 000e 23F48053 		bic	r3, r3, #4096
 166 0012 1363     		str	r3, [r2, #48]
 167              		.loc 1 86 1 is_stmt 0 view .LVU37
 168 0014 F8E7     		b	.L16
 169              	.L20:
 170 0016 00BF     		.align	2
 171              	.L19:
 172 0018 00300240 		.word	1073885184
 173 001c 00380240 		.word	1073887232
 174              		.cfi_endproc
 175              	.LFE146:
 177              		.global	hcrc
 178              		.section	.bss.hcrc,"aw",%nobits
 179              		.align	2
 182              	hcrc:
 183 0000 00000000 		.space	36
 183      00000000 
 183      00000000 
 183      00000000 
 183      00000000 
 184              		.text
 185              	.Letext0:
 186              		.file 2 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 187              		.file 3 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 188              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 189              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 190              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 191              		.file 7 "Core/Inc/crc.h"
 192              		.file 8 "Core/Inc/main.h"
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 crc.c
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:20     .text.MX_CRC_Init:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:26     .text.MX_CRC_Init:00000000 MX_CRC_Init
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:76     .text.MX_CRC_Init:00000024 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:182    .bss.hcrc:00000000 hcrc
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:82     .text.HAL_CRC_MspInit:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:88     .text.HAL_CRC_MspInit:00000000 HAL_CRC_MspInit
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:132    .text.HAL_CRC_MspInit:00000028 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:137    .text.HAL_CRC_MspDeInit:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:143    .text.HAL_CRC_MspDeInit:00000000 HAL_CRC_MspDeInit
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:172    .text.HAL_CRC_MspDeInit:00000018 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccpJbggY.s:179    .bss.hcrc:00000000 $d

UNDEFINED SYMBOLS
HAL_CRC_Init
Error_Handler
