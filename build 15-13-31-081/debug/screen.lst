ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"screen.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/screen.c"
  19              		.section	.text.Draw_Play_Button,"ax",%progbits
  20              		.align	1
  21              		.global	Draw_Play_Button
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Draw_Play_Button:
  27              	.LFB145:
   1:Core/Src/screen.c **** #include "screen.h"
   2:Core/Src/screen.c **** 
   3:Core/Src/screen.c **** void print_Menu_Interface(void)
   4:Core/Src/screen.c **** {
   5:Core/Src/screen.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
   6:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
   7:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font24);
   8:Core/Src/screen.c ****     BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
   9:Core/Src/screen.c **** 
  10:Core/Src/screen.c ****     // Première fonctionnalité
  11:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X, START_Y, BUTTON_WIDTH_HEIGHT, BUTTON_WIDTH_HEIGHT);
  12:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 1, START_Y + 1, BUTTON_WIDTH_HEIGHT, BUTTON_WIDTH_HEIGHT);
  13:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 2, START_Y + 2, BUTTON_WIDTH_HEIGHT, BUTTON_WIDTH_HEIGHT);
  14:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 3, START_Y + 3, BUTTON_WIDTH_HEIGHT, BUTTON_WIDTH_HEIGHT);
  15:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(START_X - 15, START_Y + BUTTON_WIDTH_HEIGHT + 20, (uint8_t *)"Play/Paus
  16:Core/Src/screen.c ****     Draw_Play_Button();
  17:Core/Src/screen.c **** 
  18:Core/Src/screen.c ****     // Deuxième fonctionnalité
  19:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + SPACE_BETWEEN_BUTTONS, START_Y, BUTTON_WIDTH_HEIGHT, BUTTON_WIDTH_HE
  20:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 1 + SPACE_BETWEEN_BUTTONS, START_Y + 1, BUTTON_WIDTH_HEIGHT, BUTTON_
  21:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 2 + SPACE_BETWEEN_BUTTONS, START_Y + 2, BUTTON_WIDTH_HEIGHT, BUTTON_
  22:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 3 + SPACE_BETWEEN_BUTTONS, START_Y + 3, BUTTON_WIDTH_HEIGHT, BUTTON_
  23:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(START_X + SPACE_BETWEEN_BUTTONS - 2, START_Y + BUTTON_WIDTH_HEIGHT + 20
  24:Core/Src/screen.c ****     Draw_Output_Button();
  25:Core/Src/screen.c **** 
  26:Core/Src/screen.c ****     // Troisième fonctionnalité
  27:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + SPACE_BETWEEN_BUTTONS * 2, START_Y, BUTTON_WIDTH_HEIGHT, BUTTON_WIDT
  28:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 1 + SPACE_BETWEEN_BUTTONS * 2, START_Y + 1, BUTTON_WIDTH_HEIGHT, BUT
  29:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 2 + SPACE_BETWEEN_BUTTONS * 2, START_Y + 2, BUTTON_WIDTH_HEIGHT, BUT
  30:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 3 + SPACE_BETWEEN_BUTTONS * 2, START_Y + 3, BUTTON_WIDTH_HEIGHT, BUT
  31:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(START_X + SPACE_BETWEEN_BUTTONS * 2 + 20, START_Y + BUTTON_WIDTH_HEIGHT
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 2


  32:Core/Src/screen.c ****     Draw_SD_Button();
  33:Core/Src/screen.c **** 
  34:Core/Src/screen.c ****     // Quatrième fonctionnalité
  35:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + SPACE_BETWEEN_BUTTONS * 3, START_Y, BUTTON_WIDTH_HEIGHT, BUTTON_WIDT
  36:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 1 + SPACE_BETWEEN_BUTTONS * 3, START_Y + 1, BUTTON_WIDTH_HEIGHT, BUT
  37:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 2 + SPACE_BETWEEN_BUTTONS * 3, START_Y + 2, BUTTON_WIDTH_HEIGHT, BUT
  38:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 3 + SPACE_BETWEEN_BUTTONS * 3, START_Y + 3, BUTTON_WIDTH_HEIGHT, BUT
  39:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(START_X + SPACE_BETWEEN_BUTTONS * 3 + 60, START_Y + BUTTON_WIDTH_HEIGHT
  40:Core/Src/screen.c ****     Draw_AI_Button();
  41:Core/Src/screen.c **** 
  42:Core/Src/screen.c ****     // Ligne pour Luminosité
  43:Core/Src/screen.c ****     BSP_LCD_DrawRect(20, BSP_LCD_GetYSize() - 40, BSP_LCD_GetXSize() / 2 - 40, 20);
  44:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font20);
  45:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Luminosite", LEFT_MODE);
  46:Core/Src/screen.c **** 
  47:Core/Src/screen.c ****     // Ligne pour Volume
  48:Core/Src/screen.c ****     BSP_LCD_DrawRect(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 40, BSP_LCD_GetXSize() / 2 -
  49:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
  50:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font24);
  51:Core/Src/screen.c **** 
  52:Core/Src/screen.c ****     // Rectangle central des logs
  53:Core/Src/screen.c ****     BSP_LCD_DrawRect(20, START_Y + BUTTON_WIDTH_HEIGHT + 50, BSP_LCD_GetXSize() - 40, BSP_LCD_GetYS
  54:Core/Src/screen.c **** }
  55:Core/Src/screen.c **** 
  56:Core/Src/screen.c **** void Draw_Play_Button(void)
  57:Core/Src/screen.c **** {
  28              		.loc 1 57 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  58:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
  37              		.loc 1 58 5 view .LVU1
  38 0004 4FF0FF30 		mov	r0, #-1
  39 0008 FFF7FEFF 		bl	BSP_LCD_SetTextColor
  40              	.LVL0:
  59:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 20, START_Y + 20, BUTTON_WIDTH_HEIGHT - 40, BUTTON_WIDTH_HEIGHT - 40
  41              		.loc 1 59 5 view .LVU2
  42 000c 6423     		movs	r3, #100
  43 000e 1A46     		mov	r2, r3
  44 0010 3C21     		movs	r1, #60
  45 0012 0846     		mov	r0, r1
  46 0014 FFF7FEFF 		bl	BSP_LCD_DrawRect
  47              	.LVL1:
  60:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
  48              		.loc 1 60 5 view .LVU3
  49 0018 4FF07F40 		mov	r0, #-16777216
  50 001c FFF7FEFF 		bl	BSP_LCD_SetTextColor
  51              	.LVL2:
  61:Core/Src/screen.c ****     FillTriangle(START_X + 43, START_X + 43, START_X + BUTTON_WIDTH_HEIGHT - 40 - 3, START_Y + 43, 
  52              		.loc 1 61 5 view .LVU4
  53 0020 6E23     		movs	r3, #110
  54 0022 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 3


  55 0024 8922     		movs	r2, #137
  56 0026 0092     		str	r2, [sp]
  57 0028 5323     		movs	r3, #83
  58 002a 1946     		mov	r1, r3
  59 002c 1846     		mov	r0, r3
  60 002e FFF7FEFF 		bl	FillTriangle
  61              	.LVL3:
  62:Core/Src/screen.c **** }
  62              		.loc 1 62 1 is_stmt 0 view .LVU5
  63 0032 03B0     		add	sp, sp, #12
  64              		.cfi_def_cfa_offset 4
  65              		@ sp needed
  66 0034 5DF804FB 		ldr	pc, [sp], #4
  67              		.cfi_endproc
  68              	.LFE145:
  70              		.section	.text.Draw_Pause_Button,"ax",%progbits
  71              		.align	1
  72              		.global	Draw_Pause_Button
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	Draw_Pause_Button:
  78              	.LFB146:
  63:Core/Src/screen.c **** 
  64:Core/Src/screen.c **** void Draw_Pause_Button(void)
  65:Core/Src/screen.c **** {
  79              		.loc 1 65 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 08B5     		push	{r3, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 3, -8
  86              		.cfi_offset 14, -4
  66:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
  87              		.loc 1 66 5 view .LVU7
  88 0002 4FF0FF30 		mov	r0, #-1
  89 0006 FFF7FEFF 		bl	BSP_LCD_SetTextColor
  90              	.LVL4:
  67:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 20, START_Y + 20, BUTTON_WIDTH_HEIGHT - 40, BUTTON_WIDTH_HEIGHT - 40
  91              		.loc 1 67 5 view .LVU8
  92 000a 6423     		movs	r3, #100
  93 000c 1A46     		mov	r2, r3
  94 000e 3C21     		movs	r1, #60
  95 0010 0846     		mov	r0, r1
  96 0012 FFF7FEFF 		bl	BSP_LCD_DrawRect
  97              	.LVL5:
  68:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
  98              		.loc 1 68 5 view .LVU9
  99 0016 4FF07F40 		mov	r0, #-16777216
 100 001a FFF7FEFF 		bl	BSP_LCD_SetTextColor
 101              	.LVL6:
  69:Core/Src/screen.c ****     BSP_LCD_FillRect(START_X + 43, START_Y + 43, 20, BUTTON_WIDTH_HEIGHT - 86);
 102              		.loc 1 69 5 view .LVU10
 103 001e 3623     		movs	r3, #54
 104 0020 1422     		movs	r2, #20
 105 0022 5321     		movs	r1, #83
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 4


 106 0024 0846     		mov	r0, r1
 107 0026 FFF7FEFF 		bl	BSP_LCD_FillRect
 108              	.LVL7:
  70:Core/Src/screen.c ****     BSP_LCD_FillRect(START_X + 43 + 20 + 13, START_Y + 43, 20, BUTTON_WIDTH_HEIGHT - 86);
 109              		.loc 1 70 5 view .LVU11
 110 002a 3623     		movs	r3, #54
 111 002c 1422     		movs	r2, #20
 112 002e 5321     		movs	r1, #83
 113 0030 7420     		movs	r0, #116
 114 0032 FFF7FEFF 		bl	BSP_LCD_FillRect
 115              	.LVL8:
  71:Core/Src/screen.c **** }
 116              		.loc 1 71 1 is_stmt 0 view .LVU12
 117 0036 08BD     		pop	{r3, pc}
 118              		.cfi_endproc
 119              	.LFE146:
 121              		.section	.text.Draw_Output_Button,"ax",%progbits
 122              		.align	1
 123              		.global	Draw_Output_Button
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 128              	Draw_Output_Button:
 129              	.LFB147:
  72:Core/Src/screen.c **** #define OFFSET_LEFT -3 // Définir un décalage vers la gauche
  73:Core/Src/screen.c **** 
  74:Core/Src/screen.c **** void Draw_Output_Button(void)
  75:Core/Src/screen.c **** {
 130              		.loc 1 75 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134 0000 08B5     		push	{r3, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 3, -8
 137              		.cfi_offset 14, -4
  76:Core/Src/screen.c ****     // Définir la couleur du texte en blanc et dessiner un rectangle de base pour le bouton
  77:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 138              		.loc 1 77 5 view .LVU14
 139 0002 4FF0FF30 		mov	r0, #-1
 140 0006 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 141              	.LVL9:
  78:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 20 - OFFSET_LEFT, START_Y + 20, BUTTON_WIDTH_HEIGHT - 40, BUTTON_WID
 142              		.loc 1 78 5 view .LVU15
 143 000a 6423     		movs	r3, #100
 144 000c 1A46     		mov	r2, r3
 145 000e 3C21     		movs	r1, #60
 146 0010 3F20     		movs	r0, #63
 147 0012 FFF7FEFF 		bl	BSP_LCD_DrawRect
 148              	.LVL10:
  79:Core/Src/screen.c **** 
  80:Core/Src/screen.c ****     // Dessiner le cercle principal plus petit et plus épais
  81:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 149              		.loc 1 81 5 view .LVU16
 150 0016 4FF07F40 		mov	r0, #-16777216
 151 001a FFF7FEFF 		bl	BSP_LCD_SetTextColor
 152              	.LVL11:
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 5


  82:Core/Src/screen.c ****     BSP_LCD_FillCircle(START_X + SPACE_BETWEEN_BUTTONS + BUTTON_WIDTH_HEIGHT / 2 - OFFSET_LEFT, STA
 153              		.loc 1 82 5 view .LVU17
 154 001e 2D22     		movs	r2, #45
 155 0020 6E21     		movs	r1, #110
 156 0022 40F22F10 		movw	r0, #303
 157 0026 FFF7FEFF 		bl	BSP_LCD_FillCircle
 158              	.LVL12:
  83:Core/Src/screen.c **** 
  84:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 159              		.loc 1 84 5 view .LVU18
 160 002a 4FF0FF30 		mov	r0, #-1
 161 002e FFF7FEFF 		bl	BSP_LCD_SetTextColor
 162              	.LVL13:
  85:Core/Src/screen.c ****     BSP_LCD_FillCircle(START_X + SPACE_BETWEEN_BUTTONS + BUTTON_WIDTH_HEIGHT / 2 - OFFSET_LEFT, STA
 163              		.loc 1 85 5 view .LVU19
 164 0032 2322     		movs	r2, #35
 165 0034 6E21     		movs	r1, #110
 166 0036 40F22F10 		movw	r0, #303
 167 003a FFF7FEFF 		bl	BSP_LCD_FillCircle
 168              	.LVL14:
  86:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 169              		.loc 1 86 5 view .LVU20
 170 003e 4FF07F40 		mov	r0, #-16777216
 171 0042 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 172              	.LVL15:
  87:Core/Src/screen.c **** 
  88:Core/Src/screen.c ****     // Masquer la moitié inférieure du cercle avec un rectangle blanc
  89:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 173              		.loc 1 89 5 view .LVU21
 174 0046 4FF0FF30 		mov	r0, #-1
 175 004a FFF7FEFF 		bl	BSP_LCD_SetTextColor
 176              	.LVL16:
  90:Core/Src/screen.c ****     BSP_LCD_FillRect(START_X + SPACE_BETWEEN_BUTTONS - OFFSET_LEFT + 5, START_Y + BUTTON_WIDTH_HEIG
 177              		.loc 1 90 5 view .LVU22
 178 004e 4623     		movs	r3, #70
 179 0050 7822     		movs	r2, #120
 180 0052 6E21     		movs	r1, #110
 181 0054 EE20     		movs	r0, #238
 182 0056 FFF7FEFF 		bl	BSP_LCD_FillRect
 183              	.LVL17:
  91:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 184              		.loc 1 91 5 view .LVU23
 185 005a 4FF07F40 		mov	r0, #-16777216
 186 005e FFF7FEFF 		bl	BSP_LCD_SetTextColor
 187              	.LVL18:
  92:Core/Src/screen.c **** 
  93:Core/Src/screen.c ****     // Dessiner les coussinets avec des rectangles
  94:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 188              		.loc 1 94 5 view .LVU24
 189 0062 4FF07F40 		mov	r0, #-16777216
 190 0066 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 191              	.LVL19:
  95:Core/Src/screen.c **** 
  96:Core/Src/screen.c ****     BSP_LCD_FillRect(START_X + SPACE_BETWEEN_BUTTONS + 20 - OFFSET_LEFT, START_Y + BUTTON_WIDTH_HEI
 192              		.loc 1 96 5 view .LVU25
 193 006a 1E23     		movs	r3, #30
 194 006c 0F22     		movs	r2, #15
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 6


 195 006e 6221     		movs	r1, #98
 196 0070 FD20     		movs	r0, #253
 197 0072 FFF7FEFF 		bl	BSP_LCD_FillRect
 198              	.LVL20:
  97:Core/Src/screen.c ****     BSP_LCD_FillRect(START_X + SPACE_BETWEEN_BUTTONS + BUTTON_WIDTH_HEIGHT - 20 - OFFSET_LEFT - 15,
 199              		.loc 1 97 5 view .LVU26
 200 0076 1E23     		movs	r3, #30
 201 0078 0F22     		movs	r2, #15
 202 007a 6221     		movs	r1, #98
 203 007c 4FF4A970 		mov	r0, #338
 204 0080 FFF7FEFF 		bl	BSP_LCD_FillRect
 205              	.LVL21:
  98:Core/Src/screen.c **** }
 206              		.loc 1 98 1 is_stmt 0 view .LVU27
 207 0084 08BD     		pop	{r3, pc}
 208              		.cfi_endproc
 209              	.LFE147:
 211              		.section	.text.Draw_SD_Button,"ax",%progbits
 212              		.align	1
 213              		.global	Draw_SD_Button
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	Draw_SD_Button:
 219              	.LFB148:
  99:Core/Src/screen.c **** 
 100:Core/Src/screen.c **** void Draw_SD_Button(void)
 101:Core/Src/screen.c **** {
 220              		.loc 1 101 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 00B5     		push	{lr}
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              		.cfi_def_cfa_offset 16
 102:Core/Src/screen.c ****     // Définir la couleur de remplissage
 103:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 229              		.loc 1 103 5 view .LVU29
 230 0004 4FF07F40 		mov	r0, #-16777216
 231 0008 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 232              	.LVL22:
 104:Core/Src/screen.c **** 
 105:Core/Src/screen.c ****     // Dessiner un rectangle plein pour le troisième bouton
 106:Core/Src/screen.c ****     BSP_LCD_FillRect(START_X + SPACE_BETWEEN_BUTTONS * 2 + 40, START_Y + 28, 65, 90);
 233              		.loc 1 106 5 view .LVU30
 234 000c 5A23     		movs	r3, #90
 235 000e 4122     		movs	r2, #65
 236 0010 4421     		movs	r1, #68
 237 0012 4FF4E670 		mov	r0, #460
 238 0016 FFF7FEFF 		bl	BSP_LCD_FillRect
 239              	.LVL23:
 107:Core/Src/screen.c **** 
 108:Core/Src/screen.c ****     // Dessiner un rectangle plein pour le troisième bouton
 109:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 240              		.loc 1 109 5 view .LVU31
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 7


 241 001a 4FF0FF30 		mov	r0, #-1
 242 001e FFF7FEFF 		bl	BSP_LCD_SetTextColor
 243              	.LVL24:
 110:Core/Src/screen.c ****     FillTriangle(START_X + SPACE_BETWEEN_BUTTONS * 2 + 110, START_X + SPACE_BETWEEN_BUTTONS * 2 + 1
 244              		.loc 1 110 5 view .LVU32
 245 0022 3C23     		movs	r3, #60
 246 0024 0193     		str	r3, [sp, #4]
 247 0026 5A22     		movs	r2, #90
 248 0028 0092     		str	r2, [sp]
 249 002a 4FF4FA72 		mov	r2, #500
 250 002e 40F21221 		movw	r1, #530
 251 0032 0846     		mov	r0, r1
 252 0034 FFF7FEFF 		bl	FillTriangle
 253              	.LVL25:
 111:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 254              		.loc 1 111 5 view .LVU33
 255 0038 4FF07F40 		mov	r0, #-16777216
 256 003c FFF7FEFF 		bl	BSP_LCD_SetTextColor
 257              	.LVL26:
 112:Core/Src/screen.c **** }
 258              		.loc 1 112 1 is_stmt 0 view .LVU34
 259 0040 03B0     		add	sp, sp, #12
 260              		.cfi_def_cfa_offset 4
 261              		@ sp needed
 262 0042 5DF804FB 		ldr	pc, [sp], #4
 263              		.cfi_endproc
 264              	.LFE148:
 266              		.section	.text.Draw_AI_Button,"ax",%progbits
 267              		.align	1
 268              		.global	Draw_AI_Button
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 273              	Draw_AI_Button:
 274              	.LFB149:
 113:Core/Src/screen.c **** 
 114:Core/Src/screen.c **** void Draw_AI_Button(void)
 115:Core/Src/screen.c **** {
 275              		.loc 1 115 1 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 08B5     		push	{r3, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 3, -8
 282              		.cfi_offset 14, -4
 116:Core/Src/screen.c ****     // Définir les coordonnées de base pour le troisième bouton
 117:Core/Src/screen.c ****     int x = START_X + SPACE_BETWEEN_BUTTONS * 3;
 283              		.loc 1 117 5 view .LVU36
 284              	.LVL27:
 118:Core/Src/screen.c ****     int y = START_Y;
 285              		.loc 1 118 5 view .LVU37
 119:Core/Src/screen.c **** 
 120:Core/Src/screen.c ****     // Ajuster les coordonnées pour centrer le logo
 121:Core/Src/screen.c ****     int center_x = x + BUTTON_WIDTH_HEIGHT / 2;
 286              		.loc 1 121 5 view .LVU38
 122:Core/Src/screen.c ****     int center_y = y + BUTTON_WIDTH_HEIGHT / 2;
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 8


 287              		.loc 1 122 5 view .LVU39
 123:Core/Src/screen.c **** 
 124:Core/Src/screen.c ****     // Définir la couleur de remplissage
 125:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 288              		.loc 1 125 5 view .LVU40
 289 0002 4FF07F40 		mov	r0, #-16777216
 290 0006 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 291              	.LVL28:
 126:Core/Src/screen.c **** 
 127:Core/Src/screen.c ****     // Agrandir les dimensions des rectangles
 128:Core/Src/screen.c ****     int rect_width = 10;   // Largeur des bras de la croix
 292              		.loc 1 128 5 view .LVU41
 129:Core/Src/screen.c ****     int rect_height = 100; // Hauteur des bras de la croix
 293              		.loc 1 129 5 view .LVU42
 130:Core/Src/screen.c **** 
 131:Core/Src/screen.c ****     // Dessiner la croix avec des rectangles pleins
 132:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_width / 2 - 10, center_y - rect_height / 2, rect_width, rect_h
 294              		.loc 1 132 5 view .LVU43
 295 000a 6423     		movs	r3, #100
 296 000c 0A22     		movs	r2, #10
 297 000e 3C21     		movs	r1, #60
 298 0010 40F29920 		movw	r0, #665
 299 0014 FFF7FEFF 		bl	BSP_LCD_FillRect
 300              	.LVL29:
 133:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_width / 2 + 10, center_y - rect_height / 2, rect_width, rect_h
 301              		.loc 1 133 5 view .LVU44
 302 0018 6423     		movs	r3, #100
 303 001a 0A22     		movs	r2, #10
 304 001c 3C21     		movs	r1, #60
 305 001e 40F2AD20 		movw	r0, #685
 306 0022 FFF7FEFF 		bl	BSP_LCD_FillRect
 307              	.LVL30:
 134:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_height / 2, center_y - rect_width / 2 - 10, rect_height, rect_
 308              		.loc 1 134 5 view .LVU45
 309 0026 0A23     		movs	r3, #10
 310 0028 6422     		movs	r2, #100
 311 002a 5F21     		movs	r1, #95
 312 002c 40F27620 		movw	r0, #630
 313 0030 FFF7FEFF 		bl	BSP_LCD_FillRect
 314              	.LVL31:
 135:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_height / 2, center_y - rect_width / 2 + 10, rect_height, rect_
 315              		.loc 1 135 5 view .LVU46
 316 0034 0A23     		movs	r3, #10
 317 0036 6422     		movs	r2, #100
 318 0038 7321     		movs	r1, #115
 319 003a 40F27620 		movw	r0, #630
 320 003e FFF7FEFF 		bl	BSP_LCD_FillRect
 321              	.LVL32:
 136:Core/Src/screen.c **** 
 137:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_height / 2, center_y - rect_width / 2 + 10, rect_width, 25);  
 322              		.loc 1 137 5 view .LVU47
 323 0042 1923     		movs	r3, #25
 324 0044 0A22     		movs	r2, #10
 325 0046 7321     		movs	r1, #115
 326 0048 40F27620 		movw	r0, #630
 327 004c FFF7FEFF 		bl	BSP_LCD_FillRect
 328              	.LVL33:
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 9


 138:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_height / 2, center_y - rect_width / 2 - 25, rect_width, 25);  
 329              		.loc 1 138 5 view .LVU48
 330 0050 1923     		movs	r3, #25
 331 0052 0A22     		movs	r2, #10
 332 0054 5021     		movs	r1, #80
 333 0056 40F27620 		movw	r0, #630
 334 005a FFF7FEFF 		bl	BSP_LCD_FillRect
 335              	.LVL34:
 139:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_height / 2 + rect_height - 10, center_y - rect_width / 2 - 25,
 336              		.loc 1 139 5 view .LVU49
 337 005e 1923     		movs	r3, #25
 338 0060 0A22     		movs	r2, #10
 339 0062 5021     		movs	r1, #80
 340 0064 4FF43470 		mov	r0, #720
 341 0068 FFF7FEFF 		bl	BSP_LCD_FillRect
 342              	.LVL35:
 140:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_height / 2 + rect_height - 10, center_y - rect_width / 2 + 10,
 343              		.loc 1 140 5 view .LVU50
 344 006c 1923     		movs	r3, #25
 345 006e 0A22     		movs	r2, #10
 346 0070 7321     		movs	r1, #115
 347 0072 4FF43470 		mov	r0, #720
 348 0076 FFF7FEFF 		bl	BSP_LCD_FillRect
 349              	.LVL36:
 141:Core/Src/screen.c **** 
 142:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_width / 2 + 10, center_y - rect_height / 2, 25, rect_width);  
 350              		.loc 1 142 5 view .LVU51
 351 007a 0A23     		movs	r3, #10
 352 007c 1922     		movs	r2, #25
 353 007e 3C21     		movs	r1, #60
 354 0080 40F2AD20 		movw	r0, #685
 355 0084 FFF7FEFF 		bl	BSP_LCD_FillRect
 356              	.LVL37:
 143:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_width / 2 - 25, center_y - rect_height / 2, 25, rect_width);  
 357              		.loc 1 143 5 view .LVU52
 358 0088 0A23     		movs	r3, #10
 359 008a 1922     		movs	r2, #25
 360 008c 3C21     		movs	r1, #60
 361 008e 40F28A20 		movw	r0, #650
 362 0092 FFF7FEFF 		bl	BSP_LCD_FillRect
 363              	.LVL38:
 144:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_width / 2 - 25, center_y - rect_height / 2 + rect_height - 10,
 364              		.loc 1 144 5 view .LVU53
 365 0096 0A23     		movs	r3, #10
 366 0098 1922     		movs	r2, #25
 367 009a 9621     		movs	r1, #150
 368 009c 40F28A20 		movw	r0, #650
 369 00a0 FFF7FEFF 		bl	BSP_LCD_FillRect
 370              	.LVL39:
 145:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - rect_width / 2 + 10, center_y - rect_height / 2 + rect_height - 10,
 371              		.loc 1 145 5 view .LVU54
 372 00a4 0A23     		movs	r3, #10
 373 00a6 1922     		movs	r2, #25
 374 00a8 9621     		movs	r1, #150
 375 00aa 40F2AD20 		movw	r0, #685
 376 00ae FFF7FEFF 		bl	BSP_LCD_FillRect
 377              	.LVL40:
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 10


 146:Core/Src/screen.c **** 
 147:Core/Src/screen.c ****     // Ajouter un carré plein au milieu de la croix
 148:Core/Src/screen.c ****     int square_size = 60; // Taille du carré central
 378              		.loc 1 148 5 view .LVU55
 149:Core/Src/screen.c ****     BSP_LCD_FillRect(center_x - square_size / 2, center_y - square_size / 2, square_size, square_si
 379              		.loc 1 149 5 view .LVU56
 380 00b2 3C23     		movs	r3, #60
 381 00b4 1A46     		mov	r2, r3
 382 00b6 5021     		movs	r1, #80
 383 00b8 40F28A20 		movw	r0, #650
 384 00bc FFF7FEFF 		bl	BSP_LCD_FillRect
 385              	.LVL41:
 150:Core/Src/screen.c **** }
 386              		.loc 1 150 1 is_stmt 0 view .LVU57
 387 00c0 08BD     		pop	{r3, pc}
 388              		.cfi_endproc
 389              	.LFE149:
 391              		.section	.rodata.print_Menu_Interface.str1.4,"aMS",%progbits,1
 392              		.align	2
 393              	.LC0:
 394 0000 506C6179 		.ascii	"Play/Pause\000"
 394      2F506175 
 394      736500
 395 000b 00       		.align	2
 396              	.LC1:
 397 000c 41756469 		.ascii	"Audio Out\000"
 397      6F204F75 
 397      7400
 398 0016 0000     		.align	2
 399              	.LC2:
 400 0018 5265636F 		.ascii	"Record\000"
 400      726400
 401 001f 00       		.align	2
 402              	.LC3:
 403 0020 414900   		.ascii	"AI\000"
 404 0023 00       		.align	2
 405              	.LC4:
 406 0024 4C756D69 		.ascii	"Luminosite\000"
 406      6E6F7369 
 406      746500
 407 002f 00       		.align	2
 408              	.LC5:
 409 0030 566F6C75 		.ascii	"Volume\000"
 409      6D6500
 410              		.section	.text.print_Menu_Interface,"ax",%progbits
 411              		.align	1
 412              		.global	print_Menu_Interface
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 417              	print_Menu_Interface:
 418              	.LFB144:
   4:Core/Src/screen.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 419              		.loc 1 4 1 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 11


 423 0000 70B5     		push	{r4, r5, r6, lr}
 424              		.cfi_def_cfa_offset 16
 425              		.cfi_offset 4, -16
 426              		.cfi_offset 5, -12
 427              		.cfi_offset 6, -8
 428              		.cfi_offset 14, -4
   5:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 429              		.loc 1 5 5 view .LVU59
 430 0002 4FF0FF30 		mov	r0, #-1
 431 0006 FFF7FEFF 		bl	BSP_LCD_Clear
 432              	.LVL42:
   6:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font24);
 433              		.loc 1 6 5 view .LVU60
 434 000a 4FF07F40 		mov	r0, #-16777216
 435 000e FFF7FEFF 		bl	BSP_LCD_SetTextColor
 436              	.LVL43:
   7:Core/Src/screen.c ****     BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 437              		.loc 1 7 5 view .LVU61
 438 0012 714E     		ldr	r6, .L13
 439 0014 3046     		mov	r0, r6
 440 0016 FFF7FEFF 		bl	BSP_LCD_SetFont
 441              	.LVL44:
   8:Core/Src/screen.c **** 
 442              		.loc 1 8 5 view .LVU62
 443 001a 4FF0FF30 		mov	r0, #-1
 444 001e FFF7FEFF 		bl	BSP_LCD_SetBackColor
 445              	.LVL45:
  11:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 1, START_Y + 1, BUTTON_WIDTH_HEIGHT, BUTTON_WIDTH_HEIGHT);
 446              		.loc 1 11 5 view .LVU63
 447 0022 8C23     		movs	r3, #140
 448 0024 1A46     		mov	r2, r3
 449 0026 2821     		movs	r1, #40
 450 0028 0846     		mov	r0, r1
 451 002a FFF7FEFF 		bl	BSP_LCD_DrawRect
 452              	.LVL46:
  12:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 2, START_Y + 2, BUTTON_WIDTH_HEIGHT, BUTTON_WIDTH_HEIGHT);
 453              		.loc 1 12 5 view .LVU64
 454 002e 8C23     		movs	r3, #140
 455 0030 1A46     		mov	r2, r3
 456 0032 2921     		movs	r1, #41
 457 0034 0846     		mov	r0, r1
 458 0036 FFF7FEFF 		bl	BSP_LCD_DrawRect
 459              	.LVL47:
  13:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 3, START_Y + 3, BUTTON_WIDTH_HEIGHT, BUTTON_WIDTH_HEIGHT);
 460              		.loc 1 13 5 view .LVU65
 461 003a 8C23     		movs	r3, #140
 462 003c 1A46     		mov	r2, r3
 463 003e 2A21     		movs	r1, #42
 464 0040 0846     		mov	r0, r1
 465 0042 FFF7FEFF 		bl	BSP_LCD_DrawRect
 466              	.LVL48:
  14:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(START_X - 15, START_Y + BUTTON_WIDTH_HEIGHT + 20, (uint8_t *)"Play/Paus
 467              		.loc 1 14 5 view .LVU66
 468 0046 8C23     		movs	r3, #140
 469 0048 1A46     		mov	r2, r3
 470 004a 2B21     		movs	r1, #43
 471 004c 0846     		mov	r0, r1
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 12


 472 004e FFF7FEFF 		bl	BSP_LCD_DrawRect
 473              	.LVL49:
  15:Core/Src/screen.c ****     Draw_Play_Button();
 474              		.loc 1 15 5 view .LVU67
 475 0052 0323     		movs	r3, #3
 476 0054 614A     		ldr	r2, .L13+4
 477 0056 C821     		movs	r1, #200
 478 0058 1920     		movs	r0, #25
 479 005a FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 480              	.LVL50:
  16:Core/Src/screen.c **** 
 481              		.loc 1 16 5 view .LVU68
 482 005e FFF7FEFF 		bl	Draw_Play_Button
 483              	.LVL51:
  19:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 1 + SPACE_BETWEEN_BUTTONS, START_Y + 1, BUTTON_WIDTH_HEIGHT, BUTTON_
 484              		.loc 1 19 5 view .LVU69
 485 0062 8C23     		movs	r3, #140
 486 0064 1A46     		mov	r2, r3
 487 0066 2821     		movs	r1, #40
 488 0068 E620     		movs	r0, #230
 489 006a FFF7FEFF 		bl	BSP_LCD_DrawRect
 490              	.LVL52:
  20:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 2 + SPACE_BETWEEN_BUTTONS, START_Y + 2, BUTTON_WIDTH_HEIGHT, BUTTON_
 491              		.loc 1 20 5 view .LVU70
 492 006e 8C23     		movs	r3, #140
 493 0070 1A46     		mov	r2, r3
 494 0072 2921     		movs	r1, #41
 495 0074 E720     		movs	r0, #231
 496 0076 FFF7FEFF 		bl	BSP_LCD_DrawRect
 497              	.LVL53:
  21:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 3 + SPACE_BETWEEN_BUTTONS, START_Y + 3, BUTTON_WIDTH_HEIGHT, BUTTON_
 498              		.loc 1 21 5 view .LVU71
 499 007a 8C23     		movs	r3, #140
 500 007c 1A46     		mov	r2, r3
 501 007e 2A21     		movs	r1, #42
 502 0080 E820     		movs	r0, #232
 503 0082 FFF7FEFF 		bl	BSP_LCD_DrawRect
 504              	.LVL54:
  22:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(START_X + SPACE_BETWEEN_BUTTONS - 2, START_Y + BUTTON_WIDTH_HEIGHT + 20
 505              		.loc 1 22 5 view .LVU72
 506 0086 8C23     		movs	r3, #140
 507 0088 1A46     		mov	r2, r3
 508 008a 2B21     		movs	r1, #43
 509 008c E920     		movs	r0, #233
 510 008e FFF7FEFF 		bl	BSP_LCD_DrawRect
 511              	.LVL55:
  23:Core/Src/screen.c ****     Draw_Output_Button();
 512              		.loc 1 23 5 view .LVU73
 513 0092 0323     		movs	r3, #3
 514 0094 524A     		ldr	r2, .L13+8
 515 0096 C821     		movs	r1, #200
 516 0098 E420     		movs	r0, #228
 517 009a FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 518              	.LVL56:
  24:Core/Src/screen.c **** 
 519              		.loc 1 24 5 view .LVU74
 520 009e FFF7FEFF 		bl	Draw_Output_Button
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 13


 521              	.LVL57:
  27:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 1 + SPACE_BETWEEN_BUTTONS * 2, START_Y + 1, BUTTON_WIDTH_HEIGHT, BUT
 522              		.loc 1 27 5 view .LVU75
 523 00a2 8C23     		movs	r3, #140
 524 00a4 1A46     		mov	r2, r3
 525 00a6 2821     		movs	r1, #40
 526 00a8 4FF4D270 		mov	r0, #420
 527 00ac FFF7FEFF 		bl	BSP_LCD_DrawRect
 528              	.LVL58:
  28:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 2 + SPACE_BETWEEN_BUTTONS * 2, START_Y + 2, BUTTON_WIDTH_HEIGHT, BUT
 529              		.loc 1 28 5 view .LVU76
 530 00b0 8C23     		movs	r3, #140
 531 00b2 1A46     		mov	r2, r3
 532 00b4 2921     		movs	r1, #41
 533 00b6 40F2A510 		movw	r0, #421
 534 00ba FFF7FEFF 		bl	BSP_LCD_DrawRect
 535              	.LVL59:
  29:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 3 + SPACE_BETWEEN_BUTTONS * 2, START_Y + 3, BUTTON_WIDTH_HEIGHT, BUT
 536              		.loc 1 29 5 view .LVU77
 537 00be 8C23     		movs	r3, #140
 538 00c0 1A46     		mov	r2, r3
 539 00c2 2A21     		movs	r1, #42
 540 00c4 4FF4D370 		mov	r0, #422
 541 00c8 FFF7FEFF 		bl	BSP_LCD_DrawRect
 542              	.LVL60:
  30:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(START_X + SPACE_BETWEEN_BUTTONS * 2 + 20, START_Y + BUTTON_WIDTH_HEIGHT
 543              		.loc 1 30 5 view .LVU78
 544 00cc 8C23     		movs	r3, #140
 545 00ce 1A46     		mov	r2, r3
 546 00d0 2B21     		movs	r1, #43
 547 00d2 40F2A710 		movw	r0, #423
 548 00d6 FFF7FEFF 		bl	BSP_LCD_DrawRect
 549              	.LVL61:
  31:Core/Src/screen.c ****     Draw_SD_Button();
 550              		.loc 1 31 5 view .LVU79
 551 00da 0323     		movs	r3, #3
 552 00dc 414A     		ldr	r2, .L13+12
 553 00de C821     		movs	r1, #200
 554 00e0 4FF4DC70 		mov	r0, #440
 555 00e4 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 556              	.LVL62:
  32:Core/Src/screen.c **** 
 557              		.loc 1 32 5 view .LVU80
 558 00e8 FFF7FEFF 		bl	Draw_SD_Button
 559              	.LVL63:
  35:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 1 + SPACE_BETWEEN_BUTTONS * 3, START_Y + 1, BUTTON_WIDTH_HEIGHT, BUT
 560              		.loc 1 35 5 view .LVU81
 561 00ec 8C23     		movs	r3, #140
 562 00ee 1A46     		mov	r2, r3
 563 00f0 2821     		movs	r1, #40
 564 00f2 40F26220 		movw	r0, #610
 565 00f6 FFF7FEFF 		bl	BSP_LCD_DrawRect
 566              	.LVL64:
  36:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 2 + SPACE_BETWEEN_BUTTONS * 3, START_Y + 2, BUTTON_WIDTH_HEIGHT, BUT
 567              		.loc 1 36 5 view .LVU82
 568 00fa 8C23     		movs	r3, #140
 569 00fc 1A46     		mov	r2, r3
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 14


 570 00fe 2921     		movs	r1, #41
 571 0100 40F26320 		movw	r0, #611
 572 0104 FFF7FEFF 		bl	BSP_LCD_DrawRect
 573              	.LVL65:
  37:Core/Src/screen.c ****     BSP_LCD_DrawRect(START_X + 3 + SPACE_BETWEEN_BUTTONS * 3, START_Y + 3, BUTTON_WIDTH_HEIGHT, BUT
 574              		.loc 1 37 5 view .LVU83
 575 0108 8C23     		movs	r3, #140
 576 010a 1A46     		mov	r2, r3
 577 010c 2A21     		movs	r1, #42
 578 010e 4FF41970 		mov	r0, #612
 579 0112 FFF7FEFF 		bl	BSP_LCD_DrawRect
 580              	.LVL66:
  38:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(START_X + SPACE_BETWEEN_BUTTONS * 3 + 60, START_Y + BUTTON_WIDTH_HEIGHT
 581              		.loc 1 38 5 view .LVU84
 582 0116 8C23     		movs	r3, #140
 583 0118 1A46     		mov	r2, r3
 584 011a 2B21     		movs	r1, #43
 585 011c 40F26520 		movw	r0, #613
 586 0120 FFF7FEFF 		bl	BSP_LCD_DrawRect
 587              	.LVL67:
  39:Core/Src/screen.c ****     Draw_AI_Button();
 588              		.loc 1 39 5 view .LVU85
 589 0124 0323     		movs	r3, #3
 590 0126 304A     		ldr	r2, .L13+16
 591 0128 C821     		movs	r1, #200
 592 012a 40F29E20 		movw	r0, #670
 593 012e FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 594              	.LVL68:
  40:Core/Src/screen.c **** 
 595              		.loc 1 40 5 view .LVU86
 596 0132 FFF7FEFF 		bl	Draw_AI_Button
 597              	.LVL69:
  43:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font20);
 598              		.loc 1 43 5 view .LVU87
  43:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font20);
 599              		.loc 1 43 26 is_stmt 0 view .LVU88
 600 0136 FFF7FEFF 		bl	BSP_LCD_GetYSize
 601              	.LVL70:
 602 013a 0446     		mov	r4, r0
  43:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font20);
 603              		.loc 1 43 51 discriminator 1 view .LVU89
 604 013c FFF7FEFF 		bl	BSP_LCD_GetXSize
 605              	.LVL71:
  43:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font20);
 606              		.loc 1 43 70 discriminator 2 view .LVU90
 607 0140 4208     		lsrs	r2, r0, #1
  43:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font20);
 608              		.loc 1 43 5 discriminator 2 view .LVU91
 609 0142 283A     		subs	r2, r2, #40
  43:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font20);
 610              		.loc 1 43 5 discriminator 1 view .LVU92
 611 0144 A4F12801 		sub	r1, r4, #40
  43:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font20);
 612              		.loc 1 43 5 discriminator 2 view .LVU93
 613 0148 1423     		movs	r3, #20
 614 014a 92B2     		uxth	r2, r2
 615 014c 89B2     		uxth	r1, r1
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 15


 616 014e 1846     		mov	r0, r3
 617 0150 FFF7FEFF 		bl	BSP_LCD_DrawRect
 618              	.LVL72:
  44:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Luminosite", LEFT_MODE);
 619              		.loc 1 44 5 is_stmt 1 view .LVU94
 620 0154 2548     		ldr	r0, .L13+20
 621 0156 FFF7FEFF 		bl	BSP_LCD_SetFont
 622              	.LVL73:
  45:Core/Src/screen.c **** 
 623              		.loc 1 45 5 view .LVU95
  45:Core/Src/screen.c **** 
 624              		.loc 1 45 33 is_stmt 0 view .LVU96
 625 015a FFF7FEFF 		bl	BSP_LCD_GetYSize
 626              	.LVL74:
  45:Core/Src/screen.c **** 
 627              		.loc 1 45 5 discriminator 1 view .LVU97
 628 015e A0F13C01 		sub	r1, r0, #60
 629 0162 0323     		movs	r3, #3
 630 0164 224A     		ldr	r2, .L13+24
 631 0166 89B2     		uxth	r1, r1
 632 0168 1420     		movs	r0, #20
 633 016a FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 634              	.LVL75:
  48:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
 635              		.loc 1 48 5 is_stmt 1 view .LVU98
  48:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
 636              		.loc 1 48 22 is_stmt 0 view .LVU99
 637 016e FFF7FEFF 		bl	BSP_LCD_GetXSize
 638              	.LVL76:
  48:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
 639              		.loc 1 48 41 discriminator 1 view .LVU100
 640 0172 4408     		lsrs	r4, r0, #1
  48:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
 641              		.loc 1 48 51 discriminator 1 view .LVU101
 642 0174 FFF7FEFF 		bl	BSP_LCD_GetYSize
 643              	.LVL77:
 644 0178 0546     		mov	r5, r0
  48:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
 645              		.loc 1 48 76 discriminator 2 view .LVU102
 646 017a FFF7FEFF 		bl	BSP_LCD_GetXSize
 647              	.LVL78:
  48:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
 648              		.loc 1 48 95 discriminator 3 view .LVU103
 649 017e 4208     		lsrs	r2, r0, #1
  48:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
 650              		.loc 1 48 5 discriminator 3 view .LVU104
 651 0180 283A     		subs	r2, r2, #40
  48:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
 652              		.loc 1 48 5 discriminator 2 view .LVU105
 653 0182 A5F12801 		sub	r1, r5, #40
  48:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
 654              		.loc 1 48 5 discriminator 1 view .LVU106
 655 0186 1434     		adds	r4, r4, #20
  48:Core/Src/screen.c ****     BSP_LCD_DisplayStringAt(BSP_LCD_GetXSize() / 2 + 20, BSP_LCD_GetYSize() - 60, (uint8_t *)"Volum
 656              		.loc 1 48 5 discriminator 3 view .LVU107
 657 0188 1423     		movs	r3, #20
 658 018a 92B2     		uxth	r2, r2
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 16


 659 018c 89B2     		uxth	r1, r1
 660 018e A0B2     		uxth	r0, r4
 661 0190 FFF7FEFF 		bl	BSP_LCD_DrawRect
 662              	.LVL79:
  49:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font24);
 663              		.loc 1 49 5 is_stmt 1 view .LVU108
  49:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font24);
 664              		.loc 1 49 29 is_stmt 0 view .LVU109
 665 0194 FFF7FEFF 		bl	BSP_LCD_GetXSize
 666              	.LVL80:
  49:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font24);
 667              		.loc 1 49 48 discriminator 1 view .LVU110
 668 0198 4408     		lsrs	r4, r0, #1
  49:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font24);
 669              		.loc 1 49 58 discriminator 1 view .LVU111
 670 019a FFF7FEFF 		bl	BSP_LCD_GetYSize
 671              	.LVL81:
  49:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font24);
 672              		.loc 1 49 5 discriminator 2 view .LVU112
 673 019e A0F13C01 		sub	r1, r0, #60
  49:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font24);
 674              		.loc 1 49 5 discriminator 1 view .LVU113
 675 01a2 04F11400 		add	r0, r4, #20
  49:Core/Src/screen.c ****     BSP_LCD_SetFont(&Font24);
 676              		.loc 1 49 5 discriminator 2 view .LVU114
 677 01a6 0323     		movs	r3, #3
 678 01a8 124A     		ldr	r2, .L13+28
 679 01aa 89B2     		uxth	r1, r1
 680 01ac 80B2     		uxth	r0, r0
 681 01ae FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 682              	.LVL82:
  50:Core/Src/screen.c **** 
 683              		.loc 1 50 5 is_stmt 1 view .LVU115
 684 01b2 3046     		mov	r0, r6
 685 01b4 FFF7FEFF 		bl	BSP_LCD_SetFont
 686              	.LVL83:
  53:Core/Src/screen.c **** }
 687              		.loc 1 53 5 view .LVU116
  53:Core/Src/screen.c **** }
 688              		.loc 1 53 62 is_stmt 0 view .LVU117
 689 01b8 FFF7FEFF 		bl	BSP_LCD_GetXSize
 690              	.LVL84:
 691 01bc 0446     		mov	r4, r0
  53:Core/Src/screen.c **** }
 692              		.loc 1 53 87 discriminator 1 view .LVU118
 693 01be FFF7FEFF 		bl	BSP_LCD_GetYSize
 694              	.LVL85:
  53:Core/Src/screen.c **** }
 695              		.loc 1 53 106 discriminator 2 view .LVU119
 696 01c2 4308     		lsrs	r3, r0, #1
  53:Core/Src/screen.c **** }
 697              		.loc 1 53 5 discriminator 2 view .LVU120
 698 01c4 3C3B     		subs	r3, r3, #60
  53:Core/Src/screen.c **** }
 699              		.loc 1 53 5 discriminator 1 view .LVU121
 700 01c6 A4F12802 		sub	r2, r4, #40
  53:Core/Src/screen.c **** }
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 17


 701              		.loc 1 53 5 discriminator 2 view .LVU122
 702 01ca 9BB2     		uxth	r3, r3
 703 01cc 92B2     		uxth	r2, r2
 704 01ce E621     		movs	r1, #230
 705 01d0 1420     		movs	r0, #20
 706 01d2 FFF7FEFF 		bl	BSP_LCD_DrawRect
 707              	.LVL86:
  54:Core/Src/screen.c **** 
 708              		.loc 1 54 1 view .LVU123
 709 01d6 70BD     		pop	{r4, r5, r6, pc}
 710              	.L14:
 711              		.align	2
 712              	.L13:
 713 01d8 00000000 		.word	Font24
 714 01dc 00000000 		.word	.LC0
 715 01e0 0C000000 		.word	.LC1
 716 01e4 18000000 		.word	.LC2
 717 01e8 20000000 		.word	.LC3
 718 01ec 00000000 		.word	Font20
 719 01f0 24000000 		.word	.LC4
 720 01f4 30000000 		.word	.LC5
 721              		.cfi_endproc
 722              	.LFE144:
 724              		.section	.text.Clear_Log,"ax",%progbits
 725              		.align	1
 726              		.global	Clear_Log
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 731              	Clear_Log:
 732              	.LFB150:
 151:Core/Src/screen.c **** 
 152:Core/Src/screen.c **** void Clear_Log(void)
 153:Core/Src/screen.c **** {
 733              		.loc 1 153 1 is_stmt 1 view -0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737 0000 10B5     		push	{r4, lr}
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 4, -8
 740              		.cfi_offset 14, -4
 154:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 741              		.loc 1 154 5 view .LVU125
 742 0002 4FF0FF30 		mov	r0, #-1
 743 0006 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 744              	.LVL87:
 155:Core/Src/screen.c ****     BSP_LCD_FillRect(30, START_Y + BUTTON_WIDTH_HEIGHT + 60, BSP_LCD_GetXSize() - 40, BSP_LCD_GetYS
 745              		.loc 1 155 5 view .LVU126
 746              		.loc 1 155 62 is_stmt 0 view .LVU127
 747 000a FFF7FEFF 		bl	BSP_LCD_GetXSize
 748              	.LVL88:
 749 000e 0446     		mov	r4, r0
 750              		.loc 1 155 87 discriminator 1 view .LVU128
 751 0010 FFF7FEFF 		bl	BSP_LCD_GetYSize
 752              	.LVL89:
 753              		.loc 1 155 106 discriminator 2 view .LVU129
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 18


 754 0014 4308     		lsrs	r3, r0, #1
 755              		.loc 1 155 5 discriminator 2 view .LVU130
 756 0016 323B     		subs	r3, r3, #50
 757              		.loc 1 155 5 discriminator 1 view .LVU131
 758 0018 A4F12802 		sub	r2, r4, #40
 759              		.loc 1 155 5 discriminator 2 view .LVU132
 760 001c 9BB2     		uxth	r3, r3
 761 001e 92B2     		uxth	r2, r2
 762 0020 F021     		movs	r1, #240
 763 0022 1E20     		movs	r0, #30
 764 0024 FFF7FEFF 		bl	BSP_LCD_FillRect
 765              	.LVL90:
 156:Core/Src/screen.c ****     BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 766              		.loc 1 156 5 is_stmt 1 view .LVU133
 767 0028 4FF07F40 		mov	r0, #-16777216
 768 002c FFF7FEFF 		bl	BSP_LCD_SetTextColor
 769              	.LVL91:
 157:Core/Src/screen.c **** }...
 770              		.loc 1 157 1 is_stmt 0 view .LVU134
 771 0030 10BD     		pop	{r4, pc}
 772              		.cfi_endproc
 773              	.LFE150:
 775              		.text
 776              	.Letext0:
 777              		.file 2 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 778              		.file 3 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 779              		.file 4 "Core/Inc/../../../Utilities/Fonts/fonts.h"
 780              		.file 5 "Core/Inc/../../Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery_lcd.h"
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 screen.c
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:20     .text.Draw_Play_Button:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:26     .text.Draw_Play_Button:00000000 Draw_Play_Button
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:71     .text.Draw_Pause_Button:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:77     .text.Draw_Pause_Button:00000000 Draw_Pause_Button
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:122    .text.Draw_Output_Button:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:128    .text.Draw_Output_Button:00000000 Draw_Output_Button
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:212    .text.Draw_SD_Button:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:218    .text.Draw_SD_Button:00000000 Draw_SD_Button
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:267    .text.Draw_AI_Button:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:273    .text.Draw_AI_Button:00000000 Draw_AI_Button
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:392    .rodata.print_Menu_Interface.str1.4:00000000 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:411    .text.print_Menu_Interface:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:417    .text.print_Menu_Interface:00000000 print_Menu_Interface
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:713    .text.print_Menu_Interface:000001d8 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:725    .text.Clear_Log:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccXkUZM7.s:731    .text.Clear_Log:00000000 Clear_Log

UNDEFINED SYMBOLS
BSP_LCD_SetTextColor
BSP_LCD_DrawRect
FillTriangle
BSP_LCD_FillRect
BSP_LCD_FillCircle
BSP_LCD_Clear
BSP_LCD_SetFont
BSP_LCD_SetBackColor
BSP_LCD_DisplayStringAt
BSP_LCD_GetYSize
BSP_LCD_GetXSize
Font24
Font20
