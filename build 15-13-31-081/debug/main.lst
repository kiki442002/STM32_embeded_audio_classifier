ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/main.c"
  19              		.section	.text.SCB_EnableICache,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	SCB_EnableICache:
  26              	.LFB126:
  27              		.file 2 "Drivers/CMSIS/Include/core_cm7.h"
   1:Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************/ /**
   2:Drivers/CMSIS/Include/core_cm7.h ****                                                                               * @file     core_cm7.
   3:Drivers/CMSIS/Include/core_cm7.h ****                                                                               * @brief    CMSIS Cor
   4:Drivers/CMSIS/Include/core_cm7.h ****                                                                               * @version  V5.0.8
   5:Drivers/CMSIS/Include/core_cm7.h ****                                                                               * @date     04. June 
   6:Drivers/CMSIS/Include/core_cm7.h ****                                                                               *********************
   7:Drivers/CMSIS/Include/core_cm7.h **** /*
   8:Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm7.h ****  *
  10:Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm7.h ****  *
  12:Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm7.h ****  *
  16:Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm7.h ****  *
  18:Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm7.h ****  */
  24:Drivers/CMSIS/Include/core_cm7.h **** 
  25:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__ICCARM__)
  26:Drivers/CMSIS/Include/core_cm7.h **** #pragma system_include /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__clang__)
  28:Drivers/CMSIS/Include/core_cm7.h **** #pragma clang system_header /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:Drivers/CMSIS/Include/core_cm7.h **** 
  31:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 2


  32:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm7.h **** 
  34:Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm7.h **** 
  36:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm7.h **** extern "C"
  38:Drivers/CMSIS/Include/core_cm7.h **** {
  39:Drivers/CMSIS/Include/core_cm7.h **** #endif
  40:Drivers/CMSIS/Include/core_cm7.h **** 
  41:Drivers/CMSIS/Include/core_cm7.h ****   /**
  42:Drivers/CMSIS/Include/core_cm7.h ****     \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  43:Drivers/CMSIS/Include/core_cm7.h ****     CMSIS violates the following MISRA-C:2004 rules:
  44:Drivers/CMSIS/Include/core_cm7.h **** 
  45:Drivers/CMSIS/Include/core_cm7.h ****      \li Required Rule 8.5, object/function definition in header file.<br>
  46:Drivers/CMSIS/Include/core_cm7.h ****        Function definitions in header files are used to allow 'inlining'.
  47:Drivers/CMSIS/Include/core_cm7.h **** 
  48:Drivers/CMSIS/Include/core_cm7.h ****      \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  49:Drivers/CMSIS/Include/core_cm7.h ****        Unions are used for effective representation of core registers.
  50:Drivers/CMSIS/Include/core_cm7.h **** 
  51:Drivers/CMSIS/Include/core_cm7.h ****      \li Advisory Rule 19.7, Function-like macro defined.<br>
  52:Drivers/CMSIS/Include/core_cm7.h ****        Function-like macros are used to allow more efficient code.
  53:Drivers/CMSIS/Include/core_cm7.h ****    */
  54:Drivers/CMSIS/Include/core_cm7.h **** 
  55:Drivers/CMSIS/Include/core_cm7.h ****   /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm7.h ****    *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm7.h ****    ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm7.h ****   /**
  59:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup Cortex_M7
  60:Drivers/CMSIS/Include/core_cm7.h ****     @{
  61:Drivers/CMSIS/Include/core_cm7.h ****    */
  62:Drivers/CMSIS/Include/core_cm7.h **** 
  63:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm7.h **** 
  65:Drivers/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN (__CM_CMSIS_VERSION_MAIN) /*!< \deprecated [31:16] CMSIS HAL main 
  67:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB (__CM_CMSIS_VERSION_SUB)   /*!< \deprecated [15:0]  CMSIS HAL sub v
  68:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm7.h ****                              __CM7_CMSIS_VERSION_SUB) /*!< \deprecated CMSIS HAL version number */
  70:Drivers/CMSIS/Include/core_cm7.h **** 
  71:Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M (7U) /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_PRESENT 1U
  73:Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm7.h **** */
  76:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__CC_ARM)
  77:Drivers/CMSIS/Include/core_cm7.h **** #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
  80:Drivers/CMSIS/Include/core_cm7.h **** #else
  81:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  82:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
  83:Drivers/CMSIS/Include/core_cm7.h **** #endif
  84:Drivers/CMSIS/Include/core_cm7.h **** #else
  85:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
  86:Drivers/CMSIS/Include/core_cm7.h **** #endif
  87:Drivers/CMSIS/Include/core_cm7.h **** 
  88:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 3


  89:Drivers/CMSIS/Include/core_cm7.h **** #if defined __ARM_PCS_VFP
  90:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
  92:Drivers/CMSIS/Include/core_cm7.h **** #else
  93:Drivers/CMSIS/Include/core_cm7.h **** #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  94:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
  95:Drivers/CMSIS/Include/core_cm7.h **** #endif
  96:Drivers/CMSIS/Include/core_cm7.h **** #else
  97:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
  98:Drivers/CMSIS/Include/core_cm7.h **** #endif
  99:Drivers/CMSIS/Include/core_cm7.h **** 
 100:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__GNUC__)
 101:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
 104:Drivers/CMSIS/Include/core_cm7.h **** #else
 105:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 107:Drivers/CMSIS/Include/core_cm7.h **** #endif
 108:Drivers/CMSIS/Include/core_cm7.h **** #else
 109:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 110:Drivers/CMSIS/Include/core_cm7.h **** #endif
 111:Drivers/CMSIS/Include/core_cm7.h **** 
 112:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ICCARM__)
 113:Drivers/CMSIS/Include/core_cm7.h **** #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
 116:Drivers/CMSIS/Include/core_cm7.h **** #else
 117:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 118:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 119:Drivers/CMSIS/Include/core_cm7.h **** #endif
 120:Drivers/CMSIS/Include/core_cm7.h **** #else
 121:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 122:Drivers/CMSIS/Include/core_cm7.h **** #endif
 123:Drivers/CMSIS/Include/core_cm7.h **** 
 124:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__TI_ARM__)
 125:Drivers/CMSIS/Include/core_cm7.h **** #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
 128:Drivers/CMSIS/Include/core_cm7.h **** #else
 129:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 130:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 131:Drivers/CMSIS/Include/core_cm7.h **** #endif
 132:Drivers/CMSIS/Include/core_cm7.h **** #else
 133:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 134:Drivers/CMSIS/Include/core_cm7.h **** #endif
 135:Drivers/CMSIS/Include/core_cm7.h **** 
 136:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__TASKING__)
 137:Drivers/CMSIS/Include/core_cm7.h **** #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
 140:Drivers/CMSIS/Include/core_cm7.h **** #else
 141:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 142:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 143:Drivers/CMSIS/Include/core_cm7.h **** #endif
 144:Drivers/CMSIS/Include/core_cm7.h **** #else
 145:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 4


 146:Drivers/CMSIS/Include/core_cm7.h **** #endif
 147:Drivers/CMSIS/Include/core_cm7.h **** 
 148:Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__CSMC__)
 149:Drivers/CMSIS/Include/core_cm7.h **** #if (__CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 1U
 152:Drivers/CMSIS/Include/core_cm7.h **** #else
 153:Drivers/CMSIS/Include/core_cm7.h **** #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 155:Drivers/CMSIS/Include/core_cm7.h **** #endif
 156:Drivers/CMSIS/Include/core_cm7.h **** #else
 157:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_USED 0U
 158:Drivers/CMSIS/Include/core_cm7.h **** #endif
 159:Drivers/CMSIS/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Include/core_cm7.h **** #endif
 161:Drivers/CMSIS/Include/core_cm7.h **** 
 162:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h" /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm7.h **** 
 164:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 165:Drivers/CMSIS/Include/core_cm7.h **** }
 166:Drivers/CMSIS/Include/core_cm7.h **** #endif
 167:Drivers/CMSIS/Include/core_cm7.h **** 
 168:Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 169:Drivers/CMSIS/Include/core_cm7.h **** 
 170:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 171:Drivers/CMSIS/Include/core_cm7.h **** 
 172:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 173:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm7.h **** 
 175:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 176:Drivers/CMSIS/Include/core_cm7.h **** extern "C"
 177:Drivers/CMSIS/Include/core_cm7.h **** {
 178:Drivers/CMSIS/Include/core_cm7.h **** #endif
 179:Drivers/CMSIS/Include/core_cm7.h **** 
 180:Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CM7_REV
 183:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_REV 0x0000U
 184:Drivers/CMSIS/Include/core_cm7.h **** #warning "__CM7_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm7.h **** #endif
 186:Drivers/CMSIS/Include/core_cm7.h **** 
 187:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm7.h **** #define __FPU_PRESENT 0U
 189:Drivers/CMSIS/Include/core_cm7.h **** #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm7.h **** #endif
 191:Drivers/CMSIS/Include/core_cm7.h **** 
 192:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm7.h **** #define __MPU_PRESENT 0U
 194:Drivers/CMSIS/Include/core_cm7.h **** #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm7.h **** #endif
 196:Drivers/CMSIS/Include/core_cm7.h **** 
 197:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __ICACHE_PRESENT
 198:Drivers/CMSIS/Include/core_cm7.h **** #define __ICACHE_PRESENT 0U
 199:Drivers/CMSIS/Include/core_cm7.h **** #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm7.h **** #endif
 201:Drivers/CMSIS/Include/core_cm7.h **** 
 202:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __DCACHE_PRESENT
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 5


 203:Drivers/CMSIS/Include/core_cm7.h **** #define __DCACHE_PRESENT 0U
 204:Drivers/CMSIS/Include/core_cm7.h **** #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm7.h **** #endif
 206:Drivers/CMSIS/Include/core_cm7.h **** 
 207:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __DTCM_PRESENT
 208:Drivers/CMSIS/Include/core_cm7.h **** #define __DTCM_PRESENT 0U
 209:Drivers/CMSIS/Include/core_cm7.h **** #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm7.h **** #endif
 211:Drivers/CMSIS/Include/core_cm7.h **** 
 212:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __NVIC_PRIO_BITS
 213:Drivers/CMSIS/Include/core_cm7.h **** #define __NVIC_PRIO_BITS 3U
 214:Drivers/CMSIS/Include/core_cm7.h **** #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:Drivers/CMSIS/Include/core_cm7.h **** #endif
 216:Drivers/CMSIS/Include/core_cm7.h **** 
 217:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __Vendor_SysTickConfig
 218:Drivers/CMSIS/Include/core_cm7.h **** #define __Vendor_SysTickConfig 0U
 219:Drivers/CMSIS/Include/core_cm7.h **** #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:Drivers/CMSIS/Include/core_cm7.h **** #endif
 221:Drivers/CMSIS/Include/core_cm7.h **** #endif
 222:Drivers/CMSIS/Include/core_cm7.h **** 
 223:Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:Drivers/CMSIS/Include/core_cm7.h **** /**
 225:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:Drivers/CMSIS/Include/core_cm7.h **** 
 227:Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:Drivers/CMSIS/Include/core_cm7.h **** */
 231:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:Drivers/CMSIS/Include/core_cm7.h **** #define __I volatile /*!< Defines 'read only' permissions */
 233:Drivers/CMSIS/Include/core_cm7.h **** #else
 234:Drivers/CMSIS/Include/core_cm7.h **** #define __I volatile const /*!< Defines 'read only' permissions */
 235:Drivers/CMSIS/Include/core_cm7.h **** #endif
 236:Drivers/CMSIS/Include/core_cm7.h **** #define __O volatile  /*!< Defines 'write only' permissions */
 237:Drivers/CMSIS/Include/core_cm7.h **** #define __IO volatile /*!< Defines 'read / write' permissions */
 238:Drivers/CMSIS/Include/core_cm7.h **** 
 239:Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:Drivers/CMSIS/Include/core_cm7.h **** #define __IM volatile const /*! Defines 'read only' structure member permissions */
 241:Drivers/CMSIS/Include/core_cm7.h **** #define __OM volatile       /*! Defines 'write only' structure member permissions */
 242:Drivers/CMSIS/Include/core_cm7.h **** #define __IOM volatile      /*! Defines 'read / write' structure member permissions */
 243:Drivers/CMSIS/Include/core_cm7.h **** 
 244:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group Cortex_M7 */
 245:Drivers/CMSIS/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Include/core_cm7.h ****   /*******************************************************************************
 247:Drivers/CMSIS/Include/core_cm7.h ****    *                 Register Abstraction
 248:Drivers/CMSIS/Include/core_cm7.h ****     Core Register contain:
 249:Drivers/CMSIS/Include/core_cm7.h ****     - Core Register
 250:Drivers/CMSIS/Include/core_cm7.h ****     - Core NVIC Register
 251:Drivers/CMSIS/Include/core_cm7.h ****     - Core SCB Register
 252:Drivers/CMSIS/Include/core_cm7.h ****     - Core SysTick Register
 253:Drivers/CMSIS/Include/core_cm7.h ****     - Core Debug Register
 254:Drivers/CMSIS/Include/core_cm7.h ****     - Core MPU Register
 255:Drivers/CMSIS/Include/core_cm7.h ****     - Core FPU Register
 256:Drivers/CMSIS/Include/core_cm7.h ****    ******************************************************************************/
 257:Drivers/CMSIS/Include/core_cm7.h ****   /**
 258:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_core_register Defines and Type Definitions
 259:Drivers/CMSIS/Include/core_cm7.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 6


 260:Drivers/CMSIS/Include/core_cm7.h ****   */
 261:Drivers/CMSIS/Include/core_cm7.h **** 
 262:Drivers/CMSIS/Include/core_cm7.h ****   /**
 263:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup    CMSIS_core_register
 264:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 265:Drivers/CMSIS/Include/core_cm7.h ****     \brief      Core Register type definitions.
 266:Drivers/CMSIS/Include/core_cm7.h ****     @{
 267:Drivers/CMSIS/Include/core_cm7.h ****    */
 268:Drivers/CMSIS/Include/core_cm7.h **** 
 269:Drivers/CMSIS/Include/core_cm7.h ****   /**
 270:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Union type to access the Application Program Status Register (APSR).
 271:Drivers/CMSIS/Include/core_cm7.h ****    */
 272:Drivers/CMSIS/Include/core_cm7.h ****   typedef union
 273:Drivers/CMSIS/Include/core_cm7.h ****   {
 274:Drivers/CMSIS/Include/core_cm7.h ****     struct
 275:Drivers/CMSIS/Include/core_cm7.h ****     {
 276:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved0 : 16; /*!< bit:  0..15  Reserved */
 277:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t GE : 4;          /*!< bit: 16..19  Greater than or Equal flags */
 278:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved1 : 7;  /*!< bit: 20..26  Reserved */
 279:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t Q : 1;           /*!< bit:     27  Saturation condition flag */
 280:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t V : 1;           /*!< bit:     28  Overflow condition code flag */
 281:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t C : 1;           /*!< bit:     29  Carry condition code flag */
 282:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t Z : 1;           /*!< bit:     30  Zero condition code flag */
 283:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t N : 1;           /*!< bit:     31  Negative condition code flag */
 284:Drivers/CMSIS/Include/core_cm7.h ****     } b;                        /*!< Structure used for bit  access */
 285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t w;                 /*!< Type      used for word access */
 286:Drivers/CMSIS/Include/core_cm7.h ****   } APSR_Type;
 287:Drivers/CMSIS/Include/core_cm7.h **** 
 288:Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 289:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos 31U                 /*!< APSR: N Position */
 290:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk (1UL << APSR_N_Pos) /*!< APSR: N Mask */
 291:Drivers/CMSIS/Include/core_cm7.h **** 
 292:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos 30U                 /*!< APSR: Z Position */
 293:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk (1UL << APSR_Z_Pos) /*!< APSR: Z Mask */
 294:Drivers/CMSIS/Include/core_cm7.h **** 
 295:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos 29U                 /*!< APSR: C Position */
 296:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk (1UL << APSR_C_Pos) /*!< APSR: C Mask */
 297:Drivers/CMSIS/Include/core_cm7.h **** 
 298:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos 28U                 /*!< APSR: V Position */
 299:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk (1UL << APSR_V_Pos) /*!< APSR: V Mask */
 300:Drivers/CMSIS/Include/core_cm7.h **** 
 301:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos 27U                 /*!< APSR: Q Position */
 302:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk (1UL << APSR_Q_Pos) /*!< APSR: Q Mask */
 303:Drivers/CMSIS/Include/core_cm7.h **** 
 304:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos 16U                    /*!< APSR: GE Position */
 305:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk (0xFUL << APSR_GE_Pos) /*!< APSR: GE Mask */
 306:Drivers/CMSIS/Include/core_cm7.h **** 
 307:Drivers/CMSIS/Include/core_cm7.h ****   /**
 308:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Union type to access the Interrupt Program Status Register (IPSR).
 309:Drivers/CMSIS/Include/core_cm7.h ****    */
 310:Drivers/CMSIS/Include/core_cm7.h ****   typedef union
 311:Drivers/CMSIS/Include/core_cm7.h ****   {
 312:Drivers/CMSIS/Include/core_cm7.h ****     struct
 313:Drivers/CMSIS/Include/core_cm7.h ****     {
 314:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t ISR : 9;         /*!< bit:  0.. 8  Exception number */
 315:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved0 : 23; /*!< bit:  9..31  Reserved */
 316:Drivers/CMSIS/Include/core_cm7.h ****     } b;                        /*!< Structure used for bit  access */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 7


 317:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t w;                 /*!< Type      used for word access */
 318:Drivers/CMSIS/Include/core_cm7.h ****   } IPSR_Type;
 319:Drivers/CMSIS/Include/core_cm7.h **** 
 320:Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 321:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos 0U                            /*!< IPSR: ISR Position */
 322:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk (0x1FFUL /*<< IPSR_ISR_Pos*/) /*!< IPSR: ISR Mask */
 323:Drivers/CMSIS/Include/core_cm7.h **** 
 324:Drivers/CMSIS/Include/core_cm7.h ****   /**
 325:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 326:Drivers/CMSIS/Include/core_cm7.h ****    */
 327:Drivers/CMSIS/Include/core_cm7.h ****   typedef union
 328:Drivers/CMSIS/Include/core_cm7.h ****   {
 329:Drivers/CMSIS/Include/core_cm7.h ****     struct
 330:Drivers/CMSIS/Include/core_cm7.h ****     {
 331:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t ISR : 9;        /*!< bit:  0.. 8  Exception number */
 332:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved0 : 1; /*!< bit:      9  Reserved */
 333:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t ICI_IT_1 : 6;   /*!< bit: 10..15  ICI/IT part 1 */
 334:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t GE : 4;         /*!< bit: 16..19  Greater than or Equal flags */
 335:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved1 : 4; /*!< bit: 20..23  Reserved */
 336:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t T : 1;          /*!< bit:     24  Thumb bit */
 337:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t ICI_IT_2 : 2;   /*!< bit: 25..26  ICI/IT part 2 */
 338:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t Q : 1;          /*!< bit:     27  Saturation condition flag */
 339:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t V : 1;          /*!< bit:     28  Overflow condition code flag */
 340:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t C : 1;          /*!< bit:     29  Carry condition code flag */
 341:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t Z : 1;          /*!< bit:     30  Zero condition code flag */
 342:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t N : 1;          /*!< bit:     31  Negative condition code flag */
 343:Drivers/CMSIS/Include/core_cm7.h ****     } b;                       /*!< Structure used for bit  access */
 344:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t w;                /*!< Type      used for word access */
 345:Drivers/CMSIS/Include/core_cm7.h ****   } xPSR_Type;
 346:Drivers/CMSIS/Include/core_cm7.h **** 
 347:Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 348:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos 31U                 /*!< xPSR: N Position */
 349:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk (1UL << xPSR_N_Pos) /*!< xPSR: N Mask */
 350:Drivers/CMSIS/Include/core_cm7.h **** 
 351:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos 30U                 /*!< xPSR: Z Position */
 352:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk (1UL << xPSR_Z_Pos) /*!< xPSR: Z Mask */
 353:Drivers/CMSIS/Include/core_cm7.h **** 
 354:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos 29U                 /*!< xPSR: C Position */
 355:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk (1UL << xPSR_C_Pos) /*!< xPSR: C Mask */
 356:Drivers/CMSIS/Include/core_cm7.h **** 
 357:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos 28U                 /*!< xPSR: V Position */
 358:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk (1UL << xPSR_V_Pos) /*!< xPSR: V Mask */
 359:Drivers/CMSIS/Include/core_cm7.h **** 
 360:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos 27U                 /*!< xPSR: Q Position */
 361:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk (1UL << xPSR_Q_Pos) /*!< xPSR: Q Mask */
 362:Drivers/CMSIS/Include/core_cm7.h **** 
 363:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos 25U                        /*!< xPSR: ICI/IT part 2 Position */
 364:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk (3UL << xPSR_ICI_IT_2_Pos) /*!< xPSR: ICI/IT part 2 Mask */
 365:Drivers/CMSIS/Include/core_cm7.h **** 
 366:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos 24U                 /*!< xPSR: T Position */
 367:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk (1UL << xPSR_T_Pos) /*!< xPSR: T Mask */
 368:Drivers/CMSIS/Include/core_cm7.h **** 
 369:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos 16U                    /*!< xPSR: GE Position */
 370:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk (0xFUL << xPSR_GE_Pos) /*!< xPSR: GE Mask */
 371:Drivers/CMSIS/Include/core_cm7.h **** 
 372:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos 10U                           /*!< xPSR: ICI/IT part 1 Position */
 373:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk (0x3FUL << xPSR_ICI_IT_1_Pos) /*!< xPSR: ICI/IT part 1 Mask */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 8


 374:Drivers/CMSIS/Include/core_cm7.h **** 
 375:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos 0U                            /*!< xPSR: ISR Position */
 376:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk (0x1FFUL /*<< xPSR_ISR_Pos*/) /*!< xPSR: ISR Mask */
 377:Drivers/CMSIS/Include/core_cm7.h **** 
 378:Drivers/CMSIS/Include/core_cm7.h ****   /**
 379:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Union type to access the Control Registers (CONTROL).
 380:Drivers/CMSIS/Include/core_cm7.h ****    */
 381:Drivers/CMSIS/Include/core_cm7.h ****   typedef union
 382:Drivers/CMSIS/Include/core_cm7.h ****   {
 383:Drivers/CMSIS/Include/core_cm7.h ****     struct
 384:Drivers/CMSIS/Include/core_cm7.h ****     {
 385:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t nPRIV : 1;       /*!< bit:      0  Execution privilege in Thread mode */
 386:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t SPSEL : 1;       /*!< bit:      1  Stack to be used */
 387:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t FPCA : 1;        /*!< bit:      2  FP extension active flag */
 388:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t _reserved0 : 29; /*!< bit:  3..31  Reserved */
 389:Drivers/CMSIS/Include/core_cm7.h ****     } b;                        /*!< Structure used for bit  access */
 390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t w;                 /*!< Type      used for word access */
 391:Drivers/CMSIS/Include/core_cm7.h ****   } CONTROL_Type;
 392:Drivers/CMSIS/Include/core_cm7.h **** 
 393:Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 394:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos 2U                        /*!< CONTROL: FPCA Position */
 395:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk (1UL << CONTROL_FPCA_Pos) /*!< CONTROL: FPCA Mask */
 396:Drivers/CMSIS/Include/core_cm7.h **** 
 397:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos 1U                         /*!< CONTROL: SPSEL Position */
 398:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk (1UL << CONTROL_SPSEL_Pos) /*!< CONTROL: SPSEL Mask */
 399:Drivers/CMSIS/Include/core_cm7.h **** 
 400:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos 0U                             /*!< CONTROL: nPRIV Position */
 401:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk (1UL /*<< CONTROL_nPRIV_Pos*/) /*!< CONTROL: nPRIV Mask */
 402:Drivers/CMSIS/Include/core_cm7.h **** 
 403:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_CORE */
 404:Drivers/CMSIS/Include/core_cm7.h **** 
 405:Drivers/CMSIS/Include/core_cm7.h ****   /**
 406:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup    CMSIS_core_register
 407:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 408:Drivers/CMSIS/Include/core_cm7.h ****     \brief      Type definitions for the NVIC Registers
 409:Drivers/CMSIS/Include/core_cm7.h ****     @{
 410:Drivers/CMSIS/Include/core_cm7.h ****    */
 411:Drivers/CMSIS/Include/core_cm7.h **** 
 412:Drivers/CMSIS/Include/core_cm7.h ****   /**
 413:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 414:Drivers/CMSIS/Include/core_cm7.h ****    */
 415:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
 416:Drivers/CMSIS/Include/core_cm7.h ****   {
 417:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ISER[8U]; /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 418:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[24U];
 419:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ICER[8U]; /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register */
 420:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RSERVED1[24U];
 421:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ISPR[8U]; /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register */
 422:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED2[24U];
 423:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ICPR[8U]; /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register */
 424:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED3[24U];
 425:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t IABR[8U]; /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 426:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED4[56U];
 427:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint8_t IP[240U]; /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bit wide) */
 428:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED5[644U];
 429:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t STIR; /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Register */
 430:Drivers/CMSIS/Include/core_cm7.h ****   } NVIC_Type;
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 9


 431:Drivers/CMSIS/Include/core_cm7.h **** 
 432:Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 433:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos 0U                                   /*!< STIR: INTLINESNUM Position */
 434:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/) /*!< STIR: INTLINESNUM Mask */
 435:Drivers/CMSIS/Include/core_cm7.h **** 
 436:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_NVIC */
 437:Drivers/CMSIS/Include/core_cm7.h **** 
 438:Drivers/CMSIS/Include/core_cm7.h ****   /**
 439:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
 440:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 441:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the System Control Block Registers
 442:Drivers/CMSIS/Include/core_cm7.h ****     @{
 443:Drivers/CMSIS/Include/core_cm7.h ****    */
 444:Drivers/CMSIS/Include/core_cm7.h **** 
 445:Drivers/CMSIS/Include/core_cm7.h ****   /**
 446:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the System Control Block (SCB).
 447:Drivers/CMSIS/Include/core_cm7.h ****    */
 448:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
 449:Drivers/CMSIS/Include/core_cm7.h ****   {
 450:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CPUID;       /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 451:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ICSR;       /*!< Offset: 0x004 (R/W)  Interrupt Control and State Register */
 452:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t VTOR;       /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 453:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t AIRCR;      /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset Control Re
 454:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t SCR;        /*!< Offset: 0x010 (R/W)  System Control Register */
 455:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CCR;        /*!< Offset: 0x014 (R/W)  Configuration Control Register */
 456:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint8_t SHPR[12U];   /*!< Offset: 0x018 (R/W)  System Handlers Priority Registers (4-7, 8
 457:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t SHCSR;      /*!< Offset: 0x024 (R/W)  System Handler Control and State Register 
 458:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CFSR;       /*!< Offset: 0x028 (R/W)  Configurable Fault Status Register */
 459:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t HFSR;       /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 460:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t DFSR;       /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 461:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t MMFAR;      /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register */
 462:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t BFAR;       /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 463:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t AFSR;       /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register */
 464:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ID_PFR[2U];  /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 465:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ID_DFR;      /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 466:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ID_AFR;      /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 467:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ID_MFR[4U];  /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 468:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ID_ISAR[5U]; /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Register */
 469:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[1U];
 470:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CLIDR;   /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 471:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CTR;     /*!< Offset: 0x07C (R/ )  Cache Type register */
 472:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CCSIDR;  /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 473:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CSSELR; /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 474:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CPACR;  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Register */
 475:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED3[93U];
 476:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t STIR; /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Register */
 477:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED4[15U];
 478:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR0; /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0 */
 479:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR1; /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1 */
 480:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR2; /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2 */
 481:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED5[1U];
 482:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t ICIALLU; /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 483:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED6[1U];
 484:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t ICIMVAU;  /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU */
 485:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCIMVAC;  /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC */
 486:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCISW;    /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 487:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCCMVAU;  /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 10


 488:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCCMVAC;  /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 489:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCCSW;    /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 490:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCCIMVAC; /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by MVA to PoC */
 491:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCCISW;   /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by Set-way */
 492:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED7[6U];
 493:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ITCMCR; /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memory Control Reg
 494:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t DTCMCR; /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Control Registers 
 495:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t AHBPCR; /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 496:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CACR;   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 497:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t AHBSCR; /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 498:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED8[1U];
 499:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ABFSR; /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Register */
 500:Drivers/CMSIS/Include/core_cm7.h ****   } SCB_Type;
 501:Drivers/CMSIS/Include/core_cm7.h **** 
 502:Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 503:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos 24U                                   /*!< SCB CPUID: IMPLEMENTER
 504:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos) /*!< SCB CPUID: IMPLEMENTER
 505:Drivers/CMSIS/Include/core_cm7.h **** 
 506:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos 20U                              /*!< SCB CPUID: VARIANT Position */
 507:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk (0xFUL << SCB_CPUID_VARIANT_Pos) /*!< SCB CPUID: VARIANT Mask */
 508:Drivers/CMSIS/Include/core_cm7.h **** 
 509:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos 16U                                   /*!< SCB CPUID: ARCHITECTU
 510:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk (0xFUL << SCB_CPUID_ARCHITECTURE_Pos) /*!< SCB CPUID: ARCHITECTU
 511:Drivers/CMSIS/Include/core_cm7.h **** 
 512:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos 4U                                /*!< SCB CPUID: PARTNO Position */
 513:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk (0xFFFUL << SCB_CPUID_PARTNO_Pos) /*!< SCB CPUID: PARTNO Mask */
 514:Drivers/CMSIS/Include/core_cm7.h **** 
 515:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos 0U                                    /*!< SCB CPUID: REVISION Posit
 516:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk (0xFUL /*<< SCB_CPUID_REVISION_Pos*/) /*!< SCB CPUID: REVISION Mask 
 517:Drivers/CMSIS/Include/core_cm7.h **** 
 518:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 519:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos 31U                              /*!< SCB ICSR: NMIPENDSET Position
 520:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk (1UL << SCB_ICSR_NMIPENDSET_Pos) /*!< SCB ICSR: NMIPENDSET Mask */
 521:Drivers/CMSIS/Include/core_cm7.h **** 
 522:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos 28U                             /*!< SCB ICSR: PENDSVSET Position */
 523:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk (1UL << SCB_ICSR_PENDSVSET_Pos) /*!< SCB ICSR: PENDSVSET Mask */
 524:Drivers/CMSIS/Include/core_cm7.h **** 
 525:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos 27U                             /*!< SCB ICSR: PENDSVCLR Position */
 526:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk (1UL << SCB_ICSR_PENDSVCLR_Pos) /*!< SCB ICSR: PENDSVCLR Mask */
 527:Drivers/CMSIS/Include/core_cm7.h **** 
 528:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos 26U                             /*!< SCB ICSR: PENDSTSET Position */
 529:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk (1UL << SCB_ICSR_PENDSTSET_Pos) /*!< SCB ICSR: PENDSTSET Mask */
 530:Drivers/CMSIS/Include/core_cm7.h **** 
 531:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos 25U                             /*!< SCB ICSR: PENDSTCLR Position */
 532:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk (1UL << SCB_ICSR_PENDSTCLR_Pos) /*!< SCB ICSR: PENDSTCLR Mask */
 533:Drivers/CMSIS/Include/core_cm7.h **** 
 534:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos 23U                              /*!< SCB ICSR: ISRPREEMPT Position
 535:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk (1UL << SCB_ICSR_ISRPREEMPT_Pos) /*!< SCB ICSR: ISRPREEMPT Mask */
 536:Drivers/CMSIS/Include/core_cm7.h **** 
 537:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos 22U                              /*!< SCB ICSR: ISRPENDING Position
 538:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk (1UL << SCB_ICSR_ISRPENDING_Pos) /*!< SCB ICSR: ISRPENDING Mask */
 539:Drivers/CMSIS/Include/core_cm7.h **** 
 540:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos 12U                                   /*!< SCB ICSR: VECTPENDING P
 541:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk (0x1FFUL << SCB_ICSR_VECTPENDING_Pos) /*!< SCB ICSR: VECTPENDING M
 542:Drivers/CMSIS/Include/core_cm7.h **** 
 543:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos 11U                             /*!< SCB ICSR: RETTOBASE Position */
 544:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk (1UL << SCB_ICSR_RETTOBASE_Pos) /*!< SCB ICSR: RETTOBASE Mask */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 11


 545:Drivers/CMSIS/Include/core_cm7.h **** 
 546:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos 0U                                       /*!< SCB ICSR: VECTACTIVE 
 547:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/) /*!< SCB ICSR: VECTACTIVE 
 548:Drivers/CMSIS/Include/core_cm7.h **** 
 549:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 550:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos 7U                                   /*!< SCB VTOR: TBLOFF Position */
 551:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos) /*!< SCB VTOR: TBLOFF Mask */
 552:Drivers/CMSIS/Include/core_cm7.h **** 
 553:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 554:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos 16U                                 /*!< SCB AIRCR: VECTKEY Position 
 555:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos) /*!< SCB AIRCR: VECTKEY Mask */
 556:Drivers/CMSIS/Include/core_cm7.h **** 
 557:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos 16U                                     /*!< SCB AIRCR: VECTKEYST
 558:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos) /*!< SCB AIRCR: VECTKEYST
 559:Drivers/CMSIS/Include/core_cm7.h **** 
 560:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos 15U                              /*!< SCB AIRCR: ENDIANESS Position
 561:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk (1UL << SCB_AIRCR_ENDIANESS_Pos) /*!< SCB AIRCR: ENDIANESS Mask */
 562:Drivers/CMSIS/Include/core_cm7.h **** 
 563:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos 8U                              /*!< SCB AIRCR: PRIGROUP Position */
 564:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk (7UL << SCB_AIRCR_PRIGROUP_Pos) /*!< SCB AIRCR: PRIGROUP Mask */
 565:Drivers/CMSIS/Include/core_cm7.h **** 
 566:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos 2U                                 /*!< SCB AIRCR: SYSRESETREQ Po
 567:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk (1UL << SCB_AIRCR_SYSRESETREQ_Pos) /*!< SCB AIRCR: SYSRESETREQ Ma
 568:Drivers/CMSIS/Include/core_cm7.h **** 
 569:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos 1U                                   /*!< SCB AIRCR: VECTCLRACT
 570:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos) /*!< SCB AIRCR: VECTCLRACT
 571:Drivers/CMSIS/Include/core_cm7.h **** 
 572:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos 0U                                   /*!< SCB AIRCR: VECTRESET Posi
 573:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/) /*!< SCB AIRCR: VECTRESET Mask
 574:Drivers/CMSIS/Include/core_cm7.h **** 
 575:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 576:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos 4U                             /*!< SCB SCR: SEVONPEND Position */
 577:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk (1UL << SCB_SCR_SEVONPEND_Pos) /*!< SCB SCR: SEVONPEND Mask */
 578:Drivers/CMSIS/Include/core_cm7.h **** 
 579:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos 2U                             /*!< SCB SCR: SLEEPDEEP Position */
 580:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk (1UL << SCB_SCR_SLEEPDEEP_Pos) /*!< SCB SCR: SLEEPDEEP Mask */
 581:Drivers/CMSIS/Include/core_cm7.h **** 
 582:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos 1U                               /*!< SCB SCR: SLEEPONEXIT Position
 583:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk (1UL << SCB_SCR_SLEEPONEXIT_Pos) /*!< SCB SCR: SLEEPONEXIT Mask */
 584:Drivers/CMSIS/Include/core_cm7.h **** 
 585:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 586:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos 18U                     /*!< SCB CCR: Branch prediction enable bit Position 
 587:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk (1UL << SCB_CCR_BP_Pos) /*!< SCB CCR: Branch prediction enable bit Mask */
 588:Drivers/CMSIS/Include/core_cm7.h **** 
 589:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos 17U                     /*!< SCB CCR: Instruction cache enable bit Position 
 590:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk (1UL << SCB_CCR_IC_Pos) /*!< SCB CCR: Instruction cache enable bit Mask */
 591:Drivers/CMSIS/Include/core_cm7.h **** 
 592:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos 16U                     /*!< SCB CCR: Cache enable bit Position */
 593:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk (1UL << SCB_CCR_DC_Pos) /*!< SCB CCR: Cache enable bit Mask */
 594:Drivers/CMSIS/Include/core_cm7.h **** 
 595:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos 9U                            /*!< SCB CCR: STKALIGN Position */
 596:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk (1UL << SCB_CCR_STKALIGN_Pos) /*!< SCB CCR: STKALIGN Mask */
 597:Drivers/CMSIS/Include/core_cm7.h **** 
 598:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos 8U                             /*!< SCB CCR: BFHFNMIGN Position */
 599:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk (1UL << SCB_CCR_BFHFNMIGN_Pos) /*!< SCB CCR: BFHFNMIGN Mask */
 600:Drivers/CMSIS/Include/core_cm7.h **** 
 601:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos 4U                             /*!< SCB CCR: DIV_0_TRP Position */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 12


 602:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk (1UL << SCB_CCR_DIV_0_TRP_Pos) /*!< SCB CCR: DIV_0_TRP Mask */
 603:Drivers/CMSIS/Include/core_cm7.h **** 
 604:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos 3U                               /*!< SCB CCR: UNALIGN_TRP Position
 605:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk (1UL << SCB_CCR_UNALIGN_TRP_Pos) /*!< SCB CCR: UNALIGN_TRP Mask */
 606:Drivers/CMSIS/Include/core_cm7.h **** 
 607:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos 1U                                /*!< SCB CCR: USERSETMPEND Posit
 608:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk (1UL << SCB_CCR_USERSETMPEND_Pos) /*!< SCB CCR: USERSETMPEND Mask 
 609:Drivers/CMSIS/Include/core_cm7.h **** 
 610:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos 0U                                      /*!< SCB CCR: NONBASETHR
 611:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/) /*!< SCB CCR: NONBASETHR
 612:Drivers/CMSIS/Include/core_cm7.h **** 
 613:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 614:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos 18U                                /*!< SCB SHCSR: USGFAULTENA Po
 615:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk (1UL << SCB_SHCSR_USGFAULTENA_Pos) /*!< SCB SHCSR: USGFAULTENA Ma
 616:Drivers/CMSIS/Include/core_cm7.h **** 
 617:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos 17U                                /*!< SCB SHCSR: BUSFAULTENA Po
 618:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk (1UL << SCB_SHCSR_BUSFAULTENA_Pos) /*!< SCB SHCSR: BUSFAULTENA Ma
 619:Drivers/CMSIS/Include/core_cm7.h **** 
 620:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos 16U                                /*!< SCB SHCSR: MEMFAULTENA Po
 621:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk (1UL << SCB_SHCSR_MEMFAULTENA_Pos) /*!< SCB SHCSR: MEMFAULTENA Ma
 622:Drivers/CMSIS/Include/core_cm7.h **** 
 623:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos 15U                                 /*!< SCB SHCSR: SVCALLPENDED
 624:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk (1UL << SCB_SHCSR_SVCALLPENDED_Pos) /*!< SCB SHCSR: SVCALLPENDED
 625:Drivers/CMSIS/Include/core_cm7.h **** 
 626:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos 14U                                   /*!< SCB SHCSR: BUSFAULT
 627:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos) /*!< SCB SHCSR: BUSFAULT
 628:Drivers/CMSIS/Include/core_cm7.h **** 
 629:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos 13U                                   /*!< SCB SHCSR: MEMFAULT
 630:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos) /*!< SCB SHCSR: MEMFAULT
 631:Drivers/CMSIS/Include/core_cm7.h **** 
 632:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos 12U                                   /*!< SCB SHCSR: USGFAULT
 633:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk (1UL << SCB_SHCSR_USGFAULTPENDED_Pos) /*!< SCB SHCSR: USGFAULT
 634:Drivers/CMSIS/Include/core_cm7.h **** 
 635:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos 11U                               /*!< SCB SHCSR: SYSTICKACT Posit
 636:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk (1UL << SCB_SHCSR_SYSTICKACT_Pos) /*!< SCB SHCSR: SYSTICKACT Mask 
 637:Drivers/CMSIS/Include/core_cm7.h **** 
 638:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos 10U                              /*!< SCB SHCSR: PENDSVACT Position
 639:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk (1UL << SCB_SHCSR_PENDSVACT_Pos) /*!< SCB SHCSR: PENDSVACT Mask */
 640:Drivers/CMSIS/Include/core_cm7.h **** 
 641:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos 8U                                /*!< SCB SHCSR: MONITORACT Posit
 642:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk (1UL << SCB_SHCSR_MONITORACT_Pos) /*!< SCB SHCSR: MONITORACT Mask 
 643:Drivers/CMSIS/Include/core_cm7.h **** 
 644:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos 7U                               /*!< SCB SHCSR: SVCALLACT Position
 645:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk (1UL << SCB_SHCSR_SVCALLACT_Pos) /*!< SCB SHCSR: SVCALLACT Mask */
 646:Drivers/CMSIS/Include/core_cm7.h **** 
 647:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos 3U                                 /*!< SCB SHCSR: USGFAULTACT Po
 648:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk (1UL << SCB_SHCSR_USGFAULTACT_Pos) /*!< SCB SHCSR: USGFAULTACT Ma
 649:Drivers/CMSIS/Include/core_cm7.h **** 
 650:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos 1U                                 /*!< SCB SHCSR: BUSFAULTACT Po
 651:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk (1UL << SCB_SHCSR_BUSFAULTACT_Pos) /*!< SCB SHCSR: BUSFAULTACT Ma
 652:Drivers/CMSIS/Include/core_cm7.h **** 
 653:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos 0U                                     /*!< SCB SHCSR: MEMFAULTAC
 654:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/) /*!< SCB SHCSR: MEMFAULTAC
 655:Drivers/CMSIS/Include/core_cm7.h **** 
 656:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 657:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos 16U                                   /*!< SCB CFSR: Usage Fault St
 658:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos) /*!< SCB CFSR: Usage Fault St
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 13


 659:Drivers/CMSIS/Include/core_cm7.h **** 
 660:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos 8U                                  /*!< SCB CFSR: Bus Fault Status
 661:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos) /*!< SCB CFSR: Bus Fault Status
 662:Drivers/CMSIS/Include/core_cm7.h **** 
 663:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos 0U                                      /*!< SCB CFSR: Memory Manag
 664:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/) /*!< SCB CFSR: Memory Manag
 665:Drivers/CMSIS/Include/core_cm7.h **** 
 666:Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 667:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 7U) /*!< SCB CFSR (MMFSR): MMARVALID Po
 668:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk (1UL << SCB_CFSR_MMARVALID_Pos)  /*!< SCB CFSR (MMFSR): MMARVALID Ma
 669:Drivers/CMSIS/Include/core_cm7.h **** 
 670:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 5U) /*!< SCB CFSR (MMFSR): MLSPERR Positi
 671:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk (1UL << SCB_CFSR_MLSPERR_Pos)    /*!< SCB CFSR (MMFSR): MLSPERR Mask *
 672:Drivers/CMSIS/Include/core_cm7.h **** 
 673:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 4U) /*!< SCB CFSR (MMFSR): MSTKERR Positi
 674:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk (1UL << SCB_CFSR_MSTKERR_Pos)    /*!< SCB CFSR (MMFSR): MSTKERR Mask *
 675:Drivers/CMSIS/Include/core_cm7.h **** 
 676:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 3U) /*!< SCB CFSR (MMFSR): MUNSTKERR Po
 677:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk (1UL << SCB_CFSR_MUNSTKERR_Pos)  /*!< SCB CFSR (MMFSR): MUNSTKERR Ma
 678:Drivers/CMSIS/Include/core_cm7.h **** 
 679:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 1U) /*!< SCB CFSR (MMFSR): DACCVIOL Posi
 680:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk (1UL << SCB_CFSR_DACCVIOL_Pos)   /*!< SCB CFSR (MMFSR): DACCVIOL Mask
 681:Drivers/CMSIS/Include/core_cm7.h **** 
 682:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos (SCB_SHCSR_MEMFAULTACT_Pos + 0U)   /*!< SCB CFSR (MMFSR): IACCVIOL Po
 683:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/) /*!< SCB CFSR (MMFSR): IACCVIOL Ma
 684:Drivers/CMSIS/Include/core_cm7.h **** 
 685:Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 686:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos (SCB_CFSR_BUSFAULTSR_Pos + 7U)  /*!< SCB CFSR (BFSR): BFARVALID Posi
 687:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk (1UL << SCB_CFSR_BFARVALID_Pos) /*!< SCB CFSR (BFSR): BFARVALID Mask
 688:Drivers/CMSIS/Include/core_cm7.h **** 
 689:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 5U) /*!< SCB CFSR (BFSR): LSPERR Position */
 690:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk (1UL << SCB_CFSR_LSPERR_Pos)   /*!< SCB CFSR (BFSR): LSPERR Mask */
 691:Drivers/CMSIS/Include/core_cm7.h **** 
 692:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 4U) /*!< SCB CFSR (BFSR): STKERR Position */
 693:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk (1UL << SCB_CFSR_STKERR_Pos)   /*!< SCB CFSR (BFSR): STKERR Mask */
 694:Drivers/CMSIS/Include/core_cm7.h **** 
 695:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 3U) /*!< SCB CFSR (BFSR): UNSTKERR Positio
 696:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk (1UL << SCB_CFSR_UNSTKERR_Pos) /*!< SCB CFSR (BFSR): UNSTKERR Mask */
 697:Drivers/CMSIS/Include/core_cm7.h **** 
 698:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 2U)    /*!< SCB CFSR (BFSR): IMPRECISER
 699:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk (1UL << SCB_CFSR_IMPRECISERR_Pos) /*!< SCB CFSR (BFSR): IMPRECISER
 700:Drivers/CMSIS/Include/core_cm7.h **** 
 701:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 1U)  /*!< SCB CFSR (BFSR): PRECISERR Posi
 702:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk (1UL << SCB_CFSR_PRECISERR_Pos) /*!< SCB CFSR (BFSR): PRECISERR Mask
 703:Drivers/CMSIS/Include/core_cm7.h **** 
 704:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos (SCB_CFSR_BUSFAULTSR_Pos + 0U) /*!< SCB CFSR (BFSR): IBUSERR Position 
 705:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk (1UL << SCB_CFSR_IBUSERR_Pos)  /*!< SCB CFSR (BFSR): IBUSERR Mask */
 706:Drivers/CMSIS/Include/core_cm7.h **** 
 707:Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 708:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos (SCB_CFSR_USGFAULTSR_Pos + 9U)  /*!< SCB CFSR (UFSR): DIVBYZERO Posi
 709:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk (1UL << SCB_CFSR_DIVBYZERO_Pos) /*!< SCB CFSR (UFSR): DIVBYZERO Mask
 710:Drivers/CMSIS/Include/core_cm7.h **** 
 711:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos (SCB_CFSR_USGFAULTSR_Pos + 8U)  /*!< SCB CFSR (UFSR): UNALIGNED Posi
 712:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk (1UL << SCB_CFSR_UNALIGNED_Pos) /*!< SCB CFSR (UFSR): UNALIGNED Mask
 713:Drivers/CMSIS/Include/core_cm7.h **** 
 714:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos (SCB_CFSR_USGFAULTSR_Pos + 3U) /*!< SCB CFSR (UFSR): NOCP Position */
 715:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk (1UL << SCB_CFSR_NOCP_Pos)     /*!< SCB CFSR (UFSR): NOCP Mask */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 14


 716:Drivers/CMSIS/Include/core_cm7.h **** 
 717:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos (SCB_CFSR_USGFAULTSR_Pos + 2U) /*!< SCB CFSR (UFSR): INVPC Position */
 718:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk (1UL << SCB_CFSR_INVPC_Pos)    /*!< SCB CFSR (UFSR): INVPC Mask */
 719:Drivers/CMSIS/Include/core_cm7.h **** 
 720:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos (SCB_CFSR_USGFAULTSR_Pos + 1U) /*!< SCB CFSR (UFSR): INVSTATE Positio
 721:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk (1UL << SCB_CFSR_INVSTATE_Pos) /*!< SCB CFSR (UFSR): INVSTATE Mask */
 722:Drivers/CMSIS/Include/core_cm7.h **** 
 723:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos (SCB_CFSR_USGFAULTSR_Pos + 0U)   /*!< SCB CFSR (UFSR): UNDEFINSTR P
 724:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk (1UL << SCB_CFSR_UNDEFINSTR_Pos) /*!< SCB CFSR (UFSR): UNDEFINSTR M
 725:Drivers/CMSIS/Include/core_cm7.h **** 
 726:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 727:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos 31U                            /*!< SCB HFSR: DEBUGEVT Position */
 728:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk (1UL << SCB_HFSR_DEBUGEVT_Pos) /*!< SCB HFSR: DEBUGEVT Mask */
 729:Drivers/CMSIS/Include/core_cm7.h **** 
 730:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos 30U                          /*!< SCB HFSR: FORCED Position */
 731:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk (1UL << SCB_HFSR_FORCED_Pos) /*!< SCB HFSR: FORCED Mask */
 732:Drivers/CMSIS/Include/core_cm7.h **** 
 733:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos 1U                            /*!< SCB HFSR: VECTTBL Position */
 734:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk (1UL << SCB_HFSR_VECTTBL_Pos) /*!< SCB HFSR: VECTTBL Mask */
 735:Drivers/CMSIS/Include/core_cm7.h **** 
 736:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 737:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos 4U                             /*!< SCB DFSR: EXTERNAL Position */
 738:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk (1UL << SCB_DFSR_EXTERNAL_Pos) /*!< SCB DFSR: EXTERNAL Mask */
 739:Drivers/CMSIS/Include/core_cm7.h **** 
 740:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos 3U                           /*!< SCB DFSR: VCATCH Position */
 741:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk (1UL << SCB_DFSR_VCATCH_Pos) /*!< SCB DFSR: VCATCH Mask */
 742:Drivers/CMSIS/Include/core_cm7.h **** 
 743:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos 2U                            /*!< SCB DFSR: DWTTRAP Position */
 744:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk (1UL << SCB_DFSR_DWTTRAP_Pos) /*!< SCB DFSR: DWTTRAP Mask */
 745:Drivers/CMSIS/Include/core_cm7.h **** 
 746:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos 1U                         /*!< SCB DFSR: BKPT Position */
 747:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk (1UL << SCB_DFSR_BKPT_Pos) /*!< SCB DFSR: BKPT Mask */
 748:Drivers/CMSIS/Include/core_cm7.h **** 
 749:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos 0U                               /*!< SCB DFSR: HALTED Position */
 750:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk (1UL /*<< SCB_DFSR_HALTED_Pos*/) /*!< SCB DFSR: HALTED Mask */
 751:Drivers/CMSIS/Include/core_cm7.h **** 
 752:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 753:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos 27U                         /*!< SCB CLIDR: LoUU Position */
 754:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk (7UL << SCB_CLIDR_LOUU_Pos) /*!< SCB CLIDR: LoUU Mask */
 755:Drivers/CMSIS/Include/core_cm7.h **** 
 756:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos 24U                        /*!< SCB CLIDR: LoC Position */
 757:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk (7UL << SCB_CLIDR_LOC_Pos) /*!< SCB CLIDR: LoC Mask */
 758:Drivers/CMSIS/Include/core_cm7.h **** 
 759:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 760:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos 29U                         /*!< SCB CTR: Format Position */
 761:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk (7UL << SCB_CTR_FORMAT_Pos) /*!< SCB CTR: Format Mask */
 762:Drivers/CMSIS/Include/core_cm7.h **** 
 763:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos 24U                        /*!< SCB CTR: CWG Position */
 764:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk (0xFUL << SCB_CTR_CWG_Pos) /*!< SCB CTR: CWG Mask */
 765:Drivers/CMSIS/Include/core_cm7.h **** 
 766:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos 20U                        /*!< SCB CTR: ERG Position */
 767:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk (0xFUL << SCB_CTR_ERG_Pos) /*!< SCB CTR: ERG Mask */
 768:Drivers/CMSIS/Include/core_cm7.h **** 
 769:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos 16U                             /*!< SCB CTR: DminLine Position */
 770:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk (0xFUL << SCB_CTR_DMINLINE_Pos) /*!< SCB CTR: DminLine Mask */
 771:Drivers/CMSIS/Include/core_cm7.h **** 
 772:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos 0U                                  /*!< SCB CTR: ImInLine Position */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 15


 773:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/) /*!< SCB CTR: ImInLine Mask */
 774:Drivers/CMSIS/Include/core_cm7.h **** 
 775:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 776:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos 31U                        /*!< SCB CCSIDR: WT Position */
 777:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk (1UL << SCB_CCSIDR_WT_Pos) /*!< SCB CCSIDR: WT Mask */
 778:Drivers/CMSIS/Include/core_cm7.h **** 
 779:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos 30U                        /*!< SCB CCSIDR: WB Position */
 780:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk (1UL << SCB_CCSIDR_WB_Pos) /*!< SCB CCSIDR: WB Mask */
 781:Drivers/CMSIS/Include/core_cm7.h **** 
 782:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos 29U                        /*!< SCB CCSIDR: RA Position */
 783:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk (1UL << SCB_CCSIDR_RA_Pos) /*!< SCB CCSIDR: RA Mask */
 784:Drivers/CMSIS/Include/core_cm7.h **** 
 785:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos 28U                        /*!< SCB CCSIDR: WA Position */
 786:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk (1UL << SCB_CCSIDR_WA_Pos) /*!< SCB CCSIDR: WA Mask */
 787:Drivers/CMSIS/Include/core_cm7.h **** 
 788:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos 13U                                  /*!< SCB CCSIDR: NumSets Positi
 789:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos) /*!< SCB CCSIDR: NumSets Mask *
 790:Drivers/CMSIS/Include/core_cm7.h **** 
 791:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos 3U                                        /*!< SCB CCSIDR: Ass
 792:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos) /*!< SCB CCSIDR: Ass
 793:Drivers/CMSIS/Include/core_cm7.h **** 
 794:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos 0U                                   /*!< SCB CCSIDR: LineSize Posi
 795:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/) /*!< SCB CCSIDR: LineSize Mask
 796:Drivers/CMSIS/Include/core_cm7.h **** 
 797:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 798:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos 1U                            /*!< SCB CSSELR: Level Position */
 799:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk (7UL << SCB_CSSELR_LEVEL_Pos) /*!< SCB CSSELR: Level Mask */
 800:Drivers/CMSIS/Include/core_cm7.h **** 
 801:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos 0U                              /*!< SCB CSSELR: InD Position */
 802:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk (1UL /*<< SCB_CSSELR_IND_Pos*/) /*!< SCB CSSELR: InD Mask */
 803:Drivers/CMSIS/Include/core_cm7.h **** 
 804:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 805:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos 0U                                  /*!< SCB STIR: INTID Position */
 806:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk (0x1FFUL /*<< SCB_STIR_INTID_Pos*/) /*!< SCB STIR: INTID Mask */
 807:Drivers/CMSIS/Include/core_cm7.h **** 
 808:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 809:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos 30U                        /*!< SCB DCISW: Way Position */
 810:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk (3UL << SCB_DCISW_WAY_Pos) /*!< SCB DCISW: Way Mask */
 811:Drivers/CMSIS/Include/core_cm7.h **** 
 812:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos 5U                             /*!< SCB DCISW: Set Position */
 813:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk (0x1FFUL << SCB_DCISW_SET_Pos) /*!< SCB DCISW: Set Mask */
 814:Drivers/CMSIS/Include/core_cm7.h **** 
 815:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 816:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos 30U                        /*!< SCB DCCSW: Way Position */
 817:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk (3UL << SCB_DCCSW_WAY_Pos) /*!< SCB DCCSW: Way Mask */
 818:Drivers/CMSIS/Include/core_cm7.h **** 
 819:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos 5U                             /*!< SCB DCCSW: Set Position */
 820:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk (0x1FFUL << SCB_DCCSW_SET_Pos) /*!< SCB DCCSW: Set Mask */
 821:Drivers/CMSIS/Include/core_cm7.h **** 
 822:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 823:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos 30U                         /*!< SCB DCCISW: Way Position */
 824:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk (3UL << SCB_DCCISW_WAY_Pos) /*!< SCB DCCISW: Way Mask */
 825:Drivers/CMSIS/Include/core_cm7.h **** 
 826:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos 5U                              /*!< SCB DCCISW: Set Position */
 827:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk (0x1FFUL << SCB_DCCISW_SET_Pos) /*!< SCB DCCISW: Set Mask */
 828:Drivers/CMSIS/Include/core_cm7.h **** 
 829:Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 16


 830:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos 3U                           /*!< SCB ITCMCR: SZ Position */
 831:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk (0xFUL << SCB_ITCMCR_SZ_Pos) /*!< SCB ITCMCR: SZ Mask */
 832:Drivers/CMSIS/Include/core_cm7.h **** 
 833:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos 2U                            /*!< SCB ITCMCR: RETEN Position */
 834:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk (1UL << SCB_ITCMCR_RETEN_Pos) /*!< SCB ITCMCR: RETEN Mask */
 835:Drivers/CMSIS/Include/core_cm7.h **** 
 836:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos 1U                          /*!< SCB ITCMCR: RMW Position */
 837:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk (1UL << SCB_ITCMCR_RMW_Pos) /*!< SCB ITCMCR: RMW Mask */
 838:Drivers/CMSIS/Include/core_cm7.h **** 
 839:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos 0U                             /*!< SCB ITCMCR: EN Position */
 840:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk (1UL /*<< SCB_ITCMCR_EN_Pos*/) /*!< SCB ITCMCR: EN Mask */
 841:Drivers/CMSIS/Include/core_cm7.h **** 
 842:Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 843:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos 3U                           /*!< SCB DTCMCR: SZ Position */
 844:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk (0xFUL << SCB_DTCMCR_SZ_Pos) /*!< SCB DTCMCR: SZ Mask */
 845:Drivers/CMSIS/Include/core_cm7.h **** 
 846:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos 2U                            /*!< SCB DTCMCR: RETEN Position */
 847:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk (1UL << SCB_DTCMCR_RETEN_Pos) /*!< SCB DTCMCR: RETEN Mask */
 848:Drivers/CMSIS/Include/core_cm7.h **** 
 849:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos 1U                          /*!< SCB DTCMCR: RMW Position */
 850:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk (1UL << SCB_DTCMCR_RMW_Pos) /*!< SCB DTCMCR: RMW Mask */
 851:Drivers/CMSIS/Include/core_cm7.h **** 
 852:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos 0U                             /*!< SCB DTCMCR: EN Position */
 853:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk (1UL /*<< SCB_DTCMCR_EN_Pos*/) /*!< SCB DTCMCR: EN Mask */
 854:Drivers/CMSIS/Include/core_cm7.h **** 
 855:Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 856:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos 1U                         /*!< SCB AHBPCR: SZ Position */
 857:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk (7UL << SCB_AHBPCR_SZ_Pos) /*!< SCB AHBPCR: SZ Mask */
 858:Drivers/CMSIS/Include/core_cm7.h **** 
 859:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos 0U                             /*!< SCB AHBPCR: EN Position */
 860:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk (1UL /*<< SCB_AHBPCR_EN_Pos*/) /*!< SCB AHBPCR: EN Mask */
 861:Drivers/CMSIS/Include/core_cm7.h **** 
 862:Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 863:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos 2U                            /*!< SCB CACR: FORCEWT Position */
 864:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk (1UL << SCB_CACR_FORCEWT_Pos) /*!< SCB CACR: FORCEWT Mask */
 865:Drivers/CMSIS/Include/core_cm7.h **** 
 866:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos 1U                          /*!< SCB CACR: ECCEN Position */
 867:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk (1UL << SCB_CACR_ECCEN_Pos) /*!< SCB CACR: ECCEN Mask */
 868:Drivers/CMSIS/Include/core_cm7.h **** 
 869:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos 0U                             /*!< SCB CACR: SIWT Position */
 870:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk (1UL /*<< SCB_CACR_SIWT_Pos*/) /*!< SCB CACR: SIWT Mask */
 871:Drivers/CMSIS/Include/core_cm7.h **** 
 872:Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 873:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos 11U                                  /*!< SCB AHBSCR: INITCOUNT Po
 874:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos) /*!< SCB AHBSCR: INITCOUNT Ma
 875:Drivers/CMSIS/Include/core_cm7.h **** 
 876:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos 2U                               /*!< SCB AHBSCR: TPRI Position */
 877:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk (0x1FFUL << SCB_AHBPCR_TPRI_Pos) /*!< SCB AHBSCR: TPRI Mask */
 878:Drivers/CMSIS/Include/core_cm7.h **** 
 879:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos 0U                              /*!< SCB AHBSCR: CTL Position*/
 880:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk (3UL /*<< SCB_AHBPCR_CTL_Pos*/) /*!< SCB AHBSCR: CTL Mask */
 881:Drivers/CMSIS/Include/core_cm7.h **** 
 882:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 883:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos 8U                              /*!< SCB ABFSR: AXIMTYPE Position*/
 884:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk (3UL << SCB_ABFSR_AXIMTYPE_Pos) /*!< SCB ABFSR: AXIMTYPE Mask */
 885:Drivers/CMSIS/Include/core_cm7.h **** 
 886:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos 4U                          /*!< SCB ABFSR: EPPB Position*/
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 17


 887:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk (1UL << SCB_ABFSR_EPPB_Pos) /*!< SCB ABFSR: EPPB Mask */
 888:Drivers/CMSIS/Include/core_cm7.h **** 
 889:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos 3U                          /*!< SCB ABFSR: AXIM Position*/
 890:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk (1UL << SCB_ABFSR_AXIM_Pos) /*!< SCB ABFSR: AXIM Mask */
 891:Drivers/CMSIS/Include/core_cm7.h **** 
 892:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos 2U                          /*!< SCB ABFSR: AHBP Position*/
 893:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk (1UL << SCB_ABFSR_AHBP_Pos) /*!< SCB ABFSR: AHBP Mask */
 894:Drivers/CMSIS/Include/core_cm7.h **** 
 895:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos 1U                          /*!< SCB ABFSR: DTCM Position*/
 896:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk (1UL << SCB_ABFSR_DTCM_Pos) /*!< SCB ABFSR: DTCM Mask */
 897:Drivers/CMSIS/Include/core_cm7.h **** 
 898:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos 0U                              /*!< SCB ABFSR: ITCM Position*/
 899:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk (1UL /*<< SCB_ABFSR_ITCM_Pos*/) /*!< SCB ABFSR: ITCM Mask */
 900:Drivers/CMSIS/Include/core_cm7.h **** 
 901:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_SCB */
 902:Drivers/CMSIS/Include/core_cm7.h **** 
 903:Drivers/CMSIS/Include/core_cm7.h ****   /**
 904:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
 905:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 906:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the System Control and ID Register not in the SCB
 907:Drivers/CMSIS/Include/core_cm7.h ****     @{
 908:Drivers/CMSIS/Include/core_cm7.h ****    */
 909:Drivers/CMSIS/Include/core_cm7.h **** 
 910:Drivers/CMSIS/Include/core_cm7.h ****   /**
 911:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the System Control and ID Register not in the SCB.
 912:Drivers/CMSIS/Include/core_cm7.h ****    */
 913:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
 914:Drivers/CMSIS/Include/core_cm7.h ****   {
 915:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[1U];
 916:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ICTR;   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Register */
 917:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ACTLR; /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 918:Drivers/CMSIS/Include/core_cm7.h ****   } SCnSCB_Type;
 919:Drivers/CMSIS/Include/core_cm7.h **** 
 920:Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 921:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos 0U                                         /*!< ICTR: INTLINESN
 922:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/) /*!< ICTR: INTLINESN
 923:Drivers/CMSIS/Include/core_cm7.h **** 
 924:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 925:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos 12U                                      /*!< ACTLR: DISITM
 926:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos) /*!< ACTLR: DISITM
 927:Drivers/CMSIS/Include/core_cm7.h **** 
 928:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos 11U                                 /*!< ACTLR: DISRAMODE Positi
 929:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk (1UL << SCnSCB_ACTLR_DISRAMODE_Pos) /*!< ACTLR: DISRAMODE Mask *
 930:Drivers/CMSIS/Include/core_cm7.h **** 
 931:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos 10U                                 /*!< ACTLR: FPEXCODIS Positi
 932:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos) /*!< ACTLR: FPEXCODIS Mask *
 933:Drivers/CMSIS/Include/core_cm7.h **** 
 934:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos 2U                                /*!< ACTLR: DISFOLD Position */
 935:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk (1UL << SCnSCB_ACTLR_DISFOLD_Pos) /*!< ACTLR: DISFOLD Mask */
 936:Drivers/CMSIS/Include/core_cm7.h **** 
 937:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos 0U                                       /*!< ACTLR: DISMCYCINT
 938:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/) /*!< ACTLR: DISMCYCINT
 939:Drivers/CMSIS/Include/core_cm7.h **** 
 940:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_SCnotSCB */
 941:Drivers/CMSIS/Include/core_cm7.h **** 
 942:Drivers/CMSIS/Include/core_cm7.h ****   /**
 943:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 18


 944:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 945:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the System Timer Registers.
 946:Drivers/CMSIS/Include/core_cm7.h ****     @{
 947:Drivers/CMSIS/Include/core_cm7.h ****    */
 948:Drivers/CMSIS/Include/core_cm7.h **** 
 949:Drivers/CMSIS/Include/core_cm7.h ****   /**
 950:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the System Timer (SysTick).
 951:Drivers/CMSIS/Include/core_cm7.h ****    */
 952:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
 953:Drivers/CMSIS/Include/core_cm7.h ****   {
 954:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CTRL; /*!< Offset: 0x000 (R/W)  SysTick Control and Status Register */
 955:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t LOAD; /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 956:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t VAL;  /*!< Offset: 0x008 (R/W)  SysTick Current Value Register */
 957:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CALIB; /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 958:Drivers/CMSIS/Include/core_cm7.h ****   } SysTick_Type;
 959:Drivers/CMSIS/Include/core_cm7.h **** 
 960:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 961:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos 16U                                 /*!< SysTick CTRL: COUNTFLAG
 962:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk (1UL << SysTick_CTRL_COUNTFLAG_Pos) /*!< SysTick CTRL: COUNTFLAG
 963:Drivers/CMSIS/Include/core_cm7.h **** 
 964:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos 2U                                  /*!< SysTick CTRL: CLKSOURCE
 965:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk (1UL << SysTick_CTRL_CLKSOURCE_Pos) /*!< SysTick CTRL: CLKSOURCE
 966:Drivers/CMSIS/Include/core_cm7.h **** 
 967:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos 1U                                /*!< SysTick CTRL: TICKINT Posit
 968:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk (1UL << SysTick_CTRL_TICKINT_Pos) /*!< SysTick CTRL: TICKINT Mask 
 969:Drivers/CMSIS/Include/core_cm7.h **** 
 970:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos 0U                                   /*!< SysTick CTRL: ENABLE Posi
 971:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk (1UL /*<< SysTick_CTRL_ENABLE_Pos*/) /*!< SysTick CTRL: ENABLE Mask
 972:Drivers/CMSIS/Include/core_cm7.h **** 
 973:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 974:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos 0U                                          /*!< SysTick LOAD: RELO
 975:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/) /*!< SysTick LOAD: RELO
 976:Drivers/CMSIS/Include/core_cm7.h **** 
 977:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 978:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos 0U                                          /*!< SysTick VAL: CURRE
 979:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/) /*!< SysTick VAL: CURRE
 980:Drivers/CMSIS/Include/core_cm7.h **** 
 981:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 982:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos 31U                              /*!< SysTick CALIB: NOREF Position
 983:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk (1UL << SysTick_CALIB_NOREF_Pos) /*!< SysTick CALIB: NOREF Mask */
 984:Drivers/CMSIS/Include/core_cm7.h **** 
 985:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos 30U                             /*!< SysTick CALIB: SKEW Position */
 986:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk (1UL << SysTick_CALIB_SKEW_Pos) /*!< SysTick CALIB: SKEW Mask */
 987:Drivers/CMSIS/Include/core_cm7.h **** 
 988:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos 0U                                          /*!< SysTick CALIB: TEN
 989:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/) /*!< SysTick CALIB: TEN
 990:Drivers/CMSIS/Include/core_cm7.h **** 
 991:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_SysTick */
 992:Drivers/CMSIS/Include/core_cm7.h **** 
 993:Drivers/CMSIS/Include/core_cm7.h ****   /**
 994:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
 995:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 996:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 997:Drivers/CMSIS/Include/core_cm7.h ****     @{
 998:Drivers/CMSIS/Include/core_cm7.h ****    */
 999:Drivers/CMSIS/Include/core_cm7.h **** 
1000:Drivers/CMSIS/Include/core_cm7.h ****   /**
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 19


1001:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1002:Drivers/CMSIS/Include/core_cm7.h ****    */
1003:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1004:Drivers/CMSIS/Include/core_cm7.h ****   {
1005:Drivers/CMSIS/Include/core_cm7.h ****     __OM union
1006:Drivers/CMSIS/Include/core_cm7.h ****     {
1007:Drivers/CMSIS/Include/core_cm7.h ****       __OM uint8_t u8;   /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1008:Drivers/CMSIS/Include/core_cm7.h ****       __OM uint16_t u16; /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1009:Drivers/CMSIS/Include/core_cm7.h ****       __OM uint32_t u32; /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1010:Drivers/CMSIS/Include/core_cm7.h ****     } PORT[32U];         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1011:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[864U];
1012:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t TER; /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1013:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED1[15U];
1014:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t TPR; /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1015:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED2[15U];
1016:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t TCR; /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1017:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED3[29U];
1018:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t IWR;   /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register */
1019:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t IRR;   /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1020:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t IMCR; /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Register */
1021:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED4[43U];
1022:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t LAR; /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1023:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t LSR; /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1024:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED5[6U];
1025:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID4; /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Register #4 */
1026:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID5; /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Register #5 */
1027:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID6; /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Register #6 */
1028:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID7; /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Register #7 */
1029:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID0; /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Register #0 */
1030:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID1; /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Register #1 */
1031:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID2; /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Register #2 */
1032:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PID3; /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Register #3 */
1033:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CID0; /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Register #0 */
1034:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CID1; /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Register #1 */
1035:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CID2; /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Register #2 */
1036:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t CID3; /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Register #3 */
1037:Drivers/CMSIS/Include/core_cm7.h ****   } ITM_Type;
1038:Drivers/CMSIS/Include/core_cm7.h **** 
1039:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1040:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos 0U                                         /*!< ITM TPR: PRIVMASK Posi
1041:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/) /*!< ITM TPR: PRIVMASK Mask
1042:Drivers/CMSIS/Include/core_cm7.h **** 
1043:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1044:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos 23U                       /*!< ITM TCR: BUSY Position */
1045:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk (1UL << ITM_TCR_BUSY_Pos) /*!< ITM TCR: BUSY Mask */
1046:Drivers/CMSIS/Include/core_cm7.h **** 
1047:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos 16U                                /*!< ITM TCR: ATBID Position */
1048:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk (0x7FUL << ITM_TCR_TraceBusID_Pos) /*!< ITM TCR: ATBID Mask */
1049:Drivers/CMSIS/Include/core_cm7.h **** 
1050:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos 10U                          /*!< ITM TCR: Global timestamp frequency P
1051:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk (3UL << ITM_TCR_GTSFREQ_Pos) /*!< ITM TCR: Global timestamp frequency M
1052:Drivers/CMSIS/Include/core_cm7.h **** 
1053:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos 8U                              /*!< ITM TCR: TSPrescale Position */
1054:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk (3UL << ITM_TCR_TSPrescale_Pos) /*!< ITM TCR: TSPrescale Mask */
1055:Drivers/CMSIS/Include/core_cm7.h **** 
1056:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos 4U                          /*!< ITM TCR: SWOENA Position */
1057:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk (1UL << ITM_TCR_SWOENA_Pos) /*!< ITM TCR: SWOENA Mask */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 20


1058:Drivers/CMSIS/Include/core_cm7.h **** 
1059:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos 3U                          /*!< ITM TCR: DWTENA Position */
1060:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk (1UL << ITM_TCR_DWTENA_Pos) /*!< ITM TCR: DWTENA Mask */
1061:Drivers/CMSIS/Include/core_cm7.h **** 
1062:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos 2U                           /*!< ITM TCR: SYNCENA Position */
1063:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk (1UL << ITM_TCR_SYNCENA_Pos) /*!< ITM TCR: SYNCENA Mask */
1064:Drivers/CMSIS/Include/core_cm7.h **** 
1065:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos 1U                         /*!< ITM TCR: TSENA Position */
1066:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk (1UL << ITM_TCR_TSENA_Pos) /*!< ITM TCR: TSENA Mask */
1067:Drivers/CMSIS/Include/core_cm7.h **** 
1068:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos 0U                              /*!< ITM TCR: ITM Enable bit Position */
1069:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk (1UL /*<< ITM_TCR_ITMENA_Pos*/) /*!< ITM TCR: ITM Enable bit Mask */
1070:Drivers/CMSIS/Include/core_cm7.h **** 
1071:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1072:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos 0U                                /*!< ITM IWR: ATVALIDM Position */
1073:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk (1UL /*<< ITM_IWR_ATVALIDM_Pos*/) /*!< ITM IWR: ATVALIDM Mask */
1074:Drivers/CMSIS/Include/core_cm7.h **** 
1075:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1076:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos 0U                                /*!< ITM IRR: ATREADYM Position */
1077:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk (1UL /*<< ITM_IRR_ATREADYM_Pos*/) /*!< ITM IRR: ATREADYM Mask */
1078:Drivers/CMSIS/Include/core_cm7.h **** 
1079:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1080:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos 0U                                    /*!< ITM IMCR: INTEGRATION P
1081:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/) /*!< ITM IMCR: INTEGRATION M
1082:Drivers/CMSIS/Include/core_cm7.h **** 
1083:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1084:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos 2U                           /*!< ITM LSR: ByteAcc Position */
1085:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk (1UL << ITM_LSR_ByteAcc_Pos) /*!< ITM LSR: ByteAcc Mask */
1086:Drivers/CMSIS/Include/core_cm7.h **** 
1087:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos 1U                          /*!< ITM LSR: Access Position */
1088:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk (1UL << ITM_LSR_Access_Pos) /*!< ITM LSR: Access Mask */
1089:Drivers/CMSIS/Include/core_cm7.h **** 
1090:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos 0U                               /*!< ITM LSR: Present Position */
1091:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk (1UL /*<< ITM_LSR_Present_Pos*/) /*!< ITM LSR: Present Mask */
1092:Drivers/CMSIS/Include/core_cm7.h **** 
1093:Drivers/CMSIS/Include/core_cm7.h ****   /*@}*/ /* end of group CMSIS_ITM */
1094:Drivers/CMSIS/Include/core_cm7.h **** 
1095:Drivers/CMSIS/Include/core_cm7.h ****   /**
1096:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
1097:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1098:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1099:Drivers/CMSIS/Include/core_cm7.h ****     @{
1100:Drivers/CMSIS/Include/core_cm7.h ****    */
1101:Drivers/CMSIS/Include/core_cm7.h **** 
1102:Drivers/CMSIS/Include/core_cm7.h ****   /**
1103:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1104:Drivers/CMSIS/Include/core_cm7.h ****    */
1105:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1106:Drivers/CMSIS/Include/core_cm7.h ****   {
1107:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CTRL;      /*!< Offset: 0x000 (R/W)  Control Register */
1108:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CYCCNT;    /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1109:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CPICNT;    /*!< Offset: 0x008 (R/W)  CPI Count Register */
1110:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t EXCCNT;    /*!< Offset: 0x00C (R/W)  Exception Overhead Count Register */
1111:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t SLEEPCNT;  /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1112:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t LSUCNT;    /*!< Offset: 0x014 (R/W)  LSU Count Register */
1113:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FOLDCNT;   /*!< Offset: 0x018 (R/W)  Folded-instruction Count Register */
1114:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t PCSR;       /*!< Offset: 0x01C (R/ )  Program Counter Sample Register */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 21


1115:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t COMP0;     /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1116:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t MASK0;     /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1117:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FUNCTION0; /*!< Offset: 0x028 (R/W)  Function Register 0 */
1118:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[1U];
1119:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t COMP1;     /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1120:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t MASK1;     /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1121:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FUNCTION1; /*!< Offset: 0x038 (R/W)  Function Register 1 */
1122:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED1[1U];
1123:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t COMP2;     /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1124:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t MASK2;     /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1125:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FUNCTION2; /*!< Offset: 0x048 (R/W)  Function Register 2 */
1126:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED2[1U];
1127:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t COMP3;     /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1128:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t MASK3;     /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1129:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FUNCTION3; /*!< Offset: 0x058 (R/W)  Function Register 3 */
1130:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED3[981U];
1131:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t LAR; /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1132:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t LSR; /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1133:Drivers/CMSIS/Include/core_cm7.h ****   } DWT_Type;
1134:Drivers/CMSIS/Include/core_cm7.h **** 
1135:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1136:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos 28U                             /*!< DWT CTRL: NUMCOMP Position */
1137:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk (0xFUL << DWT_CTRL_NUMCOMP_Pos) /*!< DWT CTRL: NUMCOMP Mask */
1138:Drivers/CMSIS/Include/core_cm7.h **** 
1139:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos 27U                              /*!< DWT CTRL: NOTRCPKT Position */
1140:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk (0x1UL << DWT_CTRL_NOTRCPKT_Pos) /*!< DWT CTRL: NOTRCPKT Mask */
1141:Drivers/CMSIS/Include/core_cm7.h **** 
1142:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos 26U                               /*!< DWT CTRL: NOEXTTRIG Position 
1143:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk (0x1UL << DWT_CTRL_NOEXTTRIG_Pos) /*!< DWT CTRL: NOEXTTRIG Mask */
1144:Drivers/CMSIS/Include/core_cm7.h **** 
1145:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos 25U                              /*!< DWT CTRL: NOCYCCNT Position */
1146:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk (0x1UL << DWT_CTRL_NOCYCCNT_Pos) /*!< DWT CTRL: NOCYCCNT Mask */
1147:Drivers/CMSIS/Include/core_cm7.h **** 
1148:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos 24U                              /*!< DWT CTRL: NOPRFCNT Position */
1149:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk (0x1UL << DWT_CTRL_NOPRFCNT_Pos) /*!< DWT CTRL: NOPRFCNT Mask */
1150:Drivers/CMSIS/Include/core_cm7.h **** 
1151:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos 22U                               /*!< DWT CTRL: CYCEVTENA Position 
1152:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk (0x1UL << DWT_CTRL_CYCEVTENA_Pos) /*!< DWT CTRL: CYCEVTENA Mask */
1153:Drivers/CMSIS/Include/core_cm7.h **** 
1154:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos 21U                                /*!< DWT CTRL: FOLDEVTENA Positi
1155:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk (0x1UL << DWT_CTRL_FOLDEVTENA_Pos) /*!< DWT CTRL: FOLDEVTENA Mask *
1156:Drivers/CMSIS/Include/core_cm7.h **** 
1157:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos 20U                               /*!< DWT CTRL: LSUEVTENA Position 
1158:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk (0x1UL << DWT_CTRL_LSUEVTENA_Pos) /*!< DWT CTRL: LSUEVTENA Mask */
1159:Drivers/CMSIS/Include/core_cm7.h **** 
1160:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos 19U                                 /*!< DWT CTRL: SLEEPEVTENA Pos
1161:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos) /*!< DWT CTRL: SLEEPEVTENA Mas
1162:Drivers/CMSIS/Include/core_cm7.h **** 
1163:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos 18U                               /*!< DWT CTRL: EXCEVTENA Position 
1164:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk (0x1UL << DWT_CTRL_EXCEVTENA_Pos) /*!< DWT CTRL: EXCEVTENA Mask */
1165:Drivers/CMSIS/Include/core_cm7.h **** 
1166:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos 17U                               /*!< DWT CTRL: CPIEVTENA Position 
1167:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk (0x1UL << DWT_CTRL_CPIEVTENA_Pos) /*!< DWT CTRL: CPIEVTENA Mask */
1168:Drivers/CMSIS/Include/core_cm7.h **** 
1169:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos 16U                               /*!< DWT CTRL: EXCTRCENA Position 
1170:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk (0x1UL << DWT_CTRL_EXCTRCENA_Pos) /*!< DWT CTRL: EXCTRCENA Mask */
1171:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 22


1172:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos 12U                                /*!< DWT CTRL: PCSAMPLENA Positi
1173:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk (0x1UL << DWT_CTRL_PCSAMPLENA_Pos) /*!< DWT CTRL: PCSAMPLENA Mask *
1174:Drivers/CMSIS/Include/core_cm7.h **** 
1175:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos 10U                             /*!< DWT CTRL: SYNCTAP Position */
1176:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk (0x3UL << DWT_CTRL_SYNCTAP_Pos) /*!< DWT CTRL: SYNCTAP Mask */
1177:Drivers/CMSIS/Include/core_cm7.h **** 
1178:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos 9U                             /*!< DWT CTRL: CYCTAP Position */
1179:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk (0x1UL << DWT_CTRL_CYCTAP_Pos) /*!< DWT CTRL: CYCTAP Mask */
1180:Drivers/CMSIS/Include/core_cm7.h **** 
1181:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos 5U                               /*!< DWT CTRL: POSTINIT Position */
1182:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk (0xFUL << DWT_CTRL_POSTINIT_Pos) /*!< DWT CTRL: POSTINIT Mask */
1183:Drivers/CMSIS/Include/core_cm7.h **** 
1184:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos 1U                                 /*!< DWT CTRL: POSTPRESET Positi
1185:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk (0xFUL << DWT_CTRL_POSTPRESET_Pos) /*!< DWT CTRL: POSTPRESET Mask *
1186:Drivers/CMSIS/Include/core_cm7.h **** 
1187:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos 0U                                    /*!< DWT CTRL: CYCCNTENA Posit
1188:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/) /*!< DWT CTRL: CYCCNTENA Mask 
1189:Drivers/CMSIS/Include/core_cm7.h **** 
1190:Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1191:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos 0U                                    /*!< DWT CPICNT: CPICNT Positio
1192:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/) /*!< DWT CPICNT: CPICNT Mask */
1193:Drivers/CMSIS/Include/core_cm7.h **** 
1194:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1195:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos 0U                                    /*!< DWT EXCCNT: EXCCNT Positio
1196:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/) /*!< DWT EXCCNT: EXCCNT Mask */
1197:Drivers/CMSIS/Include/core_cm7.h **** 
1198:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1199:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos 0U                                        /*!< DWT SLEEPCNT: SLEE
1200:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/) /*!< DWT SLEEPCNT: SLEE
1201:Drivers/CMSIS/Include/core_cm7.h **** 
1202:Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1203:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos 0U                                    /*!< DWT LSUCNT: LSUCNT Positio
1204:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/) /*!< DWT LSUCNT: LSUCNT Mask */
1205:Drivers/CMSIS/Include/core_cm7.h **** 
1206:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1207:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos 0U                                      /*!< DWT FOLDCNT: FOLDCNT P
1208:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/) /*!< DWT FOLDCNT: FOLDCNT M
1209:Drivers/CMSIS/Include/core_cm7.h **** 
1210:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1211:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos 0U                                /*!< DWT MASK: MASK Position */
1212:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk (0x1FUL /*<< DWT_MASK_MASK_Pos*/) /*!< DWT MASK: MASK Mask */
1213:Drivers/CMSIS/Include/core_cm7.h **** 
1214:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1215:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos 24U                                 /*!< DWT FUNCTION: MATCHED Pos
1216:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk (0x1UL << DWT_FUNCTION_MATCHED_Pos) /*!< DWT FUNCTION: MATCHED Mas
1217:Drivers/CMSIS/Include/core_cm7.h **** 
1218:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos 16U                                    /*!< DWT FUNCTION: DATAV
1219:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos) /*!< DWT FUNCTION: DATAV
1220:Drivers/CMSIS/Include/core_cm7.h **** 
1221:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos 12U                                    /*!< DWT FUNCTION: DATAV
1222:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos) /*!< DWT FUNCTION: DATAV
1223:Drivers/CMSIS/Include/core_cm7.h **** 
1224:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos 10U                                   /*!< DWT FUNCTION: DATAVSI
1225:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos) /*!< DWT FUNCTION: DATAVSI
1226:Drivers/CMSIS/Include/core_cm7.h **** 
1227:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos 9U                                  /*!< DWT FUNCTION: LNK1ENA Pos
1228:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk (0x1UL << DWT_FUNCTION_LNK1ENA_Pos) /*!< DWT FUNCTION: LNK1ENA Mas
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 23


1229:Drivers/CMSIS/Include/core_cm7.h **** 
1230:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos 8U                                     /*!< DWT FUNCTION: DATAV
1231:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos) /*!< DWT FUNCTION: DATAV
1232:Drivers/CMSIS/Include/core_cm7.h **** 
1233:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos 7U                                   /*!< DWT FUNCTION: CYCMATCH 
1234:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk (0x1UL << DWT_FUNCTION_CYCMATCH_Pos) /*!< DWT FUNCTION: CYCMATCH 
1235:Drivers/CMSIS/Include/core_cm7.h **** 
1236:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos 5U                                    /*!< DWT FUNCTION: EMITRAN
1237:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk (0x1UL << DWT_FUNCTION_EMITRANGE_Pos) /*!< DWT FUNCTION: EMITRAN
1238:Drivers/CMSIS/Include/core_cm7.h **** 
1239:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos 0U                                       /*!< DWT FUNCTION: FUNCT
1240:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/) /*!< DWT FUNCTION: FUNCT
1241:Drivers/CMSIS/Include/core_cm7.h **** 
1242:Drivers/CMSIS/Include/core_cm7.h ****   /*@}*/ /* end of group CMSIS_DWT */
1243:Drivers/CMSIS/Include/core_cm7.h **** 
1244:Drivers/CMSIS/Include/core_cm7.h ****   /**
1245:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
1246:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1247:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Trace Port Interface (TPI)
1248:Drivers/CMSIS/Include/core_cm7.h ****     @{
1249:Drivers/CMSIS/Include/core_cm7.h ****    */
1250:Drivers/CMSIS/Include/core_cm7.h **** 
1251:Drivers/CMSIS/Include/core_cm7.h ****   /**
1252:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Trace Port Interface Register (TPI).
1253:Drivers/CMSIS/Include/core_cm7.h ****    */
1254:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1255:Drivers/CMSIS/Include/core_cm7.h ****   {
1256:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t SSPSR;  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Register */
1257:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CSPSR; /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Register */
1258:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[2U];
1259:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ACPR; /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Register */
1260:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED1[55U];
1261:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t SPPR; /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register */
1262:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED2[131U];
1263:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t FFSR;  /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Register */
1264:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FFCR; /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Register */
1265:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t FSCR;  /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counter Register */
1266:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED3[759U];
1267:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t TRIGGER;   /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1268:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t FIFO0;     /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1269:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ITATBCTR2; /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1270:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED4[1U];
1271:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t ITATBCTR0; /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1272:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t FIFO1;     /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1273:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t ITCTRL;   /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1274:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED5[39U];
1275:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CLAIMSET; /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1276:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CLAIMCLR; /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1277:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED7[8U];
1278:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t DEVID;   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1279:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t DEVTYPE; /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1280:Drivers/CMSIS/Include/core_cm7.h ****   } TPI_Type;
1281:Drivers/CMSIS/Include/core_cm7.h **** 
1282:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1283:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos 0U                                       /*!< TPI ACPR: PRESCALER Po
1284:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/) /*!< TPI ACPR: PRESCALER Ma
1285:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 24


1286:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1287:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos 0U                                 /*!< TPI SPPR: TXMODE Position */
1288:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/) /*!< TPI SPPR: TXMODE Mask */
1289:Drivers/CMSIS/Include/core_cm7.h **** 
1290:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1291:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos 3U                                /*!< TPI FFSR: FtNonStop Position 
1292:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk (0x1UL << TPI_FFSR_FtNonStop_Pos) /*!< TPI FFSR: FtNonStop Mask */
1293:Drivers/CMSIS/Include/core_cm7.h **** 
1294:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos 2U                                /*!< TPI FFSR: TCPresent Position 
1295:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk (0x1UL << TPI_FFSR_TCPresent_Pos) /*!< TPI FFSR: TCPresent Mask */
1296:Drivers/CMSIS/Include/core_cm7.h **** 
1297:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos 1U                                /*!< TPI FFSR: FtStopped Position 
1298:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk (0x1UL << TPI_FFSR_FtStopped_Pos) /*!< TPI FFSR: FtStopped Mask */
1299:Drivers/CMSIS/Include/core_cm7.h **** 
1300:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos 0U                                   /*!< TPI FFSR: FlInProg Position
1301:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/) /*!< TPI FFSR: FlInProg Mask */
1302:Drivers/CMSIS/Include/core_cm7.h **** 
1303:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1304:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos 8U                             /*!< TPI FFCR: TrigIn Position */
1305:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk (0x1UL << TPI_FFCR_TrigIn_Pos) /*!< TPI FFCR: TrigIn Mask */
1306:Drivers/CMSIS/Include/core_cm7.h **** 
1307:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos 1U                              /*!< TPI FFCR: EnFCont Position */
1308:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk (0x1UL << TPI_FFCR_EnFCont_Pos) /*!< TPI FFCR: EnFCont Mask */
1309:Drivers/CMSIS/Include/core_cm7.h **** 
1310:Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1311:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos 0U                                     /*!< TPI TRIGGER: TRIGGER Po
1312:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/) /*!< TPI TRIGGER: TRIGGER Ma
1313:Drivers/CMSIS/Include/core_cm7.h **** 
1314:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1315:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos 29U                                  /*!< TPI FIFO0: ITM_ATVALID 
1316:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos) /*!< TPI FIFO0: ITM_ATVALID 
1317:Drivers/CMSIS/Include/core_cm7.h **** 
1318:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos 27U                                    /*!< TPI FIFO0: ITM_byte
1319:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk (0x3UL << TPI_FIFO0_ITM_bytecount_Pos) /*!< TPI FIFO0: ITM_byte
1320:Drivers/CMSIS/Include/core_cm7.h **** 
1321:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos 26U                                  /*!< TPI FIFO0: ETM_ATVALID 
1322:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos) /*!< TPI FIFO0: ETM_ATVALID 
1323:Drivers/CMSIS/Include/core_cm7.h **** 
1324:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos 24U                                    /*!< TPI FIFO0: ETM_byte
1325:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk (0x3UL << TPI_FIFO0_ETM_bytecount_Pos) /*!< TPI FIFO0: ETM_byte
1326:Drivers/CMSIS/Include/core_cm7.h **** 
1327:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos 16U                            /*!< TPI FIFO0: ETM2 Position */
1328:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk (0xFFUL << TPI_FIFO0_ETM2_Pos) /*!< TPI FIFO0: ETM2 Mask */
1329:Drivers/CMSIS/Include/core_cm7.h **** 
1330:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos 8U                             /*!< TPI FIFO0: ETM1 Position */
1331:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk (0xFFUL << TPI_FIFO0_ETM1_Pos) /*!< TPI FIFO0: ETM1 Mask */
1332:Drivers/CMSIS/Include/core_cm7.h **** 
1333:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos 0U                                 /*!< TPI FIFO0: ETM0 Position */
1334:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/) /*!< TPI FIFO0: ETM0 Mask */
1335:Drivers/CMSIS/Include/core_cm7.h **** 
1336:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1337:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos 0U                                        /*!< TPI ITATBCTR2: AT
1338:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/) /*!< TPI ITATBCTR2: AT
1339:Drivers/CMSIS/Include/core_cm7.h **** 
1340:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos 0U                                        /*!< TPI ITATBCTR2: AT
1341:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/) /*!< TPI ITATBCTR2: AT
1342:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 25


1343:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1344:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos 29U                                  /*!< TPI FIFO1: ITM_ATVALID 
1345:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos) /*!< TPI FIFO1: ITM_ATVALID 
1346:Drivers/CMSIS/Include/core_cm7.h **** 
1347:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos 27U                                    /*!< TPI FIFO1: ITM_byte
1348:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk (0x3UL << TPI_FIFO1_ITM_bytecount_Pos) /*!< TPI FIFO1: ITM_byte
1349:Drivers/CMSIS/Include/core_cm7.h **** 
1350:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos 26U                                  /*!< TPI FIFO1: ETM_ATVALID 
1351:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos) /*!< TPI FIFO1: ETM_ATVALID 
1352:Drivers/CMSIS/Include/core_cm7.h **** 
1353:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos 24U                                    /*!< TPI FIFO1: ETM_byte
1354:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk (0x3UL << TPI_FIFO1_ETM_bytecount_Pos) /*!< TPI FIFO1: ETM_byte
1355:Drivers/CMSIS/Include/core_cm7.h **** 
1356:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos 16U                            /*!< TPI FIFO1: ITM2 Position */
1357:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk (0xFFUL << TPI_FIFO1_ITM2_Pos) /*!< TPI FIFO1: ITM2 Mask */
1358:Drivers/CMSIS/Include/core_cm7.h **** 
1359:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos 8U                             /*!< TPI FIFO1: ITM1 Position */
1360:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk (0xFFUL << TPI_FIFO1_ITM1_Pos) /*!< TPI FIFO1: ITM1 Mask */
1361:Drivers/CMSIS/Include/core_cm7.h **** 
1362:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos 0U                                 /*!< TPI FIFO1: ITM0 Position */
1363:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/) /*!< TPI FIFO1: ITM0 Mask */
1364:Drivers/CMSIS/Include/core_cm7.h **** 
1365:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1366:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos 0U                                        /*!< TPI ITATBCTR0: AT
1367:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/) /*!< TPI ITATBCTR0: AT
1368:Drivers/CMSIS/Include/core_cm7.h **** 
1369:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos 0U                                        /*!< TPI ITATBCTR0: AT
1370:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/) /*!< TPI ITATBCTR0: AT
1371:Drivers/CMSIS/Include/core_cm7.h **** 
1372:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1373:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos 0U                                 /*!< TPI ITCTRL: Mode Position */
1374:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/) /*!< TPI ITCTRL: Mode Mask */
1375:Drivers/CMSIS/Include/core_cm7.h **** 
1376:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1377:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos 11U                               /*!< TPI DEVID: NRZVALID Position 
1378:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk (0x1UL << TPI_DEVID_NRZVALID_Pos) /*!< TPI DEVID: NRZVALID Mask */
1379:Drivers/CMSIS/Include/core_cm7.h **** 
1380:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos 10U                                /*!< TPI DEVID: MANCVALID Positi
1381:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk (0x1UL << TPI_DEVID_MANCVALID_Pos) /*!< TPI DEVID: MANCVALID Mask *
1382:Drivers/CMSIS/Include/core_cm7.h **** 
1383:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos 9U                                 /*!< TPI DEVID: PTINVALID Positi
1384:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk (0x1UL << TPI_DEVID_PTINVALID_Pos) /*!< TPI DEVID: PTINVALID Mask *
1385:Drivers/CMSIS/Include/core_cm7.h **** 
1386:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos 6U                                /*!< TPI DEVID: MinBufSz Position 
1387:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk (0x7UL << TPI_DEVID_MinBufSz_Pos) /*!< TPI DEVID: MinBufSz Mask */
1388:Drivers/CMSIS/Include/core_cm7.h **** 
1389:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos 5U                                 /*!< TPI DEVID: AsynClkIn Positi
1390:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk (0x1UL << TPI_DEVID_AsynClkIn_Pos) /*!< TPI DEVID: AsynClkIn Mask *
1391:Drivers/CMSIS/Include/core_cm7.h **** 
1392:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos 0U                                         /*!< TPI DEVID: NrTra
1393:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/) /*!< TPI DEVID: NrTra
1394:Drivers/CMSIS/Include/core_cm7.h **** 
1395:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1396:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos 4U                                     /*!< TPI DEVTYPE: SubType Po
1397:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/) /*!< TPI DEVTYPE: SubType Ma
1398:Drivers/CMSIS/Include/core_cm7.h **** 
1399:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos 0U                                   /*!< TPI DEVTYPE: MajorType 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 26


1400:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk (0xFUL << TPI_DEVTYPE_MajorType_Pos) /*!< TPI DEVTYPE: MajorType 
1401:Drivers/CMSIS/Include/core_cm7.h **** 
1402:Drivers/CMSIS/Include/core_cm7.h ****   /*@}*/ /* end of group CMSIS_TPI */
1403:Drivers/CMSIS/Include/core_cm7.h **** 
1404:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1405:Drivers/CMSIS/Include/core_cm7.h ****   /**
1406:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
1407:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1408:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Memory Protection Unit (MPU)
1409:Drivers/CMSIS/Include/core_cm7.h ****     @{
1410:Drivers/CMSIS/Include/core_cm7.h ****    */
1411:Drivers/CMSIS/Include/core_cm7.h **** 
1412:Drivers/CMSIS/Include/core_cm7.h ****   /**
1413:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Memory Protection Unit (MPU).
1414:Drivers/CMSIS/Include/core_cm7.h ****    */
1415:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1416:Drivers/CMSIS/Include/core_cm7.h ****   {
1417:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t TYPE;     /*!< Offset: 0x000 (R/ )  MPU Type Register */
1418:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t CTRL;    /*!< Offset: 0x004 (R/W)  MPU Control Register */
1419:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RNR;     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1420:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RBAR;    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register */
1421:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RASR;    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Register */
1422:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RBAR_A1; /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address Register */
1423:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RASR_A1; /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and Size Registe
1424:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RBAR_A2; /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address Register */
1425:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RASR_A2; /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and Size Registe
1426:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RBAR_A3; /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address Register */
1427:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t RASR_A3; /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and Size Registe
1428:Drivers/CMSIS/Include/core_cm7.h ****   } MPU_Type;
1429:Drivers/CMSIS/Include/core_cm7.h **** 
1430:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES 4U
1431:Drivers/CMSIS/Include/core_cm7.h **** 
1432:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1433:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos 16U                              /*!< MPU TYPE: IREGION Position */
1434:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk (0xFFUL << MPU_TYPE_IREGION_Pos) /*!< MPU TYPE: IREGION Mask */
1435:Drivers/CMSIS/Include/core_cm7.h **** 
1436:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos 8U                               /*!< MPU TYPE: DREGION Position */
1437:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk (0xFFUL << MPU_TYPE_DREGION_Pos) /*!< MPU TYPE: DREGION Mask */
1438:Drivers/CMSIS/Include/core_cm7.h **** 
1439:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos 0U                                 /*!< MPU TYPE: SEPARATE Position *
1440:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk (1UL /*<< MPU_TYPE_SEPARATE_Pos*/) /*!< MPU TYPE: SEPARATE Mask */
1441:Drivers/CMSIS/Include/core_cm7.h **** 
1442:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1443:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos 2U                               /*!< MPU CTRL: PRIVDEFENA Position
1444:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk (1UL << MPU_CTRL_PRIVDEFENA_Pos) /*!< MPU CTRL: PRIVDEFENA Mask */
1445:Drivers/CMSIS/Include/core_cm7.h **** 
1446:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos 1U                             /*!< MPU CTRL: HFNMIENA Position */
1447:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk (1UL << MPU_CTRL_HFNMIENA_Pos) /*!< MPU CTRL: HFNMIENA Mask */
1448:Drivers/CMSIS/Include/core_cm7.h **** 
1449:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos 0U                               /*!< MPU CTRL: ENABLE Position */
1450:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk (1UL /*<< MPU_CTRL_ENABLE_Pos*/) /*!< MPU CTRL: ENABLE Mask */
1451:Drivers/CMSIS/Include/core_cm7.h **** 
1452:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1453:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos 0U                                 /*!< MPU RNR: REGION Position */
1454:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk (0xFFUL /*<< MPU_RNR_REGION_Pos*/) /*!< MPU RNR: REGION Mask */
1455:Drivers/CMSIS/Include/core_cm7.h **** 
1456:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 27


1457:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos 5U                                 /*!< MPU RBAR: ADDR Position */
1458:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos) /*!< MPU RBAR: ADDR Mask */
1459:Drivers/CMSIS/Include/core_cm7.h **** 
1460:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos 4U                          /*!< MPU RBAR: VALID Position */
1461:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk (1UL << MPU_RBAR_VALID_Pos) /*!< MPU RBAR: VALID Mask */
1462:Drivers/CMSIS/Include/core_cm7.h **** 
1463:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos 0U                                 /*!< MPU RBAR: REGION Position */
1464:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk (0xFUL /*<< MPU_RBAR_REGION_Pos*/) /*!< MPU RBAR: REGION Mask */
1465:Drivers/CMSIS/Include/core_cm7.h **** 
1466:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1467:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos 16U                              /*!< MPU RASR: MPU Region Attribute fie
1468:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk (0xFFFFUL << MPU_RASR_ATTRS_Pos) /*!< MPU RASR: MPU Region Attribute fie
1469:Drivers/CMSIS/Include/core_cm7.h **** 
1470:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos 28U                      /*!< MPU RASR: ATTRS.XN Position */
1471:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk (1UL << MPU_RASR_XN_Pos) /*!< MPU RASR: ATTRS.XN Mask */
1472:Drivers/CMSIS/Include/core_cm7.h **** 
1473:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos 24U                        /*!< MPU RASR: ATTRS.AP Position */
1474:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk (0x7UL << MPU_RASR_AP_Pos) /*!< MPU RASR: ATTRS.AP Mask */
1475:Drivers/CMSIS/Include/core_cm7.h **** 
1476:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos 19U                         /*!< MPU RASR: ATTRS.TEX Position */
1477:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk (0x7UL << MPU_RASR_TEX_Pos) /*!< MPU RASR: ATTRS.TEX Mask */
1478:Drivers/CMSIS/Include/core_cm7.h **** 
1479:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos 18U                     /*!< MPU RASR: ATTRS.S Position */
1480:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk (1UL << MPU_RASR_S_Pos) /*!< MPU RASR: ATTRS.S Mask */
1481:Drivers/CMSIS/Include/core_cm7.h **** 
1482:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos 17U                     /*!< MPU RASR: ATTRS.C Position */
1483:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk (1UL << MPU_RASR_C_Pos) /*!< MPU RASR: ATTRS.C Mask */
1484:Drivers/CMSIS/Include/core_cm7.h **** 
1485:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos 16U                     /*!< MPU RASR: ATTRS.B Position */
1486:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk (1UL << MPU_RASR_B_Pos) /*!< MPU RASR: ATTRS.B Mask */
1487:Drivers/CMSIS/Include/core_cm7.h **** 
1488:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos 8U                           /*!< MPU RASR: Sub-Region Disable Position */
1489:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk (0xFFUL << MPU_RASR_SRD_Pos) /*!< MPU RASR: Sub-Region Disable Mask */
1490:Drivers/CMSIS/Include/core_cm7.h **** 
1491:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos 1U                            /*!< MPU RASR: Region Size Field Position *
1492:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk (0x1FUL << MPU_RASR_SIZE_Pos) /*!< MPU RASR: Region Size Field Mask */
1493:Drivers/CMSIS/Include/core_cm7.h **** 
1494:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos 0U                               /*!< MPU RASR: Region enable bit Posit
1495:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk (1UL /*<< MPU_RASR_ENABLE_Pos*/) /*!< MPU RASR: Region enable bit Disab
1496:Drivers/CMSIS/Include/core_cm7.h **** 
1497:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1498:Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1499:Drivers/CMSIS/Include/core_cm7.h **** 
1500:Drivers/CMSIS/Include/core_cm7.h ****   /**
1501:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
1502:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1503:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Floating Point Unit (FPU)
1504:Drivers/CMSIS/Include/core_cm7.h ****     @{
1505:Drivers/CMSIS/Include/core_cm7.h ****    */
1506:Drivers/CMSIS/Include/core_cm7.h **** 
1507:Drivers/CMSIS/Include/core_cm7.h ****   /**
1508:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Floating Point Unit (FPU).
1509:Drivers/CMSIS/Include/core_cm7.h ****    */
1510:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1511:Drivers/CMSIS/Include/core_cm7.h ****   {
1512:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t RESERVED0[1U];
1513:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FPCCR;  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control Register */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 28


1514:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FPCAR;  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address Register */
1515:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t FPDSCR; /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Control Register
1516:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR0;   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 */
1517:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR1;   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 */
1518:Drivers/CMSIS/Include/core_cm7.h ****     __IM uint32_t MVFR2;   /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 */
1519:Drivers/CMSIS/Include/core_cm7.h ****   } FPU_Type;
1520:Drivers/CMSIS/Include/core_cm7.h **** 
1521:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1522:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos 31U                          /*!< FPCCR: ASPEN bit Position */
1523:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk (1UL << FPU_FPCCR_ASPEN_Pos) /*!< FPCCR: ASPEN bit Mask */
1524:Drivers/CMSIS/Include/core_cm7.h **** 
1525:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos 30U                          /*!< FPCCR: LSPEN Position */
1526:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk (1UL << FPU_FPCCR_LSPEN_Pos) /*!< FPCCR: LSPEN bit Mask */
1527:Drivers/CMSIS/Include/core_cm7.h **** 
1528:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos 8U                            /*!< FPCCR: MONRDY Position */
1529:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk (1UL << FPU_FPCCR_MONRDY_Pos) /*!< FPCCR: MONRDY bit Mask */
1530:Drivers/CMSIS/Include/core_cm7.h **** 
1531:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos 6U                           /*!< FPCCR: BFRDY Position */
1532:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk (1UL << FPU_FPCCR_BFRDY_Pos) /*!< FPCCR: BFRDY bit Mask */
1533:Drivers/CMSIS/Include/core_cm7.h **** 
1534:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos 5U                           /*!< FPCCR: MMRDY Position */
1535:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk (1UL << FPU_FPCCR_MMRDY_Pos) /*!< FPCCR: MMRDY bit Mask */
1536:Drivers/CMSIS/Include/core_cm7.h **** 
1537:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos 4U                           /*!< FPCCR: HFRDY Position */
1538:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk (1UL << FPU_FPCCR_HFRDY_Pos) /*!< FPCCR: HFRDY bit Mask */
1539:Drivers/CMSIS/Include/core_cm7.h **** 
1540:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos 3U                            /*!< FPCCR: processor mode bit Position 
1541:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk (1UL << FPU_FPCCR_THREAD_Pos) /*!< FPCCR: processor mode active bit Ma
1542:Drivers/CMSIS/Include/core_cm7.h **** 
1543:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos 1U                          /*!< FPCCR: privilege level bit Position */
1544:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk (1UL << FPU_FPCCR_USER_Pos) /*!< FPCCR: privilege level bit Mask */
1545:Drivers/CMSIS/Include/core_cm7.h **** 
1546:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos 0U                                /*!< FPCCR: Lazy state preservation 
1547:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk (1UL /*<< FPU_FPCCR_LSPACT_Pos*/) /*!< FPCCR: Lazy state preservation 
1548:Drivers/CMSIS/Include/core_cm7.h **** 
1549:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1550:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos 3U                                      /*!< FPCAR: ADDRESS bit Posit
1551:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos) /*!< FPCAR: ADDRESS bit Mask 
1552:Drivers/CMSIS/Include/core_cm7.h **** 
1553:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1554:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos 26U                         /*!< FPDSCR: AHP bit Position */
1555:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk (1UL << FPU_FPDSCR_AHP_Pos) /*!< FPDSCR: AHP bit Mask */
1556:Drivers/CMSIS/Include/core_cm7.h **** 
1557:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos 25U                        /*!< FPDSCR: DN bit Position */
1558:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk (1UL << FPU_FPDSCR_DN_Pos) /*!< FPDSCR: DN bit Mask */
1559:Drivers/CMSIS/Include/core_cm7.h **** 
1560:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos 24U                        /*!< FPDSCR: FZ bit Position */
1561:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk (1UL << FPU_FPDSCR_FZ_Pos) /*!< FPDSCR: FZ bit Mask */
1562:Drivers/CMSIS/Include/core_cm7.h **** 
1563:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos 22U                           /*!< FPDSCR: RMode bit Position */
1564:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk (3UL << FPU_FPDSCR_RMode_Pos) /*!< FPDSCR: RMode bit Mask */
1565:Drivers/CMSIS/Include/core_cm7.h **** 
1566:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1567:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos 28U                                        /*!< MVFR0: FP r
1568:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos) /*!< MVFR0: FP r
1569:Drivers/CMSIS/Include/core_cm7.h **** 
1570:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos 24U                                    /*!< MVFR0: Short vector
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 29


1571:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk (0xFUL << FPU_MVFR0_Short_vectors_Pos) /*!< MVFR0: Short vector
1572:Drivers/CMSIS/Include/core_cm7.h **** 
1573:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos 20U                                  /*!< MVFR0: Square root bits
1574:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk (0xFUL << FPU_MVFR0_Square_root_Pos) /*!< MVFR0: Square root bits
1575:Drivers/CMSIS/Include/core_cm7.h **** 
1576:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos 16U                             /*!< MVFR0: Divide bits Position */
1577:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk (0xFUL << FPU_MVFR0_Divide_Pos) /*!< MVFR0: Divide bits Mask */
1578:Drivers/CMSIS/Include/core_cm7.h **** 
1579:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos 12U                                        /*!< MVFR0: FP e
1580:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos) /*!< MVFR0: FP e
1581:Drivers/CMSIS/Include/core_cm7.h **** 
1582:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos 8U                                        /*!< MVFR0: Double
1583:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk (0xFUL << FPU_MVFR0_Double_precision_Pos) /*!< MVFR0: Double
1584:Drivers/CMSIS/Include/core_cm7.h **** 
1585:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos 4U                                        /*!< MVFR0: Single
1586:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk (0xFUL << FPU_MVFR0_Single_precision_Pos) /*!< MVFR0: Single
1587:Drivers/CMSIS/Include/core_cm7.h **** 
1588:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos 0U                                            /*!< MVFR0: A_
1589:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/) /*!< MVFR0: A_
1590:Drivers/CMSIS/Include/core_cm7.h **** 
1591:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1592:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos 28U                                   /*!< MVFR1: FP fused MAC b
1593:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos) /*!< MVFR1: FP fused MAC b
1594:Drivers/CMSIS/Include/core_cm7.h **** 
1595:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos 24U                              /*!< MVFR1: FP HPFP bits Position */
1596:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk (0xFUL << FPU_MVFR1_FP_HPFP_Pos) /*!< MVFR1: FP HPFP bits Mask */
1597:Drivers/CMSIS/Include/core_cm7.h **** 
1598:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos 4U                                  /*!< MVFR1: D_NaN mode bits Po
1599:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk (0xFUL << FPU_MVFR1_D_NaN_mode_Pos) /*!< MVFR1: D_NaN mode bits Ma
1600:Drivers/CMSIS/Include/core_cm7.h **** 
1601:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos 0U                                    /*!< MVFR1: FtZ mode bits Posi
1602:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/) /*!< MVFR1: FtZ mode bits Mask
1603:Drivers/CMSIS/Include/core_cm7.h **** 
1604:Drivers/CMSIS/Include/core_cm7.h ****   /* Media and FP Feature Register 2 Definitions */
1605:Drivers/CMSIS/Include/core_cm7.h **** 
1606:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of group CMSIS_FPU */
1607:Drivers/CMSIS/Include/core_cm7.h **** 
1608:Drivers/CMSIS/Include/core_cm7.h ****   /**
1609:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_core_register
1610:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1611:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Type definitions for the Core Debug Registers
1612:Drivers/CMSIS/Include/core_cm7.h ****     @{
1613:Drivers/CMSIS/Include/core_cm7.h ****    */
1614:Drivers/CMSIS/Include/core_cm7.h **** 
1615:Drivers/CMSIS/Include/core_cm7.h ****   /**
1616:Drivers/CMSIS/Include/core_cm7.h ****     \brief  Structure type to access the Core Debug Register (CoreDebug).
1617:Drivers/CMSIS/Include/core_cm7.h ****    */
1618:Drivers/CMSIS/Include/core_cm7.h ****   typedef struct
1619:Drivers/CMSIS/Include/core_cm7.h ****   {
1620:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t DHCSR; /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status Register */
1621:Drivers/CMSIS/Include/core_cm7.h ****     __OM uint32_t DCRSR;  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Register */
1622:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t DCRDR; /*!< Offset: 0x008 (R/W)  Debug Core Register Data Register */
1623:Drivers/CMSIS/Include/core_cm7.h ****     __IOM uint32_t DEMCR; /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Control Register */
1624:Drivers/CMSIS/Include/core_cm7.h ****   } CoreDebug_Type;
1625:Drivers/CMSIS/Include/core_cm7.h **** 
1626:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1627:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos 16U                                      /*!< CoreDebug DHCSR: D
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 30


1628:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos) /*!< CoreDebug DHCSR: D
1629:Drivers/CMSIS/Include/core_cm7.h **** 
1630:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos 25U                                     /*!< CoreDebug DHCSR
1631:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos) /*!< CoreDebug DHCSR
1632:Drivers/CMSIS/Include/core_cm7.h **** 
1633:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos 24U                                      /*!< CoreDebug DHC
1634:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos) /*!< CoreDebug DHC
1635:Drivers/CMSIS/Include/core_cm7.h **** 
1636:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos 19U                                   /*!< CoreDebug DHCSR: S_
1637:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos) /*!< CoreDebug DHCSR: S_
1638:Drivers/CMSIS/Include/core_cm7.h **** 
1639:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos 18U                                  /*!< CoreDebug DHCSR: S_SL
1640:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk (1UL << CoreDebug_DHCSR_S_SLEEP_Pos) /*!< CoreDebug DHCSR: S_SL
1641:Drivers/CMSIS/Include/core_cm7.h **** 
1642:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos 17U                                 /*!< CoreDebug DHCSR: S_HALT
1643:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk (1UL << CoreDebug_DHCSR_S_HALT_Pos) /*!< CoreDebug DHCSR: S_HALT
1644:Drivers/CMSIS/Include/core_cm7.h **** 
1645:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos 16U                                   /*!< CoreDebug DHCSR: S_
1646:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk (1UL << CoreDebug_DHCSR_S_REGRDY_Pos) /*!< CoreDebug DHCSR: S_
1647:Drivers/CMSIS/Include/core_cm7.h **** 
1648:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos 5U                                       /*!< CoreDebug DHC
1649:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos) /*!< CoreDebug DHC
1650:Drivers/CMSIS/Include/core_cm7.h **** 
1651:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos 3U                                      /*!< CoreDebug DHCSR
1652:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos) /*!< CoreDebug DHCSR
1653:Drivers/CMSIS/Include/core_cm7.h **** 
1654:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos 2U                                  /*!< CoreDebug DHCSR: C_STEP
1655:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk (1UL << CoreDebug_DHCSR_C_STEP_Pos) /*!< CoreDebug DHCSR: C_STEP
1656:Drivers/CMSIS/Include/core_cm7.h **** 
1657:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos 1U                                  /*!< CoreDebug DHCSR: C_HALT
1658:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk (1UL << CoreDebug_DHCSR_C_HALT_Pos) /*!< CoreDebug DHCSR: C_HALT
1659:Drivers/CMSIS/Include/core_cm7.h **** 
1660:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos 0U                                         /*!< CoreDebug DHC
1661:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/) /*!< CoreDebug DHC
1662:Drivers/CMSIS/Include/core_cm7.h **** 
1663:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1664:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos 16U                                 /*!< CoreDebug DCRSR: REGWnR
1665:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk (1UL << CoreDebug_DCRSR_REGWnR_Pos) /*!< CoreDebug DCRSR: REGWnR
1666:Drivers/CMSIS/Include/core_cm7.h **** 
1667:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos 0U                                         /*!< CoreDebug DCRSR:
1668:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/) /*!< CoreDebug DCRSR:
1669:Drivers/CMSIS/Include/core_cm7.h **** 
1670:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1671:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos 24U                                 /*!< CoreDebug DEMCR: TRCENA
1672:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk (1UL << CoreDebug_DEMCR_TRCENA_Pos) /*!< CoreDebug DEMCR: TRCENA
1673:Drivers/CMSIS/Include/core_cm7.h **** 
1674:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos 19U                                  /*!< CoreDebug DEMCR: MON_
1675:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk (1UL << CoreDebug_DEMCR_MON_REQ_Pos) /*!< CoreDebug DEMCR: MON_
1676:Drivers/CMSIS/Include/core_cm7.h **** 
1677:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos 18U                                   /*!< CoreDebug DEMCR: MO
1678:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk (1UL << CoreDebug_DEMCR_MON_STEP_Pos) /*!< CoreDebug DEMCR: MO
1679:Drivers/CMSIS/Include/core_cm7.h **** 
1680:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos 17U                                   /*!< CoreDebug DEMCR: MO
1681:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk (1UL << CoreDebug_DEMCR_MON_PEND_Pos) /*!< CoreDebug DEMCR: MO
1682:Drivers/CMSIS/Include/core_cm7.h **** 
1683:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos 16U                                 /*!< CoreDebug DEMCR: MON_EN
1684:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk (1UL << CoreDebug_DEMCR_MON_EN_Pos) /*!< CoreDebug DEMCR: MON_EN
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 31


1685:Drivers/CMSIS/Include/core_cm7.h **** 
1686:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos 10U                                     /*!< CoreDebug DEMCR
1687:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos) /*!< CoreDebug DEMCR
1688:Drivers/CMSIS/Include/core_cm7.h **** 
1689:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos 9U                                     /*!< CoreDebug DEMCR: 
1690:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk (1UL << CoreDebug_DEMCR_VC_INTERR_Pos) /*!< CoreDebug DEMCR: 
1691:Drivers/CMSIS/Include/core_cm7.h **** 
1692:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos 8U                                     /*!< CoreDebug DEMCR: 
1693:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos) /*!< CoreDebug DEMCR: 
1694:Drivers/CMSIS/Include/core_cm7.h **** 
1695:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos 7U                                      /*!< CoreDebug DEMCR
1696:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk (1UL << CoreDebug_DEMCR_VC_STATERR_Pos) /*!< CoreDebug DEMCR
1697:Drivers/CMSIS/Include/core_cm7.h **** 
1698:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos 6U                                     /*!< CoreDebug DEMCR: 
1699:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos) /*!< CoreDebug DEMCR: 
1700:Drivers/CMSIS/Include/core_cm7.h **** 
1701:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos 5U                                      /*!< CoreDebug DEMCR
1702:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos) /*!< CoreDebug DEMCR
1703:Drivers/CMSIS/Include/core_cm7.h **** 
1704:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos 4U                                    /*!< CoreDebug DEMCR: VC
1705:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk (1UL << CoreDebug_DEMCR_VC_MMERR_Pos) /*!< CoreDebug DEMCR: VC
1706:Drivers/CMSIS/Include/core_cm7.h **** 
1707:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos 0U                                            /*!< CoreDeb
1708:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/) /*!< CoreDeb
1709:Drivers/CMSIS/Include/core_cm7.h **** 
1710:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1711:Drivers/CMSIS/Include/core_cm7.h **** 
1712:Drivers/CMSIS/Include/core_cm7.h **** /**
1713:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1714:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1715:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1716:Drivers/CMSIS/Include/core_cm7.h ****   @{
1717:Drivers/CMSIS/Include/core_cm7.h ****  */
1718:Drivers/CMSIS/Include/core_cm7.h **** 
1719:Drivers/CMSIS/Include/core_cm7.h **** /**
1720:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1721:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1722:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1723:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1724:Drivers/CMSIS/Include/core_cm7.h **** */
1725:Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value) (((uint32_t)(value) << field##_Pos) & field##_Msk)
1726:Drivers/CMSIS/Include/core_cm7.h **** 
1727:Drivers/CMSIS/Include/core_cm7.h **** /**
1728:Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1729:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1730:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1731:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1732:Drivers/CMSIS/Include/core_cm7.h **** */
1733:Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value) (((uint32_t)(value) & field##_Msk) >> field##_Pos)
1734:Drivers/CMSIS/Include/core_cm7.h **** 
1735:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1736:Drivers/CMSIS/Include/core_cm7.h **** 
1737:Drivers/CMSIS/Include/core_cm7.h **** /**
1738:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1739:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1740:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1741:Drivers/CMSIS/Include/core_cm7.h ****   @{
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 32


1742:Drivers/CMSIS/Include/core_cm7.h ****  */
1743:Drivers/CMSIS/Include/core_cm7.h **** 
1744:Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1745:Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE (0xE000E000UL)            /*!< System Control Space Base Address */
1746:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE (0xE0000000UL)            /*!< ITM Base Address */
1747:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE (0xE0001000UL)            /*!< DWT Base Address */
1748:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE (0xE0040000UL)            /*!< TPI Base Address */
1749:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE (0xE000EDF0UL)      /*!< Core Debug Base Address */
1750:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE (SCS_BASE + 0x0010UL) /*!< SysTick Base Address */
1751:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE (SCS_BASE + 0x0100UL)    /*!< NVIC Base Address */
1752:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE (SCS_BASE + 0x0D00UL)     /*!< System Control Block Base Address */
1753:Drivers/CMSIS/Include/core_cm7.h **** 
1754:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB ((SCnSCB_Type *)SCS_BASE)             /*!< System control Register not in SCB */
1755:Drivers/CMSIS/Include/core_cm7.h **** #define SCB ((SCB_Type *)SCB_BASE)                   /*!< SCB configuration struct */
1756:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick ((SysTick_Type *)SysTick_BASE)       /*!< SysTick configuration struct */
1757:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC ((NVIC_Type *)NVIC_BASE)                /*!< NVIC configuration struct */
1758:Drivers/CMSIS/Include/core_cm7.h **** #define ITM ((ITM_Type *)ITM_BASE)                   /*!< ITM configuration struct */
1759:Drivers/CMSIS/Include/core_cm7.h **** #define DWT ((DWT_Type *)DWT_BASE)                   /*!< DWT configuration struct */
1760:Drivers/CMSIS/Include/core_cm7.h **** #define TPI ((TPI_Type *)TPI_BASE)                   /*!< TPI configuration struct */
1761:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug ((CoreDebug_Type *)CoreDebug_BASE) /*!< Core Debug configuration struct */
1762:Drivers/CMSIS/Include/core_cm7.h **** 
1763:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1764:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_BASE (SCS_BASE + 0x0D90UL) /*!< Memory Protection Unit */
1765:Drivers/CMSIS/Include/core_cm7.h **** #define MPU ((MPU_Type *)MPU_BASE)     /*!< Memory Protection Unit */
1766:Drivers/CMSIS/Include/core_cm7.h **** #endif
1767:Drivers/CMSIS/Include/core_cm7.h **** 
1768:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE (SCS_BASE + 0x0F30UL) /*!< Floating Point Unit */
1769:Drivers/CMSIS/Include/core_cm7.h **** #define FPU ((FPU_Type *)FPU_BASE)     /*!< Floating Point Unit */
1770:Drivers/CMSIS/Include/core_cm7.h **** 
1771:Drivers/CMSIS/Include/core_cm7.h ****   /*@} */
1772:Drivers/CMSIS/Include/core_cm7.h **** 
1773:Drivers/CMSIS/Include/core_cm7.h ****   /*******************************************************************************
1774:Drivers/CMSIS/Include/core_cm7.h ****    *                Hardware Abstraction Layer
1775:Drivers/CMSIS/Include/core_cm7.h ****     Core Function Interface contains:
1776:Drivers/CMSIS/Include/core_cm7.h ****     - Core NVIC Functions
1777:Drivers/CMSIS/Include/core_cm7.h ****     - Core SysTick Functions
1778:Drivers/CMSIS/Include/core_cm7.h ****     - Core Debug Functions
1779:Drivers/CMSIS/Include/core_cm7.h ****     - Core Register Access Functions
1780:Drivers/CMSIS/Include/core_cm7.h ****    ******************************************************************************/
1781:Drivers/CMSIS/Include/core_cm7.h ****   /**
1782:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1783:Drivers/CMSIS/Include/core_cm7.h ****   */
1784:Drivers/CMSIS/Include/core_cm7.h **** 
1785:Drivers/CMSIS/Include/core_cm7.h ****   /* ##########################   NVIC functions  #################################### */
1786:Drivers/CMSIS/Include/core_cm7.h ****   /**
1787:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_Core_FunctionInterface
1788:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1789:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Functions that manage interrupts and exceptions via the NVIC.
1790:Drivers/CMSIS/Include/core_cm7.h ****     @{
1791:Drivers/CMSIS/Include/core_cm7.h ****    */
1792:Drivers/CMSIS/Include/core_cm7.h **** 
1793:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1794:Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1795:Drivers/CMSIS/Include/core_cm7.h **** #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1796:Drivers/CMSIS/Include/core_cm7.h **** #endif
1797:Drivers/CMSIS/Include/core_cm7.h **** #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1798:Drivers/CMSIS/Include/core_cm7.h **** #else
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 33


1799:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_SetPriorityGrouping __NVIC_SetPriorityGrouping
1800:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetPriorityGrouping __NVIC_GetPriorityGrouping
1801:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_EnableIRQ __NVIC_EnableIRQ
1802:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetEnableIRQ __NVIC_GetEnableIRQ
1803:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_DisableIRQ __NVIC_DisableIRQ
1804:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetPendingIRQ __NVIC_GetPendingIRQ
1805:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_SetPendingIRQ __NVIC_SetPendingIRQ
1806:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_ClearPendingIRQ __NVIC_ClearPendingIRQ
1807:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetActive __NVIC_GetActive
1808:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_SetPriority __NVIC_SetPriority
1809:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetPriority __NVIC_GetPriority
1810:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_SystemReset __NVIC_SystemReset
1811:Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1812:Drivers/CMSIS/Include/core_cm7.h **** 
1813:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1814:Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1815:Drivers/CMSIS/Include/core_cm7.h **** #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1816:Drivers/CMSIS/Include/core_cm7.h **** #endif
1817:Drivers/CMSIS/Include/core_cm7.h **** #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1818:Drivers/CMSIS/Include/core_cm7.h **** #else
1819:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_SetVector __NVIC_SetVector
1820:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_GetVector __NVIC_GetVector
1821:Drivers/CMSIS/Include/core_cm7.h **** #endif /* (CMSIS_VECTAB_VIRTUAL) */
1822:Drivers/CMSIS/Include/core_cm7.h **** 
1823:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET 16
1824:Drivers/CMSIS/Include/core_cm7.h **** 
1825:Drivers/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1826:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER (0xFFFFFFF1UL)        /* return to Handler mode, uses MSP after return  
1827:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after return   
1828:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after return   
1829:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU (0xFFFFFFE1UL)    /* return to Handler mode, uses MSP after return, 
1830:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU (0xFFFFFFE9UL) /* return to Thread mode, uses MSP after return, r
1831:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU (0xFFFFFFEDUL) /* return to Thread mode, uses PSP after return, r
1832:Drivers/CMSIS/Include/core_cm7.h **** 
1833:Drivers/CMSIS/Include/core_cm7.h ****   /**
1834:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Set Priority Grouping
1835:Drivers/CMSIS/Include/core_cm7.h ****     \details Sets the priority grouping field using the required unlock sequence.
1836:Drivers/CMSIS/Include/core_cm7.h ****              The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1837:Drivers/CMSIS/Include/core_cm7.h ****              Only values from 0..7 are used.
1838:Drivers/CMSIS/Include/core_cm7.h ****              In case of a conflict between priority grouping and available
1839:Drivers/CMSIS/Include/core_cm7.h ****              priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1840:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      PriorityGroup  Priority grouping field.
1841:Drivers/CMSIS/Include/core_cm7.h ****    */
1842:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1843:Drivers/CMSIS/Include/core_cm7.h ****   {
1844:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t reg_value;
1845:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL); /* only values 0..7 are used   
1846:Drivers/CMSIS/Include/core_cm7.h **** 
1847:Drivers/CMSIS/Include/core_cm7.h ****     reg_value = SCB->AIRCR;                                                     /* read old registe
1848:Drivers/CMSIS/Include/core_cm7.h ****     reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to ch
1849:Drivers/CMSIS/Include/core_cm7.h ****     reg_value = (reg_value |
1850:Drivers/CMSIS/Include/core_cm7.h ****                  ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1851:Drivers/CMSIS/Include/core_cm7.h ****                  (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)); /* Insert write key and priority gr
1852:Drivers/CMSIS/Include/core_cm7.h ****     SCB->AIRCR = reg_value;
1853:Drivers/CMSIS/Include/core_cm7.h ****   }
1854:Drivers/CMSIS/Include/core_cm7.h **** 
1855:Drivers/CMSIS/Include/core_cm7.h ****   /**
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 34


1856:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Priority Grouping
1857:Drivers/CMSIS/Include/core_cm7.h ****     \details Reads the priority grouping field from the NVIC Interrupt Controller.
1858:Drivers/CMSIS/Include/core_cm7.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1859:Drivers/CMSIS/Include/core_cm7.h ****    */
1860:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1861:Drivers/CMSIS/Include/core_cm7.h ****   {
1862:Drivers/CMSIS/Include/core_cm7.h ****     return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1863:Drivers/CMSIS/Include/core_cm7.h ****   }
1864:Drivers/CMSIS/Include/core_cm7.h **** 
1865:Drivers/CMSIS/Include/core_cm7.h ****   /**
1866:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Enable Interrupt
1867:Drivers/CMSIS/Include/core_cm7.h ****     \details Enables a device specific interrupt in the NVIC interrupt controller.
1868:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1869:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1870:Drivers/CMSIS/Include/core_cm7.h ****    */
1871:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1872:Drivers/CMSIS/Include/core_cm7.h ****   {
1873:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1874:Drivers/CMSIS/Include/core_cm7.h ****     {
1875:Drivers/CMSIS/Include/core_cm7.h ****       NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1876:Drivers/CMSIS/Include/core_cm7.h ****     }
1877:Drivers/CMSIS/Include/core_cm7.h ****   }
1878:Drivers/CMSIS/Include/core_cm7.h **** 
1879:Drivers/CMSIS/Include/core_cm7.h ****   /**
1880:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Interrupt Enable status
1881:Drivers/CMSIS/Include/core_cm7.h ****     \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1882:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1883:Drivers/CMSIS/Include/core_cm7.h ****     \return             0  Interrupt is not enabled.
1884:Drivers/CMSIS/Include/core_cm7.h ****     \return             1  Interrupt is enabled.
1885:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1886:Drivers/CMSIS/Include/core_cm7.h ****    */
1887:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1888:Drivers/CMSIS/Include/core_cm7.h ****   {
1889:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1890:Drivers/CMSIS/Include/core_cm7.h ****     {
1891:Drivers/CMSIS/Include/core_cm7.h ****       return ((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1F
1892:Drivers/CMSIS/Include/core_cm7.h ****     }
1893:Drivers/CMSIS/Include/core_cm7.h ****     else
1894:Drivers/CMSIS/Include/core_cm7.h ****     {
1895:Drivers/CMSIS/Include/core_cm7.h ****       return (0U);
1896:Drivers/CMSIS/Include/core_cm7.h ****     }
1897:Drivers/CMSIS/Include/core_cm7.h ****   }
1898:Drivers/CMSIS/Include/core_cm7.h **** 
1899:Drivers/CMSIS/Include/core_cm7.h ****   /**
1900:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Disable Interrupt
1901:Drivers/CMSIS/Include/core_cm7.h ****     \details Disables a device specific interrupt in the NVIC interrupt controller.
1902:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1903:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1904:Drivers/CMSIS/Include/core_cm7.h ****    */
1905:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1906:Drivers/CMSIS/Include/core_cm7.h ****   {
1907:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1908:Drivers/CMSIS/Include/core_cm7.h ****     {
1909:Drivers/CMSIS/Include/core_cm7.h ****       NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1910:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
1911:Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
1912:Drivers/CMSIS/Include/core_cm7.h ****     }
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 35


1913:Drivers/CMSIS/Include/core_cm7.h ****   }
1914:Drivers/CMSIS/Include/core_cm7.h **** 
1915:Drivers/CMSIS/Include/core_cm7.h ****   /**
1916:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Pending Interrupt
1917:Drivers/CMSIS/Include/core_cm7.h ****     \details Reads the NVIC pending register and returns the pending bit for the specified device s
1918:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1919:Drivers/CMSIS/Include/core_cm7.h ****     \return             0  Interrupt status is not pending.
1920:Drivers/CMSIS/Include/core_cm7.h ****     \return             1  Interrupt status is pending.
1921:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1922:Drivers/CMSIS/Include/core_cm7.h ****    */
1923:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1924:Drivers/CMSIS/Include/core_cm7.h ****   {
1925:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1926:Drivers/CMSIS/Include/core_cm7.h ****     {
1927:Drivers/CMSIS/Include/core_cm7.h ****       return ((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1F
1928:Drivers/CMSIS/Include/core_cm7.h ****     }
1929:Drivers/CMSIS/Include/core_cm7.h ****     else
1930:Drivers/CMSIS/Include/core_cm7.h ****     {
1931:Drivers/CMSIS/Include/core_cm7.h ****       return (0U);
1932:Drivers/CMSIS/Include/core_cm7.h ****     }
1933:Drivers/CMSIS/Include/core_cm7.h ****   }
1934:Drivers/CMSIS/Include/core_cm7.h **** 
1935:Drivers/CMSIS/Include/core_cm7.h ****   /**
1936:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Set Pending Interrupt
1937:Drivers/CMSIS/Include/core_cm7.h ****     \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1938:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1939:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1940:Drivers/CMSIS/Include/core_cm7.h ****    */
1941:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1942:Drivers/CMSIS/Include/core_cm7.h ****   {
1943:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1944:Drivers/CMSIS/Include/core_cm7.h ****     {
1945:Drivers/CMSIS/Include/core_cm7.h ****       NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1946:Drivers/CMSIS/Include/core_cm7.h ****     }
1947:Drivers/CMSIS/Include/core_cm7.h ****   }
1948:Drivers/CMSIS/Include/core_cm7.h **** 
1949:Drivers/CMSIS/Include/core_cm7.h ****   /**
1950:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Clear Pending Interrupt
1951:Drivers/CMSIS/Include/core_cm7.h ****     \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1952:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1953:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
1954:Drivers/CMSIS/Include/core_cm7.h ****    */
1955:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1956:Drivers/CMSIS/Include/core_cm7.h ****   {
1957:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1958:Drivers/CMSIS/Include/core_cm7.h ****     {
1959:Drivers/CMSIS/Include/core_cm7.h ****       NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1960:Drivers/CMSIS/Include/core_cm7.h ****     }
1961:Drivers/CMSIS/Include/core_cm7.h ****   }
1962:Drivers/CMSIS/Include/core_cm7.h **** 
1963:Drivers/CMSIS/Include/core_cm7.h ****   /**
1964:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Active Interrupt
1965:Drivers/CMSIS/Include/core_cm7.h ****     \details Reads the active register in the NVIC and returns the active bit for the device specif
1966:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Device specific interrupt number.
1967:Drivers/CMSIS/Include/core_cm7.h ****     \return             0  Interrupt status is not active.
1968:Drivers/CMSIS/Include/core_cm7.h ****     \return             1  Interrupt status is active.
1969:Drivers/CMSIS/Include/core_cm7.h ****     \note    IRQn must not be negative.
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 36


1970:Drivers/CMSIS/Include/core_cm7.h ****    */
1971:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1972:Drivers/CMSIS/Include/core_cm7.h ****   {
1973:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1974:Drivers/CMSIS/Include/core_cm7.h ****     {
1975:Drivers/CMSIS/Include/core_cm7.h ****       return ((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1F
1976:Drivers/CMSIS/Include/core_cm7.h ****     }
1977:Drivers/CMSIS/Include/core_cm7.h ****     else
1978:Drivers/CMSIS/Include/core_cm7.h ****     {
1979:Drivers/CMSIS/Include/core_cm7.h ****       return (0U);
1980:Drivers/CMSIS/Include/core_cm7.h ****     }
1981:Drivers/CMSIS/Include/core_cm7.h ****   }
1982:Drivers/CMSIS/Include/core_cm7.h **** 
1983:Drivers/CMSIS/Include/core_cm7.h ****   /**
1984:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Set Interrupt Priority
1985:Drivers/CMSIS/Include/core_cm7.h ****     \details Sets the priority of a device specific interrupt or a processor exception.
1986:Drivers/CMSIS/Include/core_cm7.h ****              The interrupt number can be positive to specify a device specific interrupt,
1987:Drivers/CMSIS/Include/core_cm7.h ****              or negative to specify a processor exception.
1988:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]      IRQn  Interrupt number.
1989:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]  priority  Priority to set.
1990:Drivers/CMSIS/Include/core_cm7.h ****     \note    The priority cannot be set for every processor exception.
1991:Drivers/CMSIS/Include/core_cm7.h ****    */
1992:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1993:Drivers/CMSIS/Include/core_cm7.h ****   {
1994:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
1995:Drivers/CMSIS/Include/core_cm7.h ****     {
1996:Drivers/CMSIS/Include/core_cm7.h ****       NVIC->IP[((uint32_t)IRQn)] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFF
1997:Drivers/CMSIS/Include/core_cm7.h ****     }
1998:Drivers/CMSIS/Include/core_cm7.h ****     else
1999:Drivers/CMSIS/Include/core_cm7.h ****     {
2000:Drivers/CMSIS/Include/core_cm7.h ****       SCB->SHPR[(((uint32_t)IRQn) & 0xFUL) - 4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS))
2001:Drivers/CMSIS/Include/core_cm7.h ****     }
2002:Drivers/CMSIS/Include/core_cm7.h ****   }
2003:Drivers/CMSIS/Include/core_cm7.h **** 
2004:Drivers/CMSIS/Include/core_cm7.h ****   /**
2005:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Interrupt Priority
2006:Drivers/CMSIS/Include/core_cm7.h ****     \details Reads the priority of a device specific interrupt or a processor exception.
2007:Drivers/CMSIS/Include/core_cm7.h ****              The interrupt number can be positive to specify a device specific interrupt,
2008:Drivers/CMSIS/Include/core_cm7.h ****              or negative to specify a processor exception.
2009:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]   IRQn  Interrupt number.
2010:Drivers/CMSIS/Include/core_cm7.h ****     \return             Interrupt Priority.
2011:Drivers/CMSIS/Include/core_cm7.h ****                         Value is aligned automatically to the implemented priority bits of the micr
2012:Drivers/CMSIS/Include/core_cm7.h ****    */
2013:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2014:Drivers/CMSIS/Include/core_cm7.h ****   {
2015:Drivers/CMSIS/Include/core_cm7.h **** 
2016:Drivers/CMSIS/Include/core_cm7.h ****     if ((int32_t)(IRQn) >= 0)
2017:Drivers/CMSIS/Include/core_cm7.h ****     {
2018:Drivers/CMSIS/Include/core_cm7.h ****       return (((uint32_t)NVIC->IP[((uint32_t)IRQn)] >> (8U - __NVIC_PRIO_BITS)));
2019:Drivers/CMSIS/Include/core_cm7.h ****     }
2020:Drivers/CMSIS/Include/core_cm7.h ****     else
2021:Drivers/CMSIS/Include/core_cm7.h ****     {
2022:Drivers/CMSIS/Include/core_cm7.h ****       return (((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL) - 4UL] >> (8U - __NVIC_PRIO_BITS)));
2023:Drivers/CMSIS/Include/core_cm7.h ****     }
2024:Drivers/CMSIS/Include/core_cm7.h ****   }
2025:Drivers/CMSIS/Include/core_cm7.h **** 
2026:Drivers/CMSIS/Include/core_cm7.h ****   /**
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 37


2027:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Encode Priority
2028:Drivers/CMSIS/Include/core_cm7.h ****     \details Encodes the priority for an interrupt with the given priority group,
2029:Drivers/CMSIS/Include/core_cm7.h ****              preemptive priority value, and subpriority value.
2030:Drivers/CMSIS/Include/core_cm7.h ****              In case of a conflict between priority grouping and available
2031:Drivers/CMSIS/Include/core_cm7.h ****              priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2032:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]     PriorityGroup  Used priority group.
2033:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2034:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
2035:Drivers/CMSIS/Include/core_cm7.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
2036:Drivers/CMSIS/Include/core_cm7.h ****    */
2037:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t NVIC_EncodePriority(uint32_t PriorityGroup, uint32_t PreemptPriority, ui
2038:Drivers/CMSIS/Include/core_cm7.h ****   {
2039:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL); /* only values 0..7 are used   
2040:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PreemptPriorityBits;
2041:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SubPriorityBits;
2042:Drivers/CMSIS/Include/core_cm7.h **** 
2043:Drivers/CMSIS/Include/core_cm7.h ****     PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__
2044:Drivers/CMSIS/Include/core_cm7.h ****     SubPriorityBits = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32
2045:Drivers/CMSIS/Include/core_cm7.h **** 
2046:Drivers/CMSIS/Include/core_cm7.h ****     return (
2047:Drivers/CMSIS/Include/core_cm7.h ****         ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
2048:Drivers/CMSIS/Include/core_cm7.h ****         ((SubPriority & (uint32_t)((1UL << (SubPriorityBits)) - 1UL))));
2049:Drivers/CMSIS/Include/core_cm7.h ****   }
2050:Drivers/CMSIS/Include/core_cm7.h **** 
2051:Drivers/CMSIS/Include/core_cm7.h ****   /**
2052:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Decode Priority
2053:Drivers/CMSIS/Include/core_cm7.h ****     \details Decodes an interrupt priority value with a given priority group to
2054:Drivers/CMSIS/Include/core_cm7.h ****              preemptive priority value and subpriority value.
2055:Drivers/CMSIS/Include/core_cm7.h ****              In case of a conflict between priority grouping and available
2056:Drivers/CMSIS/Include/core_cm7.h ****              priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2057:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
2058:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]     PriorityGroup  Used priority group.
2059:Drivers/CMSIS/Include/core_cm7.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2060:Drivers/CMSIS/Include/core_cm7.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
2061:Drivers/CMSIS/Include/core_cm7.h ****    */
2062:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void NVIC_DecodePriority(uint32_t Priority, uint32_t PriorityGroup, uint32_t *con
2063:Drivers/CMSIS/Include/core_cm7.h ****   {
2064:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL); /* only values 0..7 are used   
2065:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t PreemptPriorityBits;
2066:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SubPriorityBits;
2067:Drivers/CMSIS/Include/core_cm7.h **** 
2068:Drivers/CMSIS/Include/core_cm7.h ****     PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__
2069:Drivers/CMSIS/Include/core_cm7.h ****     SubPriorityBits = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32
2070:Drivers/CMSIS/Include/core_cm7.h **** 
2071:Drivers/CMSIS/Include/core_cm7.h ****     *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) -
2072:Drivers/CMSIS/Include/core_cm7.h ****     *pSubPriority = (Priority) & (uint32_t)((1UL << (SubPriorityBits)) - 1UL);
2073:Drivers/CMSIS/Include/core_cm7.h ****   }
2074:Drivers/CMSIS/Include/core_cm7.h **** 
2075:Drivers/CMSIS/Include/core_cm7.h ****   /**
2076:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Set Interrupt Vector
2077:Drivers/CMSIS/Include/core_cm7.h ****     \details Sets an interrupt vector in SRAM based interrupt vector table.
2078:Drivers/CMSIS/Include/core_cm7.h ****              The interrupt number can be positive to specify a device specific interrupt,
2079:Drivers/CMSIS/Include/core_cm7.h ****              or negative to specify a processor exception.
2080:Drivers/CMSIS/Include/core_cm7.h ****              VTOR must been relocated to SRAM before.
2081:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]   IRQn      Interrupt number
2082:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]   vector    Address of interrupt handler function
2083:Drivers/CMSIS/Include/core_cm7.h ****    */
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 38


2084:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2085:Drivers/CMSIS/Include/core_cm7.h ****   {
2086:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t *vectors = (uint32_t *)SCB->VTOR;
2087:Drivers/CMSIS/Include/core_cm7.h ****     vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2088:Drivers/CMSIS/Include/core_cm7.h ****   }
2089:Drivers/CMSIS/Include/core_cm7.h **** 
2090:Drivers/CMSIS/Include/core_cm7.h ****   /**
2091:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Get Interrupt Vector
2092:Drivers/CMSIS/Include/core_cm7.h ****     \details Reads an interrupt vector from interrupt vector table.
2093:Drivers/CMSIS/Include/core_cm7.h ****              The interrupt number can be positive to specify a device specific interrupt,
2094:Drivers/CMSIS/Include/core_cm7.h ****              or negative to specify a processor exception.
2095:Drivers/CMSIS/Include/core_cm7.h ****     \param [in]   IRQn      Interrupt number.
2096:Drivers/CMSIS/Include/core_cm7.h ****     \return                 Address of interrupt handler function
2097:Drivers/CMSIS/Include/core_cm7.h ****    */
2098:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2099:Drivers/CMSIS/Include/core_cm7.h ****   {
2100:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t *vectors = (uint32_t *)SCB->VTOR;
2101:Drivers/CMSIS/Include/core_cm7.h ****     return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2102:Drivers/CMSIS/Include/core_cm7.h ****   }
2103:Drivers/CMSIS/Include/core_cm7.h **** 
2104:Drivers/CMSIS/Include/core_cm7.h ****   /**
2105:Drivers/CMSIS/Include/core_cm7.h ****     \brief   System Reset
2106:Drivers/CMSIS/Include/core_cm7.h ****     \details Initiates a system reset request to reset the MCU.
2107:Drivers/CMSIS/Include/core_cm7.h ****    */
2108:Drivers/CMSIS/Include/core_cm7.h ****   __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2109:Drivers/CMSIS/Include/core_cm7.h ****   {
2110:Drivers/CMSIS/Include/core_cm7.h ****     __DSB(); /* Ensure all outstanding memory accesses included
2111:Drivers/CMSIS/Include/core_cm7.h ****                 buffered write are completed before reset */
2112:Drivers/CMSIS/Include/core_cm7.h ****     SCB->AIRCR = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
2113:Drivers/CMSIS/Include/core_cm7.h ****                             (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2114:Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk); /* Keep priority group unchanged */
2115:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();                                            /* Ensure completion of memory access */
2116:Drivers/CMSIS/Include/core_cm7.h **** 
2117:Drivers/CMSIS/Include/core_cm7.h ****     for (;;) /* wait until reset */
2118:Drivers/CMSIS/Include/core_cm7.h ****     {
2119:Drivers/CMSIS/Include/core_cm7.h ****       __NOP();
2120:Drivers/CMSIS/Include/core_cm7.h ****     }
2121:Drivers/CMSIS/Include/core_cm7.h ****   }
2122:Drivers/CMSIS/Include/core_cm7.h **** 
2123:Drivers/CMSIS/Include/core_cm7.h ****   /*@} end of CMSIS_Core_NVICFunctions */
2124:Drivers/CMSIS/Include/core_cm7.h **** 
2125:Drivers/CMSIS/Include/core_cm7.h ****   /* ##########################  MPU functions  #################################### */
2126:Drivers/CMSIS/Include/core_cm7.h **** 
2127:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2128:Drivers/CMSIS/Include/core_cm7.h **** 
2129:Drivers/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2130:Drivers/CMSIS/Include/core_cm7.h **** 
2131:Drivers/CMSIS/Include/core_cm7.h **** #endif
2132:Drivers/CMSIS/Include/core_cm7.h **** 
2133:Drivers/CMSIS/Include/core_cm7.h ****   /* ##########################  FPU functions  #################################### */
2134:Drivers/CMSIS/Include/core_cm7.h ****   /**
2135:Drivers/CMSIS/Include/core_cm7.h ****     \ingroup  CMSIS_Core_FunctionInterface
2136:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_Core_FpuFunctions FPU Functions
2137:Drivers/CMSIS/Include/core_cm7.h ****     \brief    Function that provides FPU type.
2138:Drivers/CMSIS/Include/core_cm7.h ****     @{
2139:Drivers/CMSIS/Include/core_cm7.h ****    */
2140:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 39


2141:Drivers/CMSIS/Include/core_cm7.h ****   /**
2142:Drivers/CMSIS/Include/core_cm7.h ****     \brief   get FPU type
2143:Drivers/CMSIS/Include/core_cm7.h ****     \details returns the FPU type
2144:Drivers/CMSIS/Include/core_cm7.h ****     \returns
2145:Drivers/CMSIS/Include/core_cm7.h ****      - \b  0: No FPU
2146:Drivers/CMSIS/Include/core_cm7.h ****      - \b  1: Single precision FPU
2147:Drivers/CMSIS/Include/core_cm7.h ****      - \b  2: Double + Single precision FPU
2148:Drivers/CMSIS/Include/core_cm7.h ****    */
2149:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2150:Drivers/CMSIS/Include/core_cm7.h ****   {
2151:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t mvfr0;
2152:Drivers/CMSIS/Include/core_cm7.h **** 
2153:Drivers/CMSIS/Include/core_cm7.h ****     mvfr0 = SCB->MVFR0;
2154:Drivers/CMSIS/Include/core_cm7.h ****     if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2155:Drivers/CMSIS/Include/core_cm7.h ****     {
2156:Drivers/CMSIS/Include/core_cm7.h ****       return 2U; /* Double + Single precision FPU */
2157:Drivers/CMSIS/Include/core_cm7.h ****     }
2158:Drivers/CMSIS/Include/core_cm7.h ****     else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2159:Drivers/CMSIS/Include/core_cm7.h ****     {
2160:Drivers/CMSIS/Include/core_cm7.h ****       return 1U; /* Single precision FPU */
2161:Drivers/CMSIS/Include/core_cm7.h ****     }
2162:Drivers/CMSIS/Include/core_cm7.h ****     else
2163:Drivers/CMSIS/Include/core_cm7.h ****     {
2164:Drivers/CMSIS/Include/core_cm7.h ****       return 0U; /* No FPU */
2165:Drivers/CMSIS/Include/core_cm7.h ****     }
2166:Drivers/CMSIS/Include/core_cm7.h ****   }
2167:Drivers/CMSIS/Include/core_cm7.h **** 
2168:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2169:Drivers/CMSIS/Include/core_cm7.h **** 
2170:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2171:Drivers/CMSIS/Include/core_cm7.h **** /**
2172:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2173:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2174:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2175:Drivers/CMSIS/Include/core_cm7.h ****   @{
2176:Drivers/CMSIS/Include/core_cm7.h ****  */
2177:Drivers/CMSIS/Include/core_cm7.h **** 
2178:Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2179:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x) (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Pos)
2180:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x) (((x) & SCB_CCSIDR_NUMSETS_Msk) >> SCB_CCSIDR_NUMSETS_Pos)
2181:Drivers/CMSIS/Include/core_cm7.h **** 
2182:Drivers/CMSIS/Include/core_cm7.h ****   /**
2183:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Enable I-Cache
2184:Drivers/CMSIS/Include/core_cm7.h ****     \details Turns on I-Cache
2185:Drivers/CMSIS/Include/core_cm7.h ****     */
2186:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_EnableICache(void)
2187:Drivers/CMSIS/Include/core_cm7.h ****   {
  28              		.loc 2 2187 3 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
2188:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2189:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
  33              		.loc 2 2189 5 view .LVU1
  34              	.LBB22:
  35              	.LBI22:
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 40


  36              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 41


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 42


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 43


 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 44


 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 45


 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 46


 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 47


 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 48


 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 49


 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 50


 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 51


 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 52


 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 53


 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 54


 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 55


 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  37              		.loc 3 877 27 view .LVU2
  38              	.LBB23:
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  39              		.loc 3 879 3 view .LVU3
  40              		.syntax unified
  41              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 BFF34F8F 		dsb 0xF
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.LBE23:
  47              	.LBE22:
2190:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
  48              		.loc 2 2190 5 view .LVU4
  49              	.LBB24:
  50              	.LBI24:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  51              		.loc 3 866 27 view .LVU5
  52              	.LBB25:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  53              		.loc 3 868 3 view .LVU6
  54              		.syntax unified
  55              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  56 0004 BFF36F8F 		isb 0xF
  57              	@ 0 "" 2
  58              		.thumb
  59              		.syntax unified
  60              	.LBE25:
  61              	.LBE24:
2191:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL; /* invalidate I-Cache */
  62              		.loc 2 2191 5 view .LVU7
  63              		.loc 2 2191 18 is_stmt 0 view .LVU8
  64 0008 084B     		ldr	r3, .L2
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 56


  65 000a 0022     		movs	r2, #0
  66 000c C3F85022 		str	r2, [r3, #592]
2192:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
  67              		.loc 2 2192 5 is_stmt 1 view .LVU9
  68              	.LBB26:
  69              	.LBI26:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  70              		.loc 3 877 27 view .LVU10
  71              	.LBB27:
  72              		.loc 3 879 3 view .LVU11
  73              		.syntax unified
  74              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  75 0010 BFF34F8F 		dsb 0xF
  76              	@ 0 "" 2
  77              		.thumb
  78              		.syntax unified
  79              	.LBE27:
  80              	.LBE26:
2193:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
  81              		.loc 2 2193 5 view .LVU12
  82              	.LBB28:
  83              	.LBI28:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  84              		.loc 3 866 27 view .LVU13
  85              	.LBB29:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  86              		.loc 3 868 3 view .LVU14
  87              		.syntax unified
  88              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  89 0014 BFF36F8F 		isb 0xF
  90              	@ 0 "" 2
  91              		.thumb
  92              		.syntax unified
  93              	.LBE29:
  94              	.LBE28:
2194:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |= (uint32_t)SCB_CCR_IC_Msk; /* enable I-Cache */
  95              		.loc 2 2194 5 view .LVU15
  96              		.loc 2 2194 8 is_stmt 0 view .LVU16
  97 0018 5A69     		ldr	r2, [r3, #20]
  98              		.loc 2 2194 14 view .LVU17
  99 001a 42F40032 		orr	r2, r2, #131072
 100 001e 5A61     		str	r2, [r3, #20]
2195:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 101              		.loc 2 2195 5 is_stmt 1 view .LVU18
 102              	.LBB30:
 103              	.LBI30:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 104              		.loc 3 877 27 view .LVU19
 105              	.LBB31:
 106              		.loc 3 879 3 view .LVU20
 107              		.syntax unified
 108              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 109 0020 BFF34F8F 		dsb 0xF
 110              	@ 0 "" 2
 111              		.thumb
 112              		.syntax unified
 113              	.LBE31:
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 57


 114              	.LBE30:
2196:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 115              		.loc 2 2196 5 view .LVU21
 116              	.LBB32:
 117              	.LBI32:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 118              		.loc 3 866 27 view .LVU22
 119              	.LBB33:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 120              		.loc 3 868 3 view .LVU23
 121              		.syntax unified
 122              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 123 0024 BFF36F8F 		isb 0xF
 124              	@ 0 "" 2
 125              		.thumb
 126              		.syntax unified
 127              	.LBE33:
 128              	.LBE32:
2197:Drivers/CMSIS/Include/core_cm7.h **** #endif
2198:Drivers/CMSIS/Include/core_cm7.h ****   }
 129              		.loc 2 2198 3 is_stmt 0 view .LVU24
 130 0028 7047     		bx	lr
 131              	.L3:
 132 002a 00BF     		.align	2
 133              	.L2:
 134 002c 00ED00E0 		.word	-536810240
 135              		.cfi_endproc
 136              	.LFE126:
 138              		.section	.text.SCB_EnableDCache,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	SCB_EnableDCache:
 145              	.LFB129:
2199:Drivers/CMSIS/Include/core_cm7.h **** 
2200:Drivers/CMSIS/Include/core_cm7.h ****   /**
2201:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Disable I-Cache
2202:Drivers/CMSIS/Include/core_cm7.h ****     \details Turns off I-Cache
2203:Drivers/CMSIS/Include/core_cm7.h ****     */
2204:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_DisableICache(void)
2205:Drivers/CMSIS/Include/core_cm7.h ****   {
2206:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2207:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2208:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2209:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk; /* disable I-Cache */
2210:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                    /* invalidate I-Cache */
2211:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2212:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2213:Drivers/CMSIS/Include/core_cm7.h **** #endif
2214:Drivers/CMSIS/Include/core_cm7.h ****   }
2215:Drivers/CMSIS/Include/core_cm7.h **** 
2216:Drivers/CMSIS/Include/core_cm7.h ****   /**
2217:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Invalidate I-Cache
2218:Drivers/CMSIS/Include/core_cm7.h ****     \details Invalidates I-Cache
2219:Drivers/CMSIS/Include/core_cm7.h ****     */
2220:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_InvalidateICache(void)
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 58


2221:Drivers/CMSIS/Include/core_cm7.h ****   {
2222:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2223:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2224:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2225:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2226:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2227:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2228:Drivers/CMSIS/Include/core_cm7.h **** #endif
2229:Drivers/CMSIS/Include/core_cm7.h ****   }
2230:Drivers/CMSIS/Include/core_cm7.h **** 
2231:Drivers/CMSIS/Include/core_cm7.h ****   /**
2232:Drivers/CMSIS/Include/core_cm7.h ****     \brief   Enable D-Cache
2233:Drivers/CMSIS/Include/core_cm7.h ****     \details Turns on D-Cache
2234:Drivers/CMSIS/Include/core_cm7.h ****     */
2235:Drivers/CMSIS/Include/core_cm7.h ****   __STATIC_INLINE void SCB_EnableDCache(void)
2236:Drivers/CMSIS/Include/core_cm7.h ****   {
 146              		.loc 2 2236 3 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151 0000 10B4     		push	{r4}
 152              		.cfi_def_cfa_offset 4
 153              		.cfi_offset 4, -4
2237:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2238:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
 154              		.loc 2 2238 5 view .LVU26
2239:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
 155              		.loc 2 2239 5 view .LVU27
2240:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
 156              		.loc 2 2240 5 view .LVU28
2241:Drivers/CMSIS/Include/core_cm7.h **** 
2242:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/ /* Level 1 data cache */
 157              		.loc 2 2242 5 view .LVU29
 158              		.loc 2 2242 17 is_stmt 0 view .LVU30
 159 0002 154B     		ldr	r3, .L9
 160 0004 0022     		movs	r2, #0
 161 0006 C3F88420 		str	r2, [r3, #132]
2243:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 162              		.loc 2 2243 5 is_stmt 1 view .LVU31
 163              	.LBB34:
 164              	.LBI34:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 165              		.loc 3 877 27 view .LVU32
 166              	.LBB35:
 167              		.loc 3 879 3 view .LVU33
 168              		.syntax unified
 169              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 170 000a BFF34F8F 		dsb 0xF
 171              	@ 0 "" 2
 172              		.thumb
 173              		.syntax unified
 174              	.LBE35:
 175              	.LBE34:
2244:Drivers/CMSIS/Include/core_cm7.h **** 
2245:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 176              		.loc 2 2245 5 view .LVU34
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 59


 177              		.loc 2 2245 12 is_stmt 0 view .LVU35
 178 000e D3F88040 		ldr	r4, [r3, #128]
 179              	.LVL0:
2246:Drivers/CMSIS/Include/core_cm7.h **** 
2247:Drivers/CMSIS/Include/core_cm7.h ****     /* invalidate D-Cache */
2248:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 180              		.loc 2 2248 5 is_stmt 1 view .LVU36
 181              		.loc 2 2248 10 is_stmt 0 view .LVU37
 182 0012 C4F34E30 		ubfx	r0, r4, #13, #15
 183              	.LVL1:
 184              		.loc 2 2248 10 view .LVU38
 185 0016 00E0     		b	.L6
 186              	.LVL2:
 187              	.L7:
2249:Drivers/CMSIS/Include/core_cm7.h ****     do
2250:Drivers/CMSIS/Include/core_cm7.h ****     {
2251:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2252:Drivers/CMSIS/Include/core_cm7.h ****       do
2253:Drivers/CMSIS/Include/core_cm7.h ****       {
2254:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2255:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk));
2256:Drivers/CMSIS/Include/core_cm7.h **** #if defined(__CC_ARM)
2257:Drivers/CMSIS/Include/core_cm7.h ****         __schedule_barrier();
2258:Drivers/CMSIS/Include/core_cm7.h **** #endif
2259:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2260:Drivers/CMSIS/Include/core_cm7.h ****     } while (sets-- != 0U);
 188              		.loc 2 2260 18 view .LVU39
 189 0018 1846     		mov	r0, r3
 190              	.LVL3:
 191              	.L6:
2249:Drivers/CMSIS/Include/core_cm7.h ****     do
 192              		.loc 2 2249 5 is_stmt 1 view .LVU40
2251:Drivers/CMSIS/Include/core_cm7.h ****       do
 193              		.loc 2 2251 7 view .LVU41
2251:Drivers/CMSIS/Include/core_cm7.h ****       do
 194              		.loc 2 2251 12 is_stmt 0 view .LVU42
 195 001a C4F3C902 		ubfx	r2, r4, #3, #10
 196              	.LVL4:
 197              	.L5:
2252:Drivers/CMSIS/Include/core_cm7.h ****       {
 198              		.loc 2 2252 7 is_stmt 1 view .LVU43
2254:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk));
 199              		.loc 2 2254 9 view .LVU44
2254:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk));
 200              		.loc 2 2254 52 is_stmt 0 view .LVU45
 201 001e 43F6E073 		movw	r3, #16352
 202 0022 03EA4013 		and	r3, r3, r0, lsl #5
2254:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk));
 203              		.loc 2 2254 73 view .LVU46
 204 0026 43EA8273 		orr	r3, r3, r2, lsl #30
2254:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk));
 205              		.loc 2 2254 20 view .LVU47
 206 002a 0B49     		ldr	r1, .L9
 207 002c C1F86032 		str	r3, [r1, #608]
2259:Drivers/CMSIS/Include/core_cm7.h ****     } while (sets-- != 0U);
 208              		.loc 2 2259 23 is_stmt 1 discriminator 1 view .LVU48
 209 0030 1346     		mov	r3, r2
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 60


2259:Drivers/CMSIS/Include/core_cm7.h ****     } while (sets-- != 0U);
 210              		.loc 2 2259 20 is_stmt 0 discriminator 1 view .LVU49
 211 0032 013A     		subs	r2, r2, #1
 212              	.LVL5:
2259:Drivers/CMSIS/Include/core_cm7.h ****     } while (sets-- != 0U);
 213              		.loc 2 2259 23 discriminator 1 view .LVU50
 214 0034 002B     		cmp	r3, #0
 215 0036 F2D1     		bne	.L5
 216              		.loc 2 2260 21 is_stmt 1 view .LVU51
 217              		.loc 2 2260 18 is_stmt 0 view .LVU52
 218 0038 431E     		subs	r3, r0, #1
 219              	.LVL6:
 220              		.loc 2 2260 21 view .LVU53
 221 003a 0028     		cmp	r0, #0
 222 003c ECD1     		bne	.L7
2261:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 223              		.loc 2 2261 5 is_stmt 1 view .LVU54
 224              	.LBB36:
 225              	.LBI36:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 226              		.loc 3 877 27 view .LVU55
 227              	.LBB37:
 228              		.loc 3 879 3 view .LVU56
 229              		.syntax unified
 230              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 231 003e BFF34F8F 		dsb 0xF
 232              	@ 0 "" 2
 233              		.thumb
 234              		.syntax unified
 235              	.LBE37:
 236              	.LBE36:
2262:Drivers/CMSIS/Include/core_cm7.h **** 
2263:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |= (uint32_t)SCB_CCR_DC_Msk; /* enable D-Cache */
 237              		.loc 2 2263 5 view .LVU57
 238              		.loc 2 2263 8 is_stmt 0 view .LVU58
 239 0042 4B69     		ldr	r3, [r1, #20]
 240              	.LVL7:
 241              		.loc 2 2263 14 view .LVU59
 242 0044 43F48033 		orr	r3, r3, #65536
 243 0048 4B61     		str	r3, [r1, #20]
2264:Drivers/CMSIS/Include/core_cm7.h **** 
2265:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 244              		.loc 2 2265 5 is_stmt 1 view .LVU60
 245              	.LBB38:
 246              	.LBI38:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 247              		.loc 3 877 27 view .LVU61
 248              	.LBB39:
 249              		.loc 3 879 3 view .LVU62
 250              		.syntax unified
 251              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 252 004a BFF34F8F 		dsb 0xF
 253              	@ 0 "" 2
 254              		.thumb
 255              		.syntax unified
 256              	.LBE39:
 257              	.LBE38:
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 61


2266:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 258              		.loc 2 2266 5 view .LVU63
 259              	.LBB40:
 260              	.LBI40:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 261              		.loc 3 866 27 view .LVU64
 262              	.LBB41:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 263              		.loc 3 868 3 view .LVU65
 264              		.syntax unified
 265              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 266 004e BFF36F8F 		isb 0xF
 267              	@ 0 "" 2
 268              		.thumb
 269              		.syntax unified
 270              	.LBE41:
 271              	.LBE40:
2267:Drivers/CMSIS/Include/core_cm7.h **** #endif
2268:Drivers/CMSIS/Include/core_cm7.h ****   }
 272              		.loc 2 2268 3 is_stmt 0 view .LVU66
 273 0052 5DF8044B 		ldr	r4, [sp], #4
 274              		.cfi_restore 4
 275              		.cfi_def_cfa_offset 0
 276              	.LVL8:
 277              		.loc 2 2268 3 view .LVU67
 278 0056 7047     		bx	lr
 279              	.L10:
 280              		.align	2
 281              	.L9:
 282 0058 00ED00E0 		.word	-536810240
 283              		.cfi_endproc
 284              	.LFE129:
 286              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 287              		.align	2
 288              	.LC0:
 289 0000 48656C6C 		.ascii	"Hello, world!\000"
 289      6F2C2077 
 289      6F726C64 
 289      2100
 290 000e 0000     		.align	2
 291              	.LC1:
 292 0010 4572726F 		.ascii	"Error: TS Init\000"
 292      723A2054 
 292      5320496E 
 292      697400
 293 001f 00       		.align	2
 294              	.LC2:
 295 0020 4572726F 		.ascii	"Error: TS IT Config\000"
 295      723A2054 
 295      53204954 
 295      20436F6E 
 295      66696700 
 296              		.align	2
 297              	.LC3:
 298 0034 4572726F 		.ascii	"Error: AUDIO IN initialization failed\000"
 298      723A2041 
 298      5544494F 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 62


 298      20494E20 
 298      696E6974 
 299 005a 0000     		.align	2
 300              	.LC4:
 301 005c 4572726F 		.ascii	"Error: AUDIO IN Scratch\000"
 301      723A2041 
 301      5544494F 
 301      20494E20 
 301      53637261 
 302              		.align	2
 303              	.LC5:
 304 0074 4572726F 		.ascii	"Error: AUDIO OUT INIT\000"
 304      723A2041 
 304      5544494F 
 304      204F5554 
 304      20494E49 
 305 008a 0000     		.align	2
 306              	.LC6:
 307 008c 0D48656C 		.ascii	"\015Hello, world!\012\015\000"
 307      6C6F2C20 
 307      776F726C 
 307      64210A0D 
 307      00
 308 009d 000000   		.align	2
 309              	.LC7:
 310 00a0 4572726F 		.ascii	"Error: AUDIO IN RECORD\000"
 310      723A2041 
 310      5544494F 
 310      20494E20 
 310      5245434F 
 311 00b7 00       		.align	2
 312              	.LC8:
 313 00b8 456E7265 		.ascii	"Enregistrement Audio\000"
 313      67697374 
 313      72656D65 
 313      6E742041 
 313      7564696F 
 314 00cd 000000   		.align	2
 315              	.LC9:
 316 00d0 5265746F 		.ascii	"Retour Active\000"
 316      75722041 
 316      63746976 
 316      6500
 317 00de 0000     		.align	2
 318              	.LC10:
 319 00e0 54696D65 		.ascii	"Time: %ld\015\012\000"
 319      3A20256C 
 319      640D0A00 
 320              		.align	2
 321              	.LC11:
 322 00ec 46656174 		.ascii	"Feature Export OK\000"
 322      75726520 
 322      4578706F 
 322      7274204F 
 322      4B00
 323 00fe 0000     		.align	2
 324              	.LC12:
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 63


 325 0100 6D656C5F 		.ascii	"mel_data.txt\000"
 325      64617461 
 325      2E747874 
 325      00
 326              		.section	.text.main,"ax",%progbits
 327              		.align	1
 328              		.global	main
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	main:
 334              	.LFB177:
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** 
   3:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
   4:Core/Src/main.c **** #include "main.h"
   5:Core/Src/main.c **** #include "crc.h"
   6:Core/Src/main.c **** #include "rtc.h"
   7:Core/Src/main.c **** #include "app_x-cube-ai.h"
   8:Core/Src/main.c **** #include "fatfs.h"
   9:Core/Src/main.c **** #include "rtc.h"
  10:Core/Src/main.c **** #include "usart.h"
  11:Core/Src/main.c **** #include "ai_datatypes_defines.h"
  12:Core/Src/main.c **** #include "ai_platform.h"
  13:Core/Src/main.c **** #include "audio_classifier.h"
  14:Core/Src/main.c **** #include "audio_classifier_data.h"
  15:Core/Src/main.c **** 
  16:Core/Src/main.c **** #include "../../Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery.h"
  17:Core/Src/main.c **** #include "../../Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery_audio.h"
  18:Core/Src/main.c **** #include "../../Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery_lcd.h"
  19:Core/Src/main.c **** #include "../../Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery_ts.h"
  20:Core/Src/main.c **** #include "filtrage.h"
  21:Core/Src/main.c **** #include "screen.h"
  22:Core/Src/main.c **** #include "touchscreen.h"
  23:Core/Src/main.c **** /* END Includes -------------------------------------------------------------------*/
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Structure ----------------------------------------------------------------------*/
  26:Core/Src/main.c **** typedef struct App_HandleTypeDef
  27:Core/Src/main.c **** {
  28:Core/Src/main.c ****   uint8_t IA_activation;
  29:Core/Src/main.c ****   uint8_t record_activation;
  30:Core/Src/main.c ****   uint8_t play_activation;
  31:Core/Src/main.c ****   uint8_t output_activation;
  32:Core/Src/main.c ****   uint8_t luminosity;
  33:Core/Src/main.c ****   uint8_t volume;
  34:Core/Src/main.c **** } App_HandleTypeDef;
  35:Core/Src/main.c **** /* END Structure -----------------------------------------------------------------*/
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Variables ---------------------------------------------------------------------*/
  38:Core/Src/main.c **** uint16_t RecordBuffer[STEREO_RECORD_BUFFER_SIZE];
  39:Core/Src/main.c **** float32_t MelData[30 * 32];
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** int32_t Scratch[SCRATCH_BUFF_SIZE];
  42:Core/Src/main.c **** uint8_t audio_rec_buffer_state;
  43:Core/Src/main.c **** App_HandleTypeDef hApp;
  44:Core/Src/main.c **** /* END Variables -----------------------------------------------------------------*/
  45:Core/Src/main.c **** 
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 64


  46:Core/Src/main.c **** /* Private function prototypes ---------------------------------------------------*/
  47:Core/Src/main.c **** void SystemClock_Config(void);
  48:Core/Src/main.c **** /* END Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** int main(void)
  51:Core/Src/main.c **** {
 335              		.loc 1 51 1 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 38B5     		push	{r3, r4, r5, lr}
 340              		.cfi_def_cfa_offset 16
 341              		.cfi_offset 3, -16
 342              		.cfi_offset 4, -12
 343              		.cfi_offset 5, -8
 344              		.cfi_offset 14, -4
  52:Core/Src/main.c **** 
  53:Core/Src/main.c ****   uint8_t lcd_status = LCD_OK;
 345              		.loc 1 53 3 view .LVU69
 346              	.LVL9:
  54:Core/Src/main.c **** 
  55:Core/Src/main.c ****   /* Enable Cache ------------------------------------------------------------*/
  56:Core/Src/main.c ****   SCB_EnableICache();
 347              		.loc 1 56 3 view .LVU70
 348 0002 FFF7FEFF 		bl	SCB_EnableICache
 349              	.LVL10:
  57:Core/Src/main.c ****   SCB_EnableDCache();
 350              		.loc 1 57 3 view .LVU71
 351 0006 FFF7FEFF 		bl	SCB_EnableDCache
 352              	.LVL11:
  58:Core/Src/main.c **** 
  59:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  60:Core/Src/main.c **** 
  61:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  62:Core/Src/main.c ****   HAL_Init();
 353              		.loc 1 62 3 view .LVU72
 354 000a FFF7FEFF 		bl	HAL_Init
 355              	.LVL12:
  63:Core/Src/main.c **** 
  64:Core/Src/main.c ****   /* Configure the system clock */
  65:Core/Src/main.c ****   SystemClock_Config();
 356              		.loc 1 65 3 view .LVU73
 357 000e FFF7FEFF 		bl	SystemClock_Config
 358              	.LVL13:
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   /* Initialize all configured peripherals */
  68:Core/Src/main.c ****   MX_CRC_Init();
 359              		.loc 1 68 3 view .LVU74
 360 0012 FFF7FEFF 		bl	MX_CRC_Init
 361              	.LVL14:
  69:Core/Src/main.c ****   MX_RTC_Init();
 362              		.loc 1 69 3 view .LVU75
 363 0016 FFF7FEFF 		bl	MX_RTC_Init
 364              	.LVL15:
  70:Core/Src/main.c ****   MX_USART1_UART_Init();
 365              		.loc 1 70 3 view .LVU76
 366 001a FFF7FEFF 		bl	MX_USART1_UART_Init
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 65


 367              	.LVL16:
  71:Core/Src/main.c ****   MX_FATFS_Init();
 368              		.loc 1 71 3 view .LVU77
 369 001e FFF7FEFF 		bl	MX_FATFS_Init
 370              	.LVL17:
  72:Core/Src/main.c ****   MX_X_CUBE_AI_Init();
 371              		.loc 1 72 3 view .LVU78
 372 0022 FFF7FEFF 		bl	MX_X_CUBE_AI_Init
 373              	.LVL18:
  73:Core/Src/main.c ****   Feature_Export_Init();
 374              		.loc 1 73 3 view .LVU79
 375 0026 FFF7FEFF 		bl	Feature_Export_Init
 376              	.LVL19:
  74:Core/Src/main.c ****   BSP_LED_Init(LED1);
 377              		.loc 1 74 3 view .LVU80
 378 002a 0020     		movs	r0, #0
 379 002c FFF7FEFF 		bl	BSP_LED_Init
 380              	.LVL20:
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   // LCD Initialisation
  77:Core/Src/main.c ****   lcd_status = BSP_LCD_Init();
 381              		.loc 1 77 3 view .LVU81
 382              		.loc 1 77 16 is_stmt 0 view .LVU82
 383 0030 FFF7FEFF 		bl	BSP_LCD_Init
 384              	.LVL21:
  78:Core/Src/main.c ****   while (lcd_status != LCD_OK)
 385              		.loc 1 78 3 is_stmt 1 view .LVU83
 386              	.L12:
 387              		.loc 1 78 21 discriminator 1 view .LVU84
 388 0034 0028     		cmp	r0, #0
 389 0036 FDD1     		bne	.L12
  79:Core/Src/main.c ****     ;
  80:Core/Src/main.c ****   BSP_LCD_LayerDefaultInit(0, LCD_FB_START_ADDRESS);
 390              		.loc 1 80 3 view .LVU85
 391 0038 4FF04041 		mov	r1, #-1073741824
 392 003c FFF7FEFF 		bl	BSP_LCD_LayerDefaultInit
 393              	.LVL22:
  81:Core/Src/main.c ****   BSP_LCD_Clear(LCD_COLOR_WHITE);
 394              		.loc 1 81 3 view .LVU86
 395 0040 4FF0FF30 		mov	r0, #-1
 396 0044 FFF7FEFF 		bl	BSP_LCD_Clear
 397              	.LVL23:
  82:Core/Src/main.c ****   BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Hello, world!", CENTER_MODE);
 398              		.loc 1 82 3 view .LVU87
 399              		.loc 1 82 30 is_stmt 0 view .LVU88
 400 0048 FFF7FEFF 		bl	BSP_LCD_GetYSize
 401              	.LVL24:
 402              		.loc 1 82 3 discriminator 1 view .LVU89
 403 004c 0123     		movs	r3, #1
 404 004e 864A     		ldr	r2, .L33
 405 0050 C0F34F01 		ubfx	r1, r0, #1, #16
 406 0054 0020     		movs	r0, #0
 407 0056 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 408              	.LVL25:
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   // TouchScreen Initialisation
  85:Core/Src/main.c ****   if (BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize()) != TS_OK)
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 66


 409              		.loc 1 85 3 is_stmt 1 view .LVU90
 410              		.loc 1 85 19 is_stmt 0 view .LVU91
 411 005a FFF7FEFF 		bl	BSP_LCD_GetXSize
 412              	.LVL26:
 413 005e 0446     		mov	r4, r0
 414              		.loc 1 85 39 discriminator 1 view .LVU92
 415 0060 FFF7FEFF 		bl	BSP_LCD_GetYSize
 416              	.LVL27:
 417              		.loc 1 85 7 discriminator 2 view .LVU93
 418 0064 81B2     		uxth	r1, r0
 419 0066 A0B2     		uxth	r0, r4
 420 0068 FFF7FEFF 		bl	BSP_TS_Init
 421              	.LVL28:
 422              		.loc 1 85 6 discriminator 3 view .LVU94
 423 006c 0028     		cmp	r0, #0
 424 006e 4DD1     		bne	.L25
 425              	.L13:
  86:Core/Src/main.c ****   {
  87:Core/Src/main.c ****     BSP_LCD_SetTextColor(LCD_COLOR_RED);
  88:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
  89:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: TS Init", CENTER_MODE);
  90:Core/Src/main.c ****     Error_Handler();
  91:Core/Src/main.c ****   }
  92:Core/Src/main.c ****   if (BSP_TS_ITConfig() != TS_OK)
 426              		.loc 1 92 3 is_stmt 1 view .LVU95
 427              		.loc 1 92 7 is_stmt 0 view .LVU96
 428 0070 FFF7FEFF 		bl	BSP_TS_ITConfig
 429              	.LVL29:
 430              		.loc 1 92 6 discriminator 1 view .LVU97
 431 0074 0028     		cmp	r0, #0
 432 0076 5CD1     		bne	.L26
 433              	.L14:
  93:Core/Src/main.c ****   {
  94:Core/Src/main.c ****     BSP_LCD_SetTextColor(LCD_COLOR_RED);
  95:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
  96:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: TS IT Config", CENTER_MOD
  97:Core/Src/main.c ****     Error_Handler();
  98:Core/Src/main.c ****   }
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   // Audio In Initialisation
 101:Core/Src/main.c ****   if (BSP_AUDIO_IN_Init(BSP_AUDIO_FREQUENCY_16K, DEFAULT_AUDIO_IN_BIT_RESOLUTION, DEFAULT_AUDIO_IN_
 434              		.loc 1 101 3 is_stmt 1 view .LVU98
 435              		.loc 1 101 7 is_stmt 0 view .LVU99
 436 0078 0222     		movs	r2, #2
 437 007a 1021     		movs	r1, #16
 438 007c 4FF47A50 		mov	r0, #16000
 439 0080 FFF7FEFF 		bl	BSP_AUDIO_IN_Init
 440              	.LVL30:
 441              		.loc 1 101 6 discriminator 1 view .LVU100
 442 0084 0028     		cmp	r0, #0
 443 0086 67D1     		bne	.L27
 444              	.L15:
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     BSP_LCD_SetTextColor(LCD_COLOR_RED);
 104:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 105:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: AUDIO IN initialization f
 106:Core/Src/main.c ****     Error_Handler();
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 67


 107:Core/Src/main.c ****   }
 108:Core/Src/main.c ****   if (BSP_AUDIO_IN_AllocScratch(Scratch, SCRATCH_BUFF_SIZE) != AUDIO_OK)
 445              		.loc 1 108 3 is_stmt 1 view .LVU101
 446              		.loc 1 108 7 is_stmt 0 view .LVU102
 447 0088 4FF40071 		mov	r1, #512
 448 008c 7748     		ldr	r0, .L33+4
 449 008e FFF7FEFF 		bl	BSP_AUDIO_IN_AllocScratch
 450              	.LVL31:
 451              		.loc 1 108 6 discriminator 1 view .LVU103
 452 0092 0028     		cmp	r0, #0
 453 0094 73D1     		bne	.L28
 454              	.L16:
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     BSP_LCD_SetTextColor(LCD_COLOR_RED);
 111:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 112:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: AUDIO IN Scratch", CENTER
 113:Core/Src/main.c ****     Error_Handler();
 114:Core/Src/main.c ****   }
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   // Audio Out Initialisation
 117:Core/Src/main.c ****   if (BSP_AUDIO_OUT_Init(OUTPUT_DEVICE_HEADPHONE,
 455              		.loc 1 117 3 is_stmt 1 view .LVU104
 456              		.loc 1 117 7 is_stmt 0 view .LVU105
 457 0096 4FF47A52 		mov	r2, #16000
 458 009a 6421     		movs	r1, #100
 459 009c 0220     		movs	r0, #2
 460 009e FFF7FEFF 		bl	BSP_AUDIO_OUT_Init
 461              	.LVL32:
 462              		.loc 1 117 6 discriminator 1 view .LVU106
 463 00a2 0028     		cmp	r0, #0
 464 00a4 7ED1     		bne	.L29
 465              	.L17:
 118:Core/Src/main.c ****                          100,
 119:Core/Src/main.c ****                          BSP_AUDIO_FREQUENCY_16K) != AUDIO_OK)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     BSP_LCD_SetTextColor(LCD_COLOR_RED);
 122:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 123:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: AUDIO OUT INIT", CENTER_M
 124:Core/Src/main.c ****     Error_Handler();
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   BSP_AUDIO_OUT_SetAudioFrameSlot(CODEC_AUDIOFRAME_SLOT_02);
 466              		.loc 1 126 3 is_stmt 1 view .LVU107
 467 00a6 0520     		movs	r0, #5
 468 00a8 FFF7FEFF 		bl	BSP_AUDIO_OUT_SetAudioFrameSlot
 469              	.LVL33:
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* END MCU Configuration---------------------------------------------------*/
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   printf("\rHello, world!\n\r");
 470              		.loc 1 130 3 view .LVU108
 471 00ac 7048     		ldr	r0, .L33+8
 472 00ae FFF7FEFF 		bl	printf
 473              	.LVL34:
 131:Core/Src/main.c ****   HAL_Delay(1000);
 474              		.loc 1 131 3 view .LVU109
 475 00b2 4FF47A70 		mov	r0, #1000
 476 00b6 FFF7FEFF 		bl	HAL_Delay
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 68


 477              	.LVL35:
 132:Core/Src/main.c ****   print_Menu_Interface();
 478              		.loc 1 132 3 view .LVU110
 479 00ba FFF7FEFF 		bl	print_Menu_Interface
 480              	.LVL36:
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   if (BSP_AUDIO_IN_Record((uint16_t *)&RecordBuffer[0], STEREO_RECORD_BUFFER_SIZE) != AUDIO_OK)
 481              		.loc 1 134 3 view .LVU111
 482              		.loc 1 134 7 is_stmt 0 view .LVU112
 483 00be 4FF48051 		mov	r1, #4096
 484 00c2 6C48     		ldr	r0, .L33+12
 485 00c4 FFF7FEFF 		bl	BSP_AUDIO_IN_Record
 486              	.LVL37:
 487              		.loc 1 134 6 discriminator 1 view .LVU113
 488 00c8 0028     		cmp	r0, #0
 489 00ca 7ED1     		bne	.L30
 490              	.L18:
 135:Core/Src/main.c ****   {
 136:Core/Src/main.c ****     BSP_LCD_SetTextColor(LCD_COLOR_RED);
 137:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 138:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: AUDIO IN RECORD", CENTER_
 139:Core/Src/main.c ****     Error_Handler();
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   audio_rec_buffer_state = BUFFER_OFFSET_NONE;
 491              		.loc 1 142 3 is_stmt 1 view .LVU114
 492              		.loc 1 142 26 is_stmt 0 view .LVU115
 493 00cc 0024     		movs	r4, #0
 494 00ce 6A4B     		ldr	r3, .L33+16
 495 00d0 1C70     		strb	r4, [r3]
 143:Core/Src/main.c ****   BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Enregistrement Audio", CENTER_MODE
 496              		.loc 1 143 3 is_stmt 1 view .LVU116
 497              		.loc 1 143 30 is_stmt 0 view .LVU117
 498 00d2 FFF7FEFF 		bl	BSP_LCD_GetYSize
 499              	.LVL38:
 500              		.loc 1 143 3 discriminator 1 view .LVU118
 501 00d6 0123     		movs	r3, #1
 502 00d8 684A     		ldr	r2, .L33+20
 503 00da C0F34F01 		ubfx	r1, r0, #1, #16
 504 00de 2046     		mov	r0, r4
 505 00e0 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 506              	.LVL39:
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   HAL_Delay(2);
 507              		.loc 1 145 3 is_stmt 1 view .LVU119
 508 00e4 0220     		movs	r0, #2
 509 00e6 FFF7FEFF 		bl	HAL_Delay
 510              	.LVL40:
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* Play the recorded buffer */
 148:Core/Src/main.c ****   BSP_AUDIO_OUT_Play((uint16_t *)&RecordBuffer[0], STEREO_RECORD_BUFFER_SIZE * 2);
 511              		.loc 1 148 3 view .LVU120
 512 00ea 4FF40051 		mov	r1, #8192
 513 00ee 6148     		ldr	r0, .L33+12
 514 00f0 FFF7FEFF 		bl	BSP_AUDIO_OUT_Play
 515              	.LVL41:
 149:Core/Src/main.c ****   BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2 + 40, (uint8_t *)"Retour Active", CENTER_MODE);
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 69


 516              		.loc 1 149 3 view .LVU121
 517              		.loc 1 149 30 is_stmt 0 view .LVU122
 518 00f4 FFF7FEFF 		bl	BSP_LCD_GetYSize
 519              	.LVL42:
 520              		.loc 1 149 49 discriminator 1 view .LVU123
 521 00f8 4108     		lsrs	r1, r0, #1
 522              		.loc 1 149 3 discriminator 1 view .LVU124
 523 00fa 2831     		adds	r1, r1, #40
 524 00fc 0123     		movs	r3, #1
 525 00fe 604A     		ldr	r2, .L33+24
 526 0100 89B2     		uxth	r1, r1
 527 0102 2046     		mov	r0, r4
 528 0104 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 529              	.LVL43:
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   // OpenWavFile();
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   uint8_t res = FEATURE_EXPORT_PROGRESS;
 530              		.loc 1 153 3 is_stmt 1 view .LVU125
 531              		.loc 1 153 11 is_stmt 0 view .LVU126
 532 0108 0124     		movs	r4, #1
 533 010a 85E0     		b	.L23
 534              	.LVL44:
 535              	.L25:
  87:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 536              		.loc 1 87 5 is_stmt 1 view .LVU127
 537 010c 5D48     		ldr	r0, .L33+28
 538 010e FFF7FEFF 		bl	BSP_LCD_SetTextColor
 539              	.LVL45:
  88:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: TS Init", CENTER_MODE);
 540              		.loc 1 88 5 view .LVU128
 541 0112 4FF0FF30 		mov	r0, #-1
 542 0116 FFF7FEFF 		bl	BSP_LCD_Clear
 543              	.LVL46:
  89:Core/Src/main.c ****     Error_Handler();
 544              		.loc 1 89 5 view .LVU129
  89:Core/Src/main.c ****     Error_Handler();
 545              		.loc 1 89 32 is_stmt 0 view .LVU130
 546 011a FFF7FEFF 		bl	BSP_LCD_GetYSize
 547              	.LVL47:
  89:Core/Src/main.c ****     Error_Handler();
 548              		.loc 1 89 5 discriminator 1 view .LVU131
 549 011e 0123     		movs	r3, #1
 550 0120 594A     		ldr	r2, .L33+32
 551 0122 C0F34F01 		ubfx	r1, r0, #1, #16
 552 0126 0020     		movs	r0, #0
 553 0128 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 554              	.LVL48:
  90:Core/Src/main.c ****   }
 555              		.loc 1 90 5 is_stmt 1 view .LVU132
 556 012c FFF7FEFF 		bl	Error_Handler
 557              	.LVL49:
 558 0130 9EE7     		b	.L13
 559              	.L26:
  94:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 560              		.loc 1 94 5 view .LVU133
 561 0132 5448     		ldr	r0, .L33+28
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 70


 562 0134 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 563              	.LVL50:
  95:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: TS IT Config", CENTER_MOD
 564              		.loc 1 95 5 view .LVU134
 565 0138 4FF0FF30 		mov	r0, #-1
 566 013c FFF7FEFF 		bl	BSP_LCD_Clear
 567              	.LVL51:
  96:Core/Src/main.c ****     Error_Handler();
 568              		.loc 1 96 5 view .LVU135
  96:Core/Src/main.c ****     Error_Handler();
 569              		.loc 1 96 32 is_stmt 0 view .LVU136
 570 0140 FFF7FEFF 		bl	BSP_LCD_GetYSize
 571              	.LVL52:
  96:Core/Src/main.c ****     Error_Handler();
 572              		.loc 1 96 5 discriminator 1 view .LVU137
 573 0144 0123     		movs	r3, #1
 574 0146 514A     		ldr	r2, .L33+36
 575 0148 C0F34F01 		ubfx	r1, r0, #1, #16
 576 014c 0020     		movs	r0, #0
 577 014e FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 578              	.LVL53:
  97:Core/Src/main.c ****   }
 579              		.loc 1 97 5 is_stmt 1 view .LVU138
 580 0152 FFF7FEFF 		bl	Error_Handler
 581              	.LVL54:
 582 0156 8FE7     		b	.L14
 583              	.L27:
 103:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 584              		.loc 1 103 5 view .LVU139
 585 0158 4A48     		ldr	r0, .L33+28
 586 015a FFF7FEFF 		bl	BSP_LCD_SetTextColor
 587              	.LVL55:
 104:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: AUDIO IN initialization f
 588              		.loc 1 104 5 view .LVU140
 589 015e 4FF0FF30 		mov	r0, #-1
 590 0162 FFF7FEFF 		bl	BSP_LCD_Clear
 591              	.LVL56:
 105:Core/Src/main.c ****     Error_Handler();
 592              		.loc 1 105 5 view .LVU141
 105:Core/Src/main.c ****     Error_Handler();
 593              		.loc 1 105 32 is_stmt 0 view .LVU142
 594 0166 FFF7FEFF 		bl	BSP_LCD_GetYSize
 595              	.LVL57:
 105:Core/Src/main.c ****     Error_Handler();
 596              		.loc 1 105 5 discriminator 1 view .LVU143
 597 016a 0123     		movs	r3, #1
 598 016c 484A     		ldr	r2, .L33+40
 599 016e C0F34F01 		ubfx	r1, r0, #1, #16
 600 0172 0020     		movs	r0, #0
 601 0174 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 602              	.LVL58:
 106:Core/Src/main.c ****   }
 603              		.loc 1 106 5 is_stmt 1 view .LVU144
 604 0178 FFF7FEFF 		bl	Error_Handler
 605              	.LVL59:
 606 017c 84E7     		b	.L15
 607              	.L28:
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 71


 110:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 608              		.loc 1 110 5 view .LVU145
 609 017e 4148     		ldr	r0, .L33+28
 610 0180 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 611              	.LVL60:
 111:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: AUDIO IN Scratch", CENTER
 612              		.loc 1 111 5 view .LVU146
 613 0184 4FF0FF30 		mov	r0, #-1
 614 0188 FFF7FEFF 		bl	BSP_LCD_Clear
 615              	.LVL61:
 112:Core/Src/main.c ****     Error_Handler();
 616              		.loc 1 112 5 view .LVU147
 112:Core/Src/main.c ****     Error_Handler();
 617              		.loc 1 112 32 is_stmt 0 view .LVU148
 618 018c FFF7FEFF 		bl	BSP_LCD_GetYSize
 619              	.LVL62:
 112:Core/Src/main.c ****     Error_Handler();
 620              		.loc 1 112 5 discriminator 1 view .LVU149
 621 0190 0123     		movs	r3, #1
 622 0192 404A     		ldr	r2, .L33+44
 623 0194 C0F34F01 		ubfx	r1, r0, #1, #16
 624 0198 0020     		movs	r0, #0
 625 019a FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 626              	.LVL63:
 113:Core/Src/main.c ****   }
 627              		.loc 1 113 5 is_stmt 1 view .LVU150
 628 019e FFF7FEFF 		bl	Error_Handler
 629              	.LVL64:
 630 01a2 78E7     		b	.L16
 631              	.L29:
 121:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 632              		.loc 1 121 5 view .LVU151
 633 01a4 3748     		ldr	r0, .L33+28
 634 01a6 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 635              	.LVL65:
 122:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: AUDIO OUT INIT", CENTER_M
 636              		.loc 1 122 5 view .LVU152
 637 01aa 4FF0FF30 		mov	r0, #-1
 638 01ae FFF7FEFF 		bl	BSP_LCD_Clear
 639              	.LVL66:
 123:Core/Src/main.c ****     Error_Handler();
 640              		.loc 1 123 5 view .LVU153
 123:Core/Src/main.c ****     Error_Handler();
 641              		.loc 1 123 32 is_stmt 0 view .LVU154
 642 01b2 FFF7FEFF 		bl	BSP_LCD_GetYSize
 643              	.LVL67:
 123:Core/Src/main.c ****     Error_Handler();
 644              		.loc 1 123 5 discriminator 1 view .LVU155
 645 01b6 0123     		movs	r3, #1
 646 01b8 374A     		ldr	r2, .L33+48
 647 01ba C0F34F01 		ubfx	r1, r0, #1, #16
 648 01be 0020     		movs	r0, #0
 649 01c0 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 650              	.LVL68:
 124:Core/Src/main.c ****   }
 651              		.loc 1 124 5 is_stmt 1 view .LVU156
 652 01c4 FFF7FEFF 		bl	Error_Handler
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 72


 653              	.LVL69:
 654 01c8 6DE7     		b	.L17
 655              	.L30:
 136:Core/Src/main.c ****     BSP_LCD_Clear(LCD_COLOR_WHITE);
 656              		.loc 1 136 5 view .LVU157
 657 01ca 2E48     		ldr	r0, .L33+28
 658 01cc FFF7FEFF 		bl	BSP_LCD_SetTextColor
 659              	.LVL70:
 137:Core/Src/main.c ****     BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2, (uint8_t *)"Error: AUDIO IN RECORD", CENTER_
 660              		.loc 1 137 5 view .LVU158
 661 01d0 4FF0FF30 		mov	r0, #-1
 662 01d4 FFF7FEFF 		bl	BSP_LCD_Clear
 663              	.LVL71:
 138:Core/Src/main.c ****     Error_Handler();
 664              		.loc 1 138 5 view .LVU159
 138:Core/Src/main.c ****     Error_Handler();
 665              		.loc 1 138 32 is_stmt 0 view .LVU160
 666 01d8 FFF7FEFF 		bl	BSP_LCD_GetYSize
 667              	.LVL72:
 138:Core/Src/main.c ****     Error_Handler();
 668              		.loc 1 138 5 discriminator 1 view .LVU161
 669 01dc 0123     		movs	r3, #1
 670 01de 2F4A     		ldr	r2, .L33+52
 671 01e0 C0F34F01 		ubfx	r1, r0, #1, #16
 672 01e4 0020     		movs	r0, #0
 673 01e6 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 674              	.LVL73:
 139:Core/Src/main.c ****   }
 675              		.loc 1 139 5 is_stmt 1 view .LVU162
 676 01ea FFF7FEFF 		bl	Error_Handler
 677              	.LVL74:
 678 01ee 6DE7     		b	.L18
 679              	.LVL75:
 680              	.L32:
 681              	.LBB42:
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   // Infinite Loop
 156:Core/Src/main.c ****   while (1)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     if (audio_rec_buffer_state != BUFFER_OFFSET_NONE)
 159:Core/Src/main.c ****     {
 160:Core/Src/main.c ****       /* Copy half of the record buffer to the playback buffer */
 161:Core/Src/main.c ****       if (audio_rec_buffer_state == BUFFER_OFFSET_HALF)
 162:Core/Src/main.c ****       {
 163:Core/Src/main.c ****         uint32_t start = HAL_GetTick();
 682              		.loc 1 163 9 view .LVU163
 683              		.loc 1 163 26 is_stmt 0 view .LVU164
 684 01f0 FFF7FEFF 		bl	HAL_GetTick
 685              	.LVL76:
 686 01f4 0546     		mov	r5, r0
 687              	.LVL77:
 164:Core/Src/main.c ****         res = Feature_Export(MelData, (int16_t *)RecordBuffer, BUFFER_OFFSET_HALF);
 688              		.loc 1 164 9 is_stmt 1 view .LVU165
 689              		.loc 1 164 15 is_stmt 0 view .LVU166
 690 01f6 0122     		movs	r2, #1
 691 01f8 1E49     		ldr	r1, .L33+12
 692 01fa 2948     		ldr	r0, .L33+56
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 73


 693              	.LVL78:
 694              		.loc 1 164 15 view .LVU167
 695 01fc FFF7FEFF 		bl	Feature_Export
 696              	.LVL79:
 697 0200 0446     		mov	r4, r0
 698              	.LVL80:
 165:Core/Src/main.c ****         printf("Time: %ld\r\n", HAL_GetTick() - start);
 699              		.loc 1 165 9 is_stmt 1 view .LVU168
 700              		.loc 1 165 33 is_stmt 0 view .LVU169
 701 0202 FFF7FEFF 		bl	HAL_GetTick
 702              	.LVL81:
 703              		.loc 1 165 9 discriminator 1 view .LVU170
 704 0206 411B     		subs	r1, r0, r5
 705 0208 2648     		ldr	r0, .L33+60
 706 020a FFF7FEFF 		bl	printf
 707              	.LVL82:
 708              	.L19:
 709              		.loc 1 165 9 discriminator 1 view .LVU171
 710              	.LBE42:
 166:Core/Src/main.c ****       }
 167:Core/Src/main.c ****       else /* if(audio_rec_buffer_state == BUFFER_OFFSET_FULL)*/
 168:Core/Src/main.c ****       {
 169:Core/Src/main.c ****         uint32_t start = HAL_GetTick();
 170:Core/Src/main.c ****         res = Feature_Export(MelData, (int16_t *)RecordBuffer, BUFFER_OFFSET_FULL);
 171:Core/Src/main.c ****         printf("Time: %ld\r\n", HAL_GetTick() - start);
 172:Core/Src/main.c ****       }
 173:Core/Src/main.c ****     }
 174:Core/Src/main.c ****     if (res == FEATURE_EXPORT_OK)
 711              		.loc 1 174 5 is_stmt 1 view .LVU172
 712              		.loc 1 174 8 is_stmt 0 view .LVU173
 713 020e 022C     		cmp	r4, #2
 714 0210 18D0     		beq	.L31
 175:Core/Src/main.c ****     {
 176:Core/Src/main.c ****       BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() / 2 + 70, (uint8_t *)"Feature Export OK", CENTE
 177:Core/Src/main.c ****       // BSP_AUDIO_OUT_Stop(CODEC_PDWN_HW);
 178:Core/Src/main.c ****       WriteBufferFile_F32(MelData, 30 * 32, "mel_data.txt");
 179:Core/Src/main.c ****       while (1)
 180:Core/Src/main.c ****         ;
 181:Core/Src/main.c ****     }
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****     // Wait next data
 184:Core/Src/main.c ****     audio_rec_buffer_state = BUFFER_OFFSET_NONE;
 715              		.loc 1 184 5 is_stmt 1 view .LVU174
 716              		.loc 1 184 28 is_stmt 0 view .LVU175
 717 0212 194B     		ldr	r3, .L33+16
 718 0214 0022     		movs	r2, #0
 719 0216 1A70     		strb	r2, [r3]
 156:Core/Src/main.c ****   {
 720              		.loc 1 156 9 is_stmt 1 view .LVU176
 721              	.LVL83:
 722              	.L23:
 156:Core/Src/main.c ****   {
 723              		.loc 1 156 3 view .LVU177
 158:Core/Src/main.c ****     {
 724              		.loc 1 158 5 view .LVU178
 158:Core/Src/main.c ****     {
 725              		.loc 1 158 32 is_stmt 0 view .LVU179
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 74


 726 0218 174B     		ldr	r3, .L33+16
 727 021a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 158:Core/Src/main.c ****     {
 728              		.loc 1 158 8 view .LVU180
 729 021c 002B     		cmp	r3, #0
 730 021e F6D0     		beq	.L19
 161:Core/Src/main.c ****       {
 731              		.loc 1 161 7 is_stmt 1 view .LVU181
 161:Core/Src/main.c ****       {
 732              		.loc 1 161 10 is_stmt 0 view .LVU182
 733 0220 012B     		cmp	r3, #1
 734 0222 E5D0     		beq	.L32
 735              	.LBB43:
 169:Core/Src/main.c ****         res = Feature_Export(MelData, (int16_t *)RecordBuffer, BUFFER_OFFSET_FULL);
 736              		.loc 1 169 9 is_stmt 1 view .LVU183
 169:Core/Src/main.c ****         res = Feature_Export(MelData, (int16_t *)RecordBuffer, BUFFER_OFFSET_FULL);
 737              		.loc 1 169 26 is_stmt 0 view .LVU184
 738 0224 FFF7FEFF 		bl	HAL_GetTick
 739              	.LVL84:
 740 0228 0546     		mov	r5, r0
 741              	.LVL85:
 170:Core/Src/main.c ****         printf("Time: %ld\r\n", HAL_GetTick() - start);
 742              		.loc 1 170 9 is_stmt 1 view .LVU185
 170:Core/Src/main.c ****         printf("Time: %ld\r\n", HAL_GetTick() - start);
 743              		.loc 1 170 15 is_stmt 0 view .LVU186
 744 022a 0222     		movs	r2, #2
 745 022c 1149     		ldr	r1, .L33+12
 746 022e 1C48     		ldr	r0, .L33+56
 747              	.LVL86:
 170:Core/Src/main.c ****         printf("Time: %ld\r\n", HAL_GetTick() - start);
 748              		.loc 1 170 15 view .LVU187
 749 0230 FFF7FEFF 		bl	Feature_Export
 750              	.LVL87:
 751 0234 0446     		mov	r4, r0
 752              	.LVL88:
 171:Core/Src/main.c ****       }
 753              		.loc 1 171 9 is_stmt 1 view .LVU188
 171:Core/Src/main.c ****       }
 754              		.loc 1 171 33 is_stmt 0 view .LVU189
 755 0236 FFF7FEFF 		bl	HAL_GetTick
 756              	.LVL89:
 171:Core/Src/main.c ****       }
 757              		.loc 1 171 9 discriminator 1 view .LVU190
 758 023a 411B     		subs	r1, r0, r5
 759 023c 1948     		ldr	r0, .L33+60
 760 023e FFF7FEFF 		bl	printf
 761              	.LVL90:
 762 0242 E4E7     		b	.L19
 763              	.LVL91:
 764              	.L31:
 171:Core/Src/main.c ****       }
 765              		.loc 1 171 9 discriminator 1 view .LVU191
 766              	.LBE43:
 176:Core/Src/main.c ****       // BSP_AUDIO_OUT_Stop(CODEC_PDWN_HW);
 767              		.loc 1 176 7 is_stmt 1 view .LVU192
 176:Core/Src/main.c ****       // BSP_AUDIO_OUT_Stop(CODEC_PDWN_HW);
 768              		.loc 1 176 34 is_stmt 0 view .LVU193
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 75


 769 0244 FFF7FEFF 		bl	BSP_LCD_GetYSize
 770              	.LVL92:
 176:Core/Src/main.c ****       // BSP_AUDIO_OUT_Stop(CODEC_PDWN_HW);
 771              		.loc 1 176 53 discriminator 1 view .LVU194
 772 0248 4108     		lsrs	r1, r0, #1
 176:Core/Src/main.c ****       // BSP_AUDIO_OUT_Stop(CODEC_PDWN_HW);
 773              		.loc 1 176 7 discriminator 1 view .LVU195
 774 024a 4631     		adds	r1, r1, #70
 775 024c 0123     		movs	r3, #1
 776 024e 164A     		ldr	r2, .L33+64
 777 0250 89B2     		uxth	r1, r1
 778 0252 0020     		movs	r0, #0
 779 0254 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 780              	.LVL93:
 178:Core/Src/main.c ****       while (1)
 781              		.loc 1 178 7 is_stmt 1 view .LVU196
 782 0258 144A     		ldr	r2, .L33+68
 783 025a 4FF47071 		mov	r1, #960
 784 025e 1048     		ldr	r0, .L33+56
 785 0260 FFF7FEFF 		bl	WriteBufferFile_F32
 786              	.LVL94:
 787              	.L22:
 179:Core/Src/main.c ****         ;
 788              		.loc 1 179 7 view .LVU197
 179:Core/Src/main.c ****         ;
 789              		.loc 1 179 13 view .LVU198
 790 0264 FEE7     		b	.L22
 791              	.L34:
 792 0266 00BF     		.align	2
 793              	.L33:
 794 0268 00000000 		.word	.LC0
 795 026c 00000000 		.word	Scratch
 796 0270 8C000000 		.word	.LC6
 797 0274 00000000 		.word	RecordBuffer
 798 0278 00000000 		.word	audio_rec_buffer_state
 799 027c B8000000 		.word	.LC8
 800 0280 D0000000 		.word	.LC9
 801 0284 0000FFFF 		.word	-65536
 802 0288 10000000 		.word	.LC1
 803 028c 20000000 		.word	.LC2
 804 0290 34000000 		.word	.LC3
 805 0294 5C000000 		.word	.LC4
 806 0298 74000000 		.word	.LC5
 807 029c A0000000 		.word	.LC7
 808 02a0 00000000 		.word	MelData
 809 02a4 E0000000 		.word	.LC10
 810 02a8 EC000000 		.word	.LC11
 811 02ac 00010000 		.word	.LC12
 812              		.cfi_endproc
 813              	.LFE177:
 815              		.global	hApp
 816              		.section	.bss.hApp,"aw",%nobits
 817              		.align	2
 820              	hApp:
 821 0000 00000000 		.space	6
 821      0000
 822              		.global	audio_rec_buffer_state
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 76


 823              		.section	.bss.audio_rec_buffer_state,"aw",%nobits
 826              	audio_rec_buffer_state:
 827 0000 00       		.space	1
 828              		.global	Scratch
 829              		.section	.bss.Scratch,"aw",%nobits
 830              		.align	2
 833              	Scratch:
 834 0000 00000000 		.space	2048
 834      00000000 
 834      00000000 
 834      00000000 
 834      00000000 
 835              		.global	MelData
 836              		.section	.bss.MelData,"aw",%nobits
 837              		.align	2
 840              	MelData:
 841 0000 00000000 		.space	3840
 841      00000000 
 841      00000000 
 841      00000000 
 841      00000000 
 842              		.global	RecordBuffer
 843              		.section	.bss.RecordBuffer,"aw",%nobits
 844              		.align	2
 847              	RecordBuffer:
 848 0000 00000000 		.space	8192
 848      00000000 
 848      00000000 
 848      00000000 
 848      00000000 
 849              		.text
 850              	.Letext0:
 851              		.file 4 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 852              		.file 5 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 853              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 854              		.file 7 "Core/Inc/main.h"
 855              		.file 8 "Middlewares/ST/AI/Inc/ai_platform.h"
 856              		.file 9 "Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery.h"
 857              		.file 10 "Middlewares/Third_Party/FatFs/src/ff.h"
 858              		.file 11 "Core/Src/../../Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery_lcd.h"
 859              		.file 12 "Core/Src/../../Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery_ts.h"
 860              		.file 13 "Core/Inc/../../Drivers/CMSIS/DSP/Include/arm_math.h"
 861              		.file 14 "FATFS/App/fatfs.h"
 862              		.file 15 "Core/Inc/filtrage.h"
 863              		.file 16 "Core/Src/../../Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery_audio.h"
 864              		.file 17 "/Users/killian/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 865              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 866              		.file 19 "Core/Inc/screen.h"
 867              		.file 20 "X-CUBE-AI/App/app_x-cube-ai.h"
 868              		.file 21 "Core/Inc/usart.h"
 869              		.file 22 "Core/Inc/rtc.h"
 870              		.file 23 "Core/Inc/crc.h"
ARM GAS  /var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s 			page 77


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:20     .text.SCB_EnableICache:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:25     .text.SCB_EnableICache:00000000 SCB_EnableICache
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:134    .text.SCB_EnableICache:0000002c $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:139    .text.SCB_EnableDCache:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:144    .text.SCB_EnableDCache:00000000 SCB_EnableDCache
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:282    .text.SCB_EnableDCache:00000058 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:287    .rodata.main.str1.4:00000000 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:327    .text.main:00000000 $t
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:333    .text.main:00000000 main
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:794    .text.main:00000268 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:833    .bss.Scratch:00000000 Scratch
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:847    .bss.RecordBuffer:00000000 RecordBuffer
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:826    .bss.audio_rec_buffer_state:00000000 audio_rec_buffer_state
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:840    .bss.MelData:00000000 MelData
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:820    .bss.hApp:00000000 hApp
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:817    .bss.hApp:00000000 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:827    .bss.audio_rec_buffer_state:00000000 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:830    .bss.Scratch:00000000 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:837    .bss.MelData:00000000 $d
/var/folders/n6/c271nzx11xl4r4_m7sqjlt0m0000gn/T//ccdfLI3V.s:844    .bss.RecordBuffer:00000000 $d

UNDEFINED SYMBOLS
HAL_Init
SystemClock_Config
MX_CRC_Init
MX_RTC_Init
MX_USART1_UART_Init
MX_FATFS_Init
MX_X_CUBE_AI_Init
Feature_Export_Init
BSP_LED_Init
BSP_LCD_Init
BSP_LCD_LayerDefaultInit
BSP_LCD_Clear
BSP_LCD_GetYSize
BSP_LCD_DisplayStringAt
BSP_LCD_GetXSize
BSP_TS_Init
BSP_TS_ITConfig
BSP_AUDIO_IN_Init
BSP_AUDIO_IN_AllocScratch
BSP_AUDIO_OUT_Init
BSP_AUDIO_OUT_SetAudioFrameSlot
printf
HAL_Delay
print_Menu_Interface
BSP_AUDIO_IN_Record
BSP_AUDIO_OUT_Play
BSP_LCD_SetTextColor
Error_Handler
HAL_GetTick
Feature_Export
WriteBufferFile_F32
